@charset "UTF-8";
/* ========================================================================
   Component: Base
 ========================================================================== */
/*
 * 1. Set `font-size` to support `rem` units
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 * 3. Style
 */
html {
  /* 1 */
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  font-size: 16px;
  font-weight: normal;
  line-height: 1.5;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 3 */
  background: #fff;
  color: #666;
}

/*
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/* Links
 ========================================================================== */
/*
 * Style
 */
a,
.rmcc-link {
  color: #1e87f0;
  text-decoration: none;
  cursor: pointer;
}

a:hover,
.rmcc-link:hover,
.rmcc-link-toggle:hover .rmcc-link {
  color: #0f6ecd;
  text-decoration: underline;
}

/* Text-level semantics
 ========================================================================== */
/*
 * 1. Add the correct text decoration in Edge.
 * 2. The shorthand declaration `underline dotted` is not supported in Safari.
 */
abbr[title] {
  /* 1 */
  text-decoration: underline dotted;
  /* 2 */
  -webkit-text-decoration-style: dotted;
}

/*
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/*
 * 1. Consolas has a better baseline in running text compared to `Courier`
 * 2. Correct the odd `em` font sizing in all browsers.
 * 3. Style
 */
:not(pre) > code,
:not(pre) > kbd,
:not(pre) > samp {
  /* 1 */
  font-family: Consolas, monaco, monospace;
  /* 2 */
  font-size: 0.875rem;
  /* 3 */
  color: #f0506e;
  white-space: nowrap;
  padding: 2px 6px;
  background: #f8f8f8;
}

/*
 * Emphasize
 */
em {
  color: #f0506e;
}

/*
 * Insert
 */
ins {
  background: #ffd;
  color: #666;
  text-decoration: none;
}

/*
 * Mark
 */
mark {
  background: #ffd;
  color: #666;
}

/*
 * Quote
 */
q {
  font-style: italic;
}

/*
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/*
 * Prevents `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
 ========================================================================== */
/*
 * Remove the gap between the element and the bottom of its parent container.
 */
audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle;
}

/*
 * 1. Constrain the element to its parent width.
 * 2. Preserve the intrinsic aspect ratio and auto-scale the height of an image if the `height` attribute is present.
 * 3. Take border and padding into account.
 */
canvas,
img,
svg,
video {
  /* 1 */
  max-width: 100%;
  /* 2 */
  height: auto;
  /* 3 */
  box-sizing: border-box;
}

/*
 * Deprecated: only needed for `img` elements with `rmcc-img`
 * 1. Hide `alt` text for lazy load images.
 * 2. Fix lazy loading images if parent element is set to `display: inline` and has `overflow: hidden`.
 */
img:not([src]) {
  /* 1 */
  visibility: hidden;
  /* 2 */
  min-width: 1px;
}

/*
 * Iframe
 * Remove border in all browsers
 */
iframe {
  border: 0;
}

/* Block elements
 ========================================================================== */
/*
 * Margins
 */
p,
ul,
ol,
dl,
pre,
address,
fieldset,
figure {
  margin: 0 0 20px 0;
}

/* Add margin if adjacent element */
* + p,
* + ul,
* + ol,
* + dl,
* + pre,
* + address,
* + fieldset,
* + figure {
  margin-top: 20px;
}

/* Headings
 ========================================================================== */
h1, .rmcc-h1,
h2, .rmcc-h2,
h3, .rmcc-h3,
h4, .rmcc-h4,
h5, .rmcc-h5,
h6, .rmcc-h6,
.rmcc-heading-small,
.rmcc-heading-medium,
.rmcc-heading-large,
.rmcc-heading-xlarge,
.rmcc-heading-2xlarge,
.rmcc-heading-3xlarge {
  margin: 0 0 20px 0;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  font-weight: normal;
  color: #333;
  text-transform: none;
}

/* Add margin if adjacent element */
* + h1, * + .rmcc-h1,
* + h2, * + .rmcc-h2,
* + h3, * + .rmcc-h3,
* + h4, * + .rmcc-h4,
* + h5, * + .rmcc-h5,
* + h6, * + .rmcc-h6,
* + .rmcc-heading-small,
* + .rmcc-heading-medium,
* + .rmcc-heading-large,
* + .rmcc-heading-xlarge,
* + .rmcc-heading-2xlarge,
* + .rmcc-heading-3xlarge {
  margin-top: 40px;
}

/*
 * Sizes
 */
h1, .rmcc-h1 {
  font-size: 2.23125rem;
  line-height: 1.2;
}

h2, .rmcc-h2 {
  font-size: 1.7rem;
  line-height: 1.3;
}

h3, .rmcc-h3 {
  font-size: 1.5rem;
  line-height: 1.4;
}

h4, .rmcc-h4 {
  font-size: 1.25rem;
  line-height: 1.4;
}

h5, .rmcc-h5 {
  font-size: 16px;
  line-height: 1.4;
}

h6, .rmcc-h6 {
  font-size: 0.875rem;
  line-height: 1.4;
}

/* Tablet landscape and bigger */
@media (min-width: 960px) {
  h1, .rmcc-h1 {
    font-size: 2.625rem;
  }
  h2, .rmcc-h2 {
    font-size: 2rem;
  }
}
/* Lists
 ========================================================================== */
ul,
ol {
  padding-left: 30px;
}

/*
 * Reset margin for nested lists
 */
ul > li > ul,
ul > li > ol,
ol > li > ol,
ol > li > ul {
  margin: 0;
}

/* Description lists
 ========================================================================== */
dt {
  font-weight: bold;
}

dd {
  margin-left: 0;
}

/* Horizontal rules
 ========================================================================== */
/*
 * 1. Show the overflow in Chrome, Edge and IE.
 * 2. Add the correct text-align in Edge and IE.
 * 3. Style
 */
hr, .rmcc-hr {
  /* 1 */
  overflow: visible;
  /* 2 */
  text-align: inherit;
  /* 3 */
  margin: 0 0 20px 0;
  border: 0;
  border-top: 1px solid #e5e5e5;
}

/* Add margin if adjacent element */
* + hr,
* + .rmcc-hr {
  margin-top: 20px;
}

/* Address
 ========================================================================== */
address {
  font-style: normal;
}

/* Blockquotes
 ========================================================================== */
blockquote {
  margin: 0 0 20px 0;
  font-size: 1.25rem;
  line-height: 1.5;
  font-style: italic;
  color: #333;
}

/* Add margin if adjacent element */
* + blockquote {
  margin-top: 20px;
}

/*
 * Content
 */
blockquote p:last-of-type {
  margin-bottom: 0;
}

blockquote footer {
  margin-top: 10px;
  font-size: 0.875rem;
  line-height: 1.5;
  color: #666;
}
blockquote footer::before {
  content: "â€” ";
}

/* Preformatted text
 ========================================================================== */
/*
 * 1. Contain overflow in all browsers.
 */
pre {
  font: 0.875rem / 1.5 Consolas, monaco, monospace;
  color: #666;
  -moz-tab-size: 4;
  tab-size: 4;
  /* 1 */
  overflow: auto;
  padding: 10px;
  border: 1px solid #e5e5e5;
  border-radius: 3px;
  background: #fff;
}

pre code {
  font-family: Consolas, monaco, monospace;
}

/* Focus
 ========================================================================== */
:focus {
  outline: none;
}

:focus-visible {
  outline: 2px dotted #333;
}

/* Selection pseudo-element
 ========================================================================== */
::selection {
  background: #39f;
  color: #fff;
  text-shadow: none;
}

/* HTML5 elements
 ========================================================================== */
/*
 * 1. Add the correct display in Edge, IE 10+, and Firefox.
 * 2. Add the correct display in IE.
 */
details,
main { /* 2 */
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/*
 * Add the correct display in IE.
 */
template {
  display: none;
}

/* Pass media breakpoints to JS
 ========================================================================== */
/*
 * Breakpoints
 */
:root {
  --rmcc-breakpoint-s: 640px;
  --rmcc-breakpoint-m: 960px;
  --rmcc-breakpoint-l: 1200px;
  --rmcc-breakpoint-xl: 1600px;
}

/* ========================================================================
   Component: Link
 ========================================================================== */
/* Muted
 ========================================================================== */
a.rmcc-link-muted,
.rmcc-link-muted a,
.rmcc-link-toggle .rmcc-link-muted {
  color: #999;
}

a.rmcc-link-muted:hover,
.rmcc-link-muted a:hover,
.rmcc-link-toggle:hover .rmcc-link-muted {
  color: #666;
}

/* Text
 ========================================================================== */
a.rmcc-link-text,
.rmcc-link-text a,
.rmcc-link-toggle .rmcc-link-text {
  color: inherit;
}

a.rmcc-link-text:hover,
.rmcc-link-text a:hover,
.rmcc-link-toggle:hover .rmcc-link-text {
  color: #999;
}

/* Heading
 ========================================================================== */
a.rmcc-link-heading,
.rmcc-link-heading a,
.rmcc-link-toggle .rmcc-link-heading {
  color: inherit;
}

a.rmcc-link-heading:hover,
.rmcc-link-heading a:hover,
.rmcc-link-toggle:hover .rmcc-link-heading {
  color: #1e87f0;
  text-decoration: none;
}

/* Reset
 ========================================================================== */
/*
 * `!important` needed to override inverse component
 */
a.rmcc-link-reset,
.rmcc-link-reset a {
  color: inherit !important;
  text-decoration: none !important;
}

/* Toggle
 ========================================================================== */
.rmcc-link-toggle {
  color: inherit !important;
  text-decoration: none !important;
}

/* ========================================================================
   Component: Heading
 ========================================================================== */
.rmcc-heading-small {
  font-size: 2.6rem;
  line-height: 1.2;
}

.rmcc-heading-medium {
  font-size: 2.8875rem;
  line-height: 1.1;
}

.rmcc-heading-large {
  font-size: 3.4rem;
  line-height: 1.1;
}

.rmcc-heading-xlarge {
  font-size: 4rem;
  line-height: 1;
}

.rmcc-heading-2xlarge {
  font-size: 6rem;
  line-height: 1;
}

.rmcc-heading-3xlarge {
  font-size: 8rem;
  line-height: 1;
}

/* Tablet Landscape and bigger */
@media (min-width: 960px) {
  .rmcc-heading-small {
    font-size: 3.25rem;
  }
  .rmcc-heading-medium {
    font-size: 3.5rem;
  }
  .rmcc-heading-large {
    font-size: 4rem;
  }
  .rmcc-heading-xlarge {
    font-size: 6rem;
  }
  .rmcc-heading-2xlarge {
    font-size: 8rem;
  }
  .rmcc-heading-3xlarge {
    font-size: 11rem;
  }
}
/* Laptop and bigger */
@media (min-width: 1200px) {
  .rmcc-heading-medium {
    font-size: 4rem;
  }
  .rmcc-heading-large {
    font-size: 6rem;
  }
  .rmcc-heading-xlarge {
    font-size: 8rem;
  }
  .rmcc-heading-2xlarge {
    font-size: 11rem;
  }
  .rmcc-heading-3xlarge {
    font-size: 15rem;
  }
}
/* Primary
   Deprecated: Use `rmcc-heading-medium` instead
 ========================================================================== */
/* Tablet landscape and bigger */
/* Desktop and bigger */
/* Hero
   Deprecated: Use `rmcc-heading-xlarge` instead
 ========================================================================== */
/* Tablet landscape and bigger */
/* Desktop and bigger */
/* Divider
 ========================================================================== */
.rmcc-heading-divider {
  padding-bottom: calc(5px + 0.1em);
  border-bottom: calc(0.2px + 0.05em) solid #e5e5e5;
}

/* Bullet
 ========================================================================== */
.rmcc-heading-bullet {
  position: relative;
}

/*
 * 1. Using `inline-block` to make it work with text alignment
 * 2. Center vertically
 * 3. Style
 */
.rmcc-heading-bullet::before {
  content: "";
  /* 1 */
  display: inline-block;
  /* 2 */
  position: relative;
  top: calc(-0.1 * 1em);
  vertical-align: middle;
  /* 3 */
  height: calc(4px + 0.7em);
  margin-right: calc(5px + 0.2em);
  border-left: calc(5px + 0.1em) solid #e5e5e5;
}

/* Line
 ========================================================================== */
/*
 * Clip the child element
 */
.rmcc-heading-line {
  overflow: hidden;
}

/*
 * Extra markup is needed to make it work with text align
 */
.rmcc-heading-line > * {
  display: inline-block;
  position: relative;
}

/*
 * 1. Center vertically
 * 2. Make the element as large as possible. It's clipped by the container.
 * 3. Style
 */
.rmcc-heading-line > ::before,
.rmcc-heading-line > ::after {
  content: "";
  /* 1 */
  position: absolute;
  top: calc(50% - (calc(0.2px + 0.05em) / 2));
  /* 2 */
  width: 2000px;
  /* 3 */
  border-bottom: calc(0.2px + 0.05em) solid #e5e5e5;
}

.rmcc-heading-line > ::before {
  right: 100%;
  margin-right: calc(5px + 0.3em);
}

.rmcc-heading-line > ::after {
  left: 100%;
  margin-left: calc(5px + 0.3em);
}

/* ========================================================================
   Component: Divider
 ========================================================================== */
/*
 * 1. Reset default `hr`
 * 2. Set margin if a `div` is used for semantical reason
 */
[class*=rmcc-divider] {
  /* 1 */
  border: none;
  /* 2 */
  margin-bottom: 20px;
}

/* Add margin if adjacent element */
* + [class*=rmcc-divider] {
  margin-top: 20px;
}

/* Icon
 ========================================================================== */
.rmcc-divider-icon {
  position: relative;
  height: 20px;
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Ccircle%20fill%3D%22none%22%20stroke%3D%22%23e5e5e5%22%20stroke-width%3D%222%22%20cx%3D%2210%22%20cy%3D%2210%22%20r%3D%227%22%20%2F%3E%0A%3C%2Fsvg%3E%0A");
  background-repeat: no-repeat;
  background-position: 50% 50%;
}

.rmcc-divider-icon::before,
.rmcc-divider-icon::after {
  content: "";
  position: absolute;
  top: 50%;
  max-width: calc(50% - (50px / 2));
  border-bottom: 1px solid #e5e5e5;
}

.rmcc-divider-icon::before {
  right: calc(50% + (50px / 2));
  width: 100%;
}

.rmcc-divider-icon::after {
  left: calc(50% + (50px / 2));
  width: 100%;
}

/* Small
 ========================================================================== */
/*
 * 1. Fix height because of `inline-block`
 * 2. Using ::after and inline-block to make `text-align` work
 */
/* 1 */
.rmcc-divider-small {
  line-height: 0;
}

/* 2 */
.rmcc-divider-small::after {
  content: "";
  display: inline-block;
  width: 100px;
  max-width: 100%;
  border-top: 1px solid #e5e5e5;
  vertical-align: top;
}

/* Vertical
 ========================================================================== */
.rmcc-divider-vertical {
  width: max-content;
  height: 100px;
  margin-left: auto;
  margin-right: auto;
  border-left: 1px solid #e5e5e5;
}

/* ========================================================================
   Component: List
 ========================================================================== */
.rmcc-list {
  padding: 0;
  list-style: none;
}

/*
 * Avoid column break within the list item, when using `column-count`
 */
.rmcc-list > * {
  break-inside: avoid-column;
}

/*
 * Remove margin from the last-child
 */
.rmcc-list > * > :last-child {
  margin-bottom: 0;
}

/*
 * Style
 */
.rmcc-list > :nth-child(n+2),
.rmcc-list > * > ul {
  margin-top: 10px;
}

/* Marker modifiers
 ========================================================================== */
.rmcc-list-disc,
.rmcc-list-circle,
.rmcc-list-square,
.rmcc-list-decimal,
.rmcc-list-hyphen {
  padding-left: 30px;
}

.rmcc-list-disc {
  list-style-type: disc;
}

.rmcc-list-circle {
  list-style-type: circle;
}

.rmcc-list-square {
  list-style-type: square;
}

.rmcc-list-decimal {
  list-style-type: decimal;
}

.rmcc-list-hyphen {
  list-style-type: "â€“  ";
}

/*
 * Color modifiers
 */
.rmcc-list-muted > ::marker {
  color: #999 !important;
}

.rmcc-list-emphasis > ::marker {
  color: #333 !important;
}

.rmcc-list-primary > ::marker {
  color: #1e87f0 !important;
}

.rmcc-list-secondary > ::marker {
  color: #222 !important;
}

/* Image bullet modifier
 ========================================================================== */
.rmcc-list-bullet > * {
  position: relative;
  padding-left: 30px;
}

.rmcc-list-bullet > ::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 30px;
  height: 1.5em;
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%226%22%20height%3D%226%22%20viewBox%3D%220%200%206%206%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Ccircle%20fill%3D%22%23666%22%20cx%3D%223%22%20cy%3D%223%22%20r%3D%223%22%20%2F%3E%0A%3C%2Fsvg%3E");
  background-repeat: no-repeat;
  background-position: 50% 50%;
}

/* Style modifiers
 ========================================================================== */
/*
 * Divider
 */
.rmcc-list-divider > :nth-child(n+2) {
  margin-top: 10px;
  padding-top: 10px;
  border-top: 1px solid #e5e5e5;
}

/*
 * Striped
 */
.rmcc-list-striped > * {
  padding: 10px 10px;
}
.rmcc-list-striped > *:nth-of-type(odd) {
  border-top: 1px solid #e5e5e5;
  border-bottom: 1px solid #e5e5e5;
}

.rmcc-list-striped > :nth-of-type(odd) {
  background: #f8f8f8;
}

.rmcc-list-striped > :nth-child(n+2) {
  margin-top: 0;
}

/* Size modifier
 ========================================================================== */
.rmcc-list-large > :nth-child(n+2),
.rmcc-list-large > * > ul {
  margin-top: 20px;
}

.rmcc-list-collapse > :nth-child(n+2),
.rmcc-list-collapse > * > ul {
  margin-top: 0;
}

/*
 * Divider
 */
.rmcc-list-large.rmcc-list-divider > :nth-child(n+2) {
  margin-top: 20px;
  padding-top: 20px;
}

.rmcc-list-collapse.rmcc-list-divider > :nth-child(n+2) {
  margin-top: 0;
  padding-top: 0;
}

/*
 * Striped
 */
.rmcc-list-large.rmcc-list-striped > * {
  padding: 20px 10px;
}

.rmcc-list-collapse.rmcc-list-striped > * {
  padding-top: 0;
  padding-bottom: 0;
}

.rmcc-list-large.rmcc-list-striped > :nth-child(n+2),
.rmcc-list-collapse.rmcc-list-striped > :nth-child(n+2) {
  margin-top: 0;
}

/* ========================================================================
   Component: Description list
 ========================================================================== */
/*
 * Term
 */
.rmcc-description-list > dt {
  color: #333;
  font-size: 0.875rem;
  font-weight: normal;
  text-transform: uppercase;
}

.rmcc-description-list > dt:nth-child(n+2) {
  margin-top: 20px;
}

/*
 * Description
 */
/* Style modifier
 ========================================================================== */
/*
 * Line
 */
.rmcc-description-list-divider > dt:nth-child(n+2) {
  margin-top: 20px;
  padding-top: 20px;
  border-top: 1px solid #e5e5e5;
}

/* ========================================================================
   Component: Table
 ========================================================================== */
/*
 * 1. Remove most spacing between table cells.
 * 2. Behave like a block element
 * 3. Style
 */
.rmcc-table {
  /* 1 */
  border-collapse: collapse;
  border-spacing: 0;
  /* 2 */
  width: 100%;
  /* 3 */
  margin-bottom: 20px;
}

/* Add margin if adjacent element */
* + .rmcc-table {
  margin-top: 20px;
}

/* Header cell
 ========================================================================== */
/*
 * 1. Style
 */
.rmcc-table th {
  padding: 16px 12px;
  text-align: left;
  vertical-align: bottom;
  /* 1 */
  font-size: 0.875rem;
  font-weight: normal;
  color: #999;
  text-transform: uppercase;
}

/* Cell
 ========================================================================== */
.rmcc-table td {
  padding: 16px 12px;
  vertical-align: top;
}

/*
 * Remove margin from the last-child
 */
.rmcc-table td > :last-child {
  margin-bottom: 0;
}

/* Footer
 ========================================================================== */
.rmcc-table tfoot {
  font-size: 0.875rem;
}

/* Caption
 ========================================================================== */
.rmcc-table caption {
  font-size: 0.875rem;
  text-align: left;
  color: #999;
}

/* Alignment modifier
 ========================================================================== */
.rmcc-table-middle,
.rmcc-table-middle td {
  vertical-align: middle !important;
}

/* Style modifiers
 ========================================================================== */
/*
 * Divider
 */
.rmcc-table-divider > tr:not(:first-child),
.rmcc-table-divider > :not(:first-child) > tr,
.rmcc-table-divider > :first-child > tr:not(:first-child) {
  border-top: 1px solid #e5e5e5;
}

/*
 * Striped
 */
.rmcc-table-striped > tr:nth-of-type(odd),
.rmcc-table-striped tbody tr:nth-of-type(odd) {
  background: #f8f8f8;
  border-top: 1px solid #e5e5e5;
  border-bottom: 1px solid #e5e5e5;
}

/*
 * Hover
 */
.rmcc-table-hover > tr:hover,
.rmcc-table-hover tbody tr:hover {
  background: #ffd;
}

/* Active state
 ========================================================================== */
.rmcc-table > tr.rmcc-active,
.rmcc-table tbody tr.rmcc-active {
  background: #ffd;
}

/* Size modifier
 ========================================================================== */
.rmcc-table-small th,
.rmcc-table-small td {
  padding: 10px 12px;
}

.rmcc-table-large th,
.rmcc-table-large td {
  padding: 22px 12px;
}

/* Justify modifier
 ========================================================================== */
.rmcc-table-justify th:first-child,
.rmcc-table-justify td:first-child {
  padding-left: 0;
}

.rmcc-table-justify th:last-child,
.rmcc-table-justify td:last-child {
  padding-right: 0;
}

/* Cell size modifier
 ========================================================================== */
.rmcc-table-shrink {
  width: 1px;
}

.rmcc-table-expand {
  min-width: 150px;
}

/* Cell link modifier
 ========================================================================== */
/*
 * Does not work with `rmcc-table-justify` at the moment
 */
.rmcc-table-link {
  padding: 0 !important;
}

.rmcc-table-link > a {
  display: block;
  padding: 16px 12px;
}

.rmcc-table-small .rmcc-table-link > a {
  padding: 10px 12px;
}

/* Responsive table
 ========================================================================== */
/* Phone landscape and smaller */
@media (max-width: 959px) {
  .rmcc-table-responsive,
  .rmcc-table-responsive tbody,
  .rmcc-table-responsive th,
  .rmcc-table-responsive td,
  .rmcc-table-responsive tr {
    display: block;
  }
  .rmcc-table-responsive thead {
    display: none;
  }
  .rmcc-table-responsive th,
  .rmcc-table-responsive td {
    width: auto !important;
    max-width: none !important;
    min-width: 0 !important;
    overflow: visible !important;
    white-space: normal !important;
  }
  .rmcc-table-responsive th:not(:first-child):not(.rmcc-table-link),
  .rmcc-table-responsive td:not(:first-child):not(.rmcc-table-link),
  .rmcc-table-responsive .rmcc-table-link:not(:first-child) > a {
    padding-top: 5px !important;
  }
  .rmcc-table-responsive th:not(:last-child):not(.rmcc-table-link),
  .rmcc-table-responsive td:not(:last-child):not(.rmcc-table-link),
  .rmcc-table-responsive .rmcc-table-link:not(:last-child) > a {
    padding-bottom: 5px !important;
  }
  .rmcc-table-justify.rmcc-table-responsive th,
  .rmcc-table-justify.rmcc-table-responsive td {
    padding-left: 0;
    padding-right: 0;
  }
}
.rmcc-table tbody tr {
  transition: background-color 0.1s linear;
}

.rmcc-table-striped > tr:nth-of-type(even):last-child,
.rmcc-table-striped tbody tr:nth-of-type(even):last-child {
  border-bottom: 1px solid #e5e5e5;
}

/* ========================================================================
   Component: Icon
 ========================================================================== */
/*
 * Note: 1. - 7. is required for `button` elements. Needed for Close and Form Icon component.
 * 1. Remove margins in Chrome, Safari and Opera.
 * 2. Remove borders for `button`.
 * 3. Remove border-radius in Chrome.
 * 4. Address `overflow` set to `hidden` in IE.
 * 5. Correct `font` properties and `color` not being inherited for `button`.
 * 6. Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 7. Remove default `button` padding and background color
 * 8. Style
 * 9. Fill all SVG elements with the current text color if no `fill` attribute is set
 * 10. Let the container fit the height of the icon
 */
.rmcc-icon {
  /* 1 */
  margin: 0;
  /* 2 */
  border: none;
  /* 3 */
  border-radius: 0;
  /* 4 */
  overflow: visible;
  /* 5 */
  font: inherit;
  color: inherit;
  /* 6 */
  text-transform: none;
  /* 7. */
  padding: 0;
  background-color: transparent;
  /* 8 */
  display: inline-block;
  /* 9 */
  fill: currentcolor;
  /* 10 */
  line-height: 0;
}

/* Required for `button`. */
button.rmcc-icon:not(:disabled) {
  cursor: pointer;
}

/*
 * Remove the inner border and padding in Firefox.
 */
.rmcc-icon::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/*
 * Set the fill and stroke color of all SVG elements to the current text color
 */
.rmcc-icon:not(.rmcc-preserve) [fill*="#"]:not(.rmcc-preserve) {
  fill: currentcolor;
}

.rmcc-icon:not(.rmcc-preserve) [stroke*="#"]:not(.rmcc-preserve) {
  stroke: currentcolor;
}

/*
 * Fix Firefox blurry SVG rendering: https://bugzilla.mozilla.org/show_bug.cgi?id=1046835
 */
.rmcc-icon > * {
  transform: translate(0, 0);
}

/* Image modifier
 ========================================================================== */
/*
 * Display images in icon dimensions
 * 1. Required for `span` with background image
 * 2. Required for `image`
 */
.rmcc-icon-image {
  width: 20px;
  height: 20px;
  /* 1 */
  background-position: 50% 50%;
  background-repeat: no-repeat;
  background-size: contain;
  vertical-align: middle;
  /* 2 */
  object-fit: scale-down;
  max-width: none;
}

/* Style modifiers
 ========================================================================== */
/*
 * Link
 * 1. Allow text within link
 */
.rmcc-icon-link {
  color: #999;
  /* 1 */
  text-decoration: none !important;
}

.rmcc-icon-link:hover {
  color: #666;
}

/* OnClick + Active */
.rmcc-icon-link:active,
.rmcc-active > .rmcc-icon-link {
  color: rgb(89.25, 89.25, 89.25);
}

/*
 * Button
 * 1. Center icon vertically and horizontally
 */
.rmcc-icon-button {
  box-sizing: border-box;
  width: 36px;
  height: 36px;
  border-radius: 500px;
  background: #f8f8f8;
  color: #999;
  vertical-align: middle;
  /* 1 */
  display: inline-flex;
  justify-content: center;
  align-items: center;
  transition: 0.1s ease-in-out;
  transition-property: color, background-color;
}

/* Hover */
.rmcc-icon-button:hover {
  background-color: rgb(235.25, 235.25, 235.25);
  color: #666;
}

/* OnClick + Active */
.rmcc-icon-button:active,
.rmcc-active > .rmcc-icon-button {
  background-color: rgb(222.5, 222.5, 222.5);
  color: #666;
}

/* ========================================================================
   Component: Form Range
 ========================================================================== */
/*
 * 1. Remove default style.
 * 2. Define consistent box sizing.
 * 3. Remove `margin` in all browsers.
 * 4. Align to the center of the line box.
 * 5. Prevent content overflow if a fixed width is used.
 * 6. Take the full width.
 * 7. Remove white background in Chrome.
 */
.rmcc-range {
  /* 1 */
  -webkit-appearance: none;
  /* 2 */
  box-sizing: border-box;
  /* 3 */
  margin: 0;
  /* 4 */
  vertical-align: middle;
  /* 5 */
  max-width: 100%;
  /* 6 */
  width: 100%;
  /* 7 */
  background: transparent;
}

/* Focus */
.rmcc-range:focus {
  outline: none;
}

.rmcc-range::-moz-focus-outer {
  border: none;
}

/*
 * Improves consistency of cursor style for clickable elements
 */
.rmcc-range:not(:disabled)::-webkit-slider-thumb {
  cursor: pointer;
}

.rmcc-range:not(:disabled)::-moz-range-thumb {
  cursor: pointer;
}

/*
 * Track
 * 1. Safari doesn't have a focus state. Using active instead.
 */
/* Webkit */
.rmcc-range::-webkit-slider-runnable-track {
  height: 3px;
  background: rgb(235.25, 235.25, 235.25);
  border-radius: 500px;
}

.rmcc-range:focus::-webkit-slider-runnable-track,
.rmcc-range:active::-webkit-slider-runnable-track {
  background: rgb(222.5, 222.5, 222.5);
}

/* Firefox */
.rmcc-range::-moz-range-track {
  height: 3px;
  background: rgb(235.25, 235.25, 235.25);
  border-radius: 500px;
}

.rmcc-range:focus::-moz-range-track {
  background: rgb(222.5, 222.5, 222.5);
}

/*
 * Thumb
 * 1. Reset
 * 2. Style
 */
/* Webkit */
.rmcc-range::-webkit-slider-thumb {
  /* 1 */
  -webkit-appearance: none;
  margin-top: -7px;
  /* 2 */
  height: 15px;
  width: 15px;
  border-radius: 500px;
  background: #fff;
  border: 1px solid rgb(203.5, 203.5, 203.5);
}

/* Firefox */
.rmcc-range::-moz-range-thumb {
  /* 1 */
  border: none;
  /* 2 */
  height: 15px;
  width: 15px;
  margin-top: -7px;
  border-radius: 500px;
  background: #fff;
  border: 1px solid rgb(203.5, 203.5, 203.5);
}

/* ========================================================================
   Component: Form
 ========================================================================== */
/*
 * 1. Define consistent box sizing.
 *    Default is `content-box` with following exceptions set to `border-box`
 *    `select`, `input[type="checkbox"]` and `input[type="radio"]`
 *    `input[type="search"]` in Chrome, Safari and Opera
 *    `input[type="color"]` in Firefox
 * 2. Address margins set differently in Firefox/IE and Chrome/Safari/Opera.
 * 3. Remove `border-radius` in iOS.
 * 4. Change font properties to `inherit` in all browsers.
 */
.rmcc-input,
.rmcc-select,
.rmcc-textarea,
.rmcc-radio,
.rmcc-checkbox {
  /* 1 */
  box-sizing: border-box;
  /* 2 */
  margin: 0;
  /* 3 */
  border-radius: 0;
  /* 4 */
  font: inherit;
}

/*
 * Show the overflow in Edge.
 */
.rmcc-input {
  overflow: visible;
}

/*
 * Remove the inheritance of text transform in Firefox.
 */
.rmcc-select {
  text-transform: none;
}

/*
 * 1. Change font properties to `inherit` in all browsers
 * 2. Don't inherit the `font-weight` and use `bold` instead.
 * NOTE: Both declarations don't work in Chrome, Safari and Opera.
 */
.rmcc-select optgroup {
  /* 1 */
  font: inherit;
  /* 2 */
  font-weight: bold;
}

/*
 * Remove the default vertical scrollbar in IE 10+.
 */
.rmcc-textarea {
  overflow: auto;
}

/*
 * Remove the inner padding and cancel buttons in Chrome on OS X and Safari on OS X.
 */
.rmcc-input[type=search]::-webkit-search-cancel-button,
.rmcc-input[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
.rmcc-input[type=number]::-webkit-inner-spin-button,
.rmcc-input[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/*
 * Correct vertical alignment in Safari.
 */
.rmcc-input[type=date]::-webkit-datetime-edit,
.rmcc-input[type=time]::-webkit-datetime-edit,
.rmcc-input[type=datetime-local]::-webkit-datetime-edit {
  display: inline-flex;
  align-items: center;
  height: 100%;
  padding: 0;
}

/*
 * Removes placeholder transparency in Firefox.
 */
.rmcc-input::-moz-placeholder,
.rmcc-textarea::-moz-placeholder {
  opacity: 1;
}

/*
 * Improves consistency of cursor style for clickable elements
 */
.rmcc-radio:not(:disabled),
.rmcc-checkbox:not(:disabled) {
  cursor: pointer;
}

/*
 * Define consistent border, margin, and padding.
 * 1. Reset `min-width`
 */
.rmcc-fieldset {
  border: none;
  margin: 0;
  padding: 0;
  /* 1 */
  min-width: 0;
}

/* Input, select and textarea
 * Allowed: `text`, `password`, `datetime-local`, `date`,  `month`,
            `time`, `week`, `number`, `email`, `url`, `search`, `tel`, `color`
 * Disallowed: `range`, `radio`, `checkbox`, `file`, `submit`, `reset` and `image`
 ========================================================================== */
/*
 * Remove default style in iOS.
 */
.rmcc-input,
.rmcc-textarea {
  -webkit-appearance: none;
}

/*
 * 1. Prevent content overflow if a fixed width is used
 * 2. Take the full width
 * 3. Reset default
 * 4. Style
 */
.rmcc-input,
.rmcc-select,
.rmcc-textarea {
  /* 1 */
  max-width: 100%;
  /* 2 */
  width: 100%;
  /* 3 */
  border: 0 none;
  /* 4 */
  padding: 0 10px;
  background: #fff;
  color: #666;
  border: 1px solid #e5e5e5;
  transition: 0.2s ease-in-out;
  transition-property: color, background-color, border;
}

/*
 * Single-line
 * 1. Allow any element to look like an `input` or `select` element
 * 2. Make sure line-height is not larger than height
 *    Also needed to center the text vertically
 */
.rmcc-input,
.rmcc-select:not([multiple]):not([size]) {
  height: 40px;
  vertical-align: middle;
  /* 1 */
  display: inline-block;
}

/* 2 */
.rmcc-input:not(input),
.rmcc-select:not(select) {
  line-height: 38px;
}

/*
 * Multi-line
 */
.rmcc-select[multiple],
.rmcc-select[size],
.rmcc-textarea {
  padding-top: 6px;
  padding-bottom: 6px;
  vertical-align: top;
}

.rmcc-select[multiple],
.rmcc-select[size] {
  resize: vertical;
}

/* Focus */
.rmcc-input:focus,
.rmcc-select:focus,
.rmcc-textarea:focus {
  outline: none;
  background-color: #fff;
  color: #666;
  border-color: #1e87f0;
}

/* Disabled */
.rmcc-input:disabled,
.rmcc-select:disabled,
.rmcc-textarea:disabled {
  background-color: #f8f8f8;
  color: #999;
  border-color: #e5e5e5;
}

/*
 * Placeholder
 */
.rmcc-input::placeholder {
  color: #999;
}

.rmcc-textarea::placeholder {
  color: #999;
}

/* Style modifier (`rmcc-input`, `rmcc-select` and `rmcc-textarea`)
 ========================================================================== */
/*
 * Small
 */
.rmcc-form-small {
  font-size: 0.875rem;
}

/* Single-line */
.rmcc-form-small:not(textarea):not([multiple]):not([size]) {
  height: 30px;
  padding-left: 8px;
  padding-right: 8px;
}

/* Multi-line */
textarea.rmcc-form-small,
[multiple].rmcc-form-small,
[size].rmcc-form-small {
  padding: 5px 8px;
}

.rmcc-form-small:not(select):not(input):not(textarea) {
  line-height: 28px;
}

/*
 * Large
 */
.rmcc-form-large {
  font-size: 1.25rem;
}

/* Single-line */
.rmcc-form-large:not(textarea):not([multiple]):not([size]) {
  height: 55px;
  padding-left: 12px;
  padding-right: 12px;
}

/* Multi-line */
textarea.rmcc-form-large,
[multiple].rmcc-form-large,
[size].rmcc-form-large {
  padding: 7px 12px;
}

.rmcc-form-large:not(select):not(input):not(textarea) {
  line-height: 53px;
}

/* Style modifier (`rmcc-input`, `rmcc-select` and `rmcc-textarea`)
 ========================================================================== */
/*
 * Error
 */
.rmcc-form-danger,
.rmcc-form-danger:focus {
  color: #f0506e;
  border-color: #f0506e;
}

/*
 * Success
 */
.rmcc-form-success,
.rmcc-form-success:focus {
  color: #32d296;
  border-color: #32d296;
}

/*
 * Blank
 */
.rmcc-form-blank {
  background: none;
  border-color: transparent;
}

.rmcc-form-blank:focus {
  border-color: #e5e5e5;
  border-style: solid;
}

/* Width modifiers (`rmcc-input`, `rmcc-select` and `rmcc-textarea`)
 ========================================================================== */
/*
 * Fixed widths
 * Different widths for mini sized `input` and `select` elements
 */
input.rmcc-form-width-xsmall {
  width: 50px;
}

select.rmcc-form-width-xsmall {
  width: 75px;
}

.rmcc-form-width-small {
  width: 130px;
}

.rmcc-form-width-medium {
  width: 200px;
}

.rmcc-form-width-large {
  width: 500px;
}

/* Select
 ========================================================================== */
/*
 * 1. Remove default style. Also works in Firefox
 * 2. Style
 * 3. Set `color` for options in the select dropdown, because the inherited `color` might be too light.
 */
.rmcc-select:not([multiple]):not([size]) {
  /* 1 */
  -webkit-appearance: none;
  -moz-appearance: none;
  /* 2 */
  padding-right: 20px;
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2224%22%20height%3D%2216%22%20viewBox%3D%220%200%2024%2016%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Cpolygon%20fill%3D%22%23666%22%20points%3D%2212%201%209%206%2015%206%22%20%2F%3E%0A%20%20%20%20%3Cpolygon%20fill%3D%22%23666%22%20points%3D%2212%2013%209%208%2015%208%22%20%2F%3E%0A%3C%2Fsvg%3E%0A");
  background-repeat: no-repeat;
  background-position: 100% 50%;
}

/* 3 */
.rmcc-select:not([multiple]):not([size]) option {
  color: #666;
}

/*
 * Disabled
 */
.rmcc-select:not([multiple]):not([size]):disabled {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2224%22%20height%3D%2216%22%20viewBox%3D%220%200%2024%2016%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Cpolygon%20fill%3D%22%23999%22%20points%3D%2212%201%209%206%2015%206%22%20%2F%3E%0A%20%20%20%20%3Cpolygon%20fill%3D%22%23999%22%20points%3D%2212%2013%209%208%2015%208%22%20%2F%3E%0A%3C%2Fsvg%3E%0A");
}

/* Datalist
 ========================================================================== */
/*
 * 1. Remove default style in Chrome
 */
.rmcc-input[list] {
  padding-right: 20px;
  background-repeat: no-repeat;
  background-position: 100% 50%;
}

.rmcc-input[list]:hover,
.rmcc-input[list]:focus {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2224%22%20height%3D%2216%22%20viewBox%3D%220%200%2024%2016%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Cpolygon%20fill%3D%22%23666%22%20points%3D%2212%2012%208%206%2016%206%22%20%2F%3E%0A%3C%2Fsvg%3E%0A");
}

/* 1 */
.rmcc-input[list]::-webkit-calendar-picker-indicator {
  display: none !important;
}

/* Radio and checkbox
 ========================================================================== */
/*
 * 1. Style
 * 2. Make box more robust so it clips the child element
 * 3. Vertical alignment
 * 4. Remove default style
 * 5. Fix black background on iOS
 * 6. Center icons
 */
.rmcc-radio,
.rmcc-checkbox {
  /* 1 */
  display: inline-block;
  height: 16px;
  width: 16px;
  /* 2 */
  overflow: hidden;
  /* 3 */
  margin-top: -4px;
  vertical-align: middle;
  /* 4 */
  -webkit-appearance: none;
  -moz-appearance: none;
  /* 5 */
  background-color: transparent;
  /* 6 */
  background-repeat: no-repeat;
  background-position: 50% 50%;
  border: 1px solid rgb(203.5, 203.5, 203.5);
  transition: 0.2s ease-in-out;
  transition-property: background-color, border;
}

.rmcc-radio {
  border-radius: 50%;
}

/* Focus */
.rmcc-radio:focus,
.rmcc-checkbox:focus {
  background-color: rgba(0, 0, 0, 0);
  outline: none;
  border-color: #1e87f0;
}

/*
 * Checked
 */
.rmcc-radio:checked,
.rmcc-checkbox:checked,
.rmcc-checkbox:indeterminate {
  background-color: #1e87f0;
  border-color: transparent;
}

/* Focus */
.rmcc-radio:checked:focus,
.rmcc-checkbox:checked:focus,
.rmcc-checkbox:indeterminate:focus {
  background-color: rgb(13.6875, 109.5, 205.3125);
}

/*
 * Icons
 */
.rmcc-radio:checked {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2216%22%20height%3D%2216%22%20viewBox%3D%220%200%2016%2016%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Ccircle%20fill%3D%22%23fff%22%20cx%3D%228%22%20cy%3D%228%22%20r%3D%222%22%20%2F%3E%0A%3C%2Fsvg%3E");
}

.rmcc-checkbox:checked {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2214%22%20height%3D%2211%22%20viewBox%3D%220%200%2014%2011%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Cpolygon%20fill%3D%22%23fff%22%20points%3D%2212%201%205%207.5%202%205%201%205.5%205%2010%2013%201.5%22%20%2F%3E%0A%3C%2Fsvg%3E%0A");
}

.rmcc-checkbox:indeterminate {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2216%22%20height%3D%2216%22%20viewBox%3D%220%200%2016%2016%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Crect%20fill%3D%22%23fff%22%20x%3D%223%22%20y%3D%228%22%20width%3D%2210%22%20height%3D%221%22%20%2F%3E%0A%3C%2Fsvg%3E");
}

/*
 * Disabled
 */
.rmcc-radio:disabled,
.rmcc-checkbox:disabled {
  background-color: #f8f8f8;
  border-color: #e5e5e5;
}

.rmcc-radio:disabled:checked {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2216%22%20height%3D%2216%22%20viewBox%3D%220%200%2016%2016%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Ccircle%20fill%3D%22%23999%22%20cx%3D%228%22%20cy%3D%228%22%20r%3D%222%22%20%2F%3E%0A%3C%2Fsvg%3E");
}

.rmcc-checkbox:disabled:checked {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2214%22%20height%3D%2211%22%20viewBox%3D%220%200%2014%2011%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Cpolygon%20fill%3D%22%23999%22%20points%3D%2212%201%205%207.5%202%205%201%205.5%205%2010%2013%201.5%22%20%2F%3E%0A%3C%2Fsvg%3E%0A");
}

.rmcc-checkbox:disabled:indeterminate {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2216%22%20height%3D%2216%22%20viewBox%3D%220%200%2016%2016%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Crect%20fill%3D%22%23999%22%20x%3D%223%22%20y%3D%228%22%20width%3D%2210%22%20height%3D%221%22%20%2F%3E%0A%3C%2Fsvg%3E");
}

/* Legend
 ========================================================================== */
/*
 * Legend
 * 1. Behave like block element
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove padding so people aren't caught out if they zero out fieldsets.
 * 4. Style
 */
.rmcc-legend {
  /* 1 */
  width: 100%;
  /* 2 */
  color: inherit;
  /* 3 */
  padding: 0;
  /* 4 */
  font-size: 1.5rem;
  line-height: 1.4;
}

/* Custom controls
 ========================================================================== */
/*
 * 1. Container fits its content
 * 2. Create position context
 * 3. Prevent content overflow
 * 4. Behave like most inline-block elements
 */
.rmcc-form-custom {
  /* 1 */
  display: inline-block;
  /* 2 */
  position: relative;
  /* 3 */
  max-width: 100%;
  /* 4 */
  vertical-align: middle;
}

/*
 * 1. Position and resize the form control to always cover its container
 * 2. Required for Firefox for positioning to the left
 * 3. Required for Webkit to make `height` work
 * 4. Hide controls and show cursor
 * 5. Needed for the cursor
 * 6. Clip height caused by 5. Needed for Webkit only
 */
.rmcc-form-custom select,
.rmcc-form-custom input[type=file] {
  /* 1 */
  position: absolute;
  top: 0;
  z-index: 1;
  width: 100%;
  height: 100%;
  /* 2 */
  left: 0;
  /* 3 */
  -webkit-appearance: none;
  /* 4 */
  opacity: 0;
  cursor: pointer;
}

.rmcc-form-custom input[type=file] {
  /* 5 */
  font-size: 500px;
  /* 6 */
  overflow: hidden;
}

/* Label
 ========================================================================== */
.rmcc-form-label {
  color: #333;
  font-size: 0.875rem;
}

/* Layout
 ========================================================================== */
/*
 * Stacked
 */
.rmcc-form-stacked .rmcc-form-label {
  display: block;
  margin-bottom: 5px;
}

/*
 * Horizontal
 */
/* Tablet portrait and smaller */
@media (max-width: 959px) {
  /* Behave like `rmcc-form-stacked` */
  .rmcc-form-horizontal .rmcc-form-label {
    display: block;
    margin-bottom: 5px;
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .rmcc-form-horizontal .rmcc-form-label {
    width: 200px;
    margin-top: 7px;
    float: left;
  }
  .rmcc-form-horizontal .rmcc-form-controls {
    margin-left: 215px;
  }
  /* Better vertical alignment if controls are checkboxes and radio buttons with text */
  .rmcc-form-horizontal .rmcc-form-controls-text {
    padding-top: 7px;
  }
}
/* Icons
 ========================================================================== */
/*
 * 1. Set position
 * 2. Set width
 * 3. Center icon vertically and horizontally
 * 4. Style
 */
.rmcc-form-icon {
  /* 1 */
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  /* 2 */
  width: 40px;
  /* 3 */
  display: inline-flex;
  justify-content: center;
  align-items: center;
  /* 4 */
  color: #999;
}

/*
 * Required for `a`.
 */
.rmcc-form-icon:hover {
  color: #666;
}

/*
 * Make `input` element clickable through icon, e.g. if it's a `span`
 */
.rmcc-form-icon:not(a):not(button):not(input) {
  pointer-events: none;
}

/*
 * Input padding
 */
.rmcc-form-icon:not(.rmcc-form-icon-flip) ~ .rmcc-input {
  padding-left: 40px !important;
}

/*
 * Position modifier
 */
.rmcc-form-icon-flip {
  right: 0;
  left: auto;
}

.rmcc-form-icon-flip ~ .rmcc-input {
  padding-right: 40px !important;
}

/* ========================================================================
   Component: Button
 ========================================================================== */
/*
 * 1. Remove margins in Chrome, Safari and Opera.
 * 2. Remove borders for `button`.
 * 3. Address `overflow` set to `hidden` in IE.
 * 4. Correct `font` properties and `color` not being inherited for `button`.
 * 5. Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 6. Remove default style for `input type="submit"`in iOS.
 * 7. Style
 * 8. `line-height` is used to create a height because it also centers the text vertically for `a` elements.
 *    Better would be to use height and flexbox to center the text vertically but flexbox doesn't work in Firefox on `button` elements.
 * 9. Align text if button has a width
 * 10. Required for `a`.
 */
.rmcc-button {
  /* 1 */
  margin: 0;
  /* 2 */
  border: none;
  /* 3 */
  overflow: visible;
  /* 4 */
  font: inherit;
  color: inherit;
  /* 5 */
  text-transform: none;
  /* 6 */
  -webkit-appearance: none;
  border-radius: 0;
  /* 7 */
  display: inline-block;
  box-sizing: border-box;
  padding: 0 30px;
  vertical-align: middle;
  font-size: 0.875rem;
  /* 8 */
  line-height: 38px;
  /* 9 */
  text-align: center;
  /* 10 */
  text-decoration: none;
  text-transform: uppercase;
  transition: 0.1s ease-in-out;
  transition-property: color, background-color, border-color;
}

.rmcc-button:not(:disabled) {
  cursor: pointer;
}

/*
 * Remove the inner border and padding in Firefox.
 */
.rmcc-button::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/* Hover */
.rmcc-button:hover {
  /* 9 */
  text-decoration: none;
}

/* OnClick + Active */
/* Style modifiers
 ========================================================================== */
/*
 * Default
 */
.rmcc-button-default {
  background-color: transparent;
  color: #333;
  border: 1px solid #e5e5e5;
}

/* Hover */
.rmcc-button-default:hover {
  background-color: transparent;
  color: #333;
  border-color: #b2b2b2;
}

/* OnClick + Active */
.rmcc-button-default:active,
.rmcc-button-default.rmcc-active {
  background-color: transparent;
  color: #333;
  border-color: rgb(152.5, 152.5, 152.5);
}

/*
 * Primary
 */
.rmcc-button-primary {
  background-color: #1e87f0;
  color: #fff;
  border: 1px solid transparent;
}

/* Hover */
.rmcc-button-primary:hover {
  background-color: rgb(15.28125, 122.25, 229.21875);
  color: #fff;
}

/* OnClick + Active */
.rmcc-button-primary:active,
.rmcc-button-primary.rmcc-active {
  background-color: rgb(13.6875, 109.5, 205.3125);
  color: #fff;
}

/*
 * Secondary
 */
.rmcc-button-secondary {
  background-color: #222;
  color: #fff;
  border: 1px solid transparent;
}

/* Hover */
.rmcc-button-secondary:hover {
  background-color: rgb(21.25, 21.25, 21.25);
  color: #fff;
}

/* OnClick + Active */
.rmcc-button-secondary:active,
.rmcc-button-secondary.rmcc-active {
  background-color: rgb(8.5, 8.5, 8.5);
  color: #fff;
}

/*
 * Danger
 */
.rmcc-button-danger {
  background-color: #f0506e;
  color: #fff;
  border: 1px solid transparent;
}

/* Hover */
.rmcc-button-danger:hover {
  background-color: rgb(237.9868421053, 56.5131578947, 90.5394736842);
  color: #fff;
}

/* OnClick + Active */
.rmcc-button-danger:active,
.rmcc-button-danger.rmcc-active {
  background-color: rgb(235.9736842105, 33.0263157895, 71.0789473684);
  color: #fff;
}

/*
 * Disabled
 * The same for all style modifiers
 */
.rmcc-button-default:disabled,
.rmcc-button-primary:disabled,
.rmcc-button-secondary:disabled,
.rmcc-button-danger:disabled {
  background-color: transparent;
  color: #999;
  border-color: #e5e5e5;
}

/* Size modifiers
 ========================================================================== */
.rmcc-button-small {
  padding: 0 15px;
  line-height: 28px;
  font-size: 0.875rem;
}

.rmcc-button-large {
  padding: 0 40px;
  line-height: 53px;
  font-size: 0.875rem;
}

/* Text modifiers
 ========================================================================== */
/*
 * Text
 * 1. Reset
 * 2. Style
 */
.rmcc-button-text {
  /* 1 */
  padding: 0;
  line-height: 1.5;
  background: none;
  /* 2 */
  color: #333;
  position: relative;
}
.rmcc-button-text::before {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  right: 100%;
  border-bottom: 1px solid currentColor;
  transition: right 0.3s ease-out;
}

/* Hover */
.rmcc-button-text:hover {
  color: #333;
}
.rmcc-button-text:hover::before {
  right: 0;
}

/* Disabled */
.rmcc-button-text:disabled {
  color: #999;
}
.rmcc-button-text:disabled::before {
  display: none;
}

/*
 * Link
 * 1. Reset
 * 2. Style
 */
.rmcc-button-link {
  /* 1 */
  padding: 0;
  line-height: 1.5;
  background: none;
  /* 2 */
  color: #333;
}

/* Hover */
.rmcc-button-link:hover {
  color: #999;
  text-decoration: none;
}

/* Disabled */
.rmcc-button-link:disabled {
  color: #999;
  text-decoration: none;
}

/* Group
 ========================================================================== */
/*
 * 1. Using `flex` instead of `inline-block` to prevent whitespace between child elements
 * 2. Behave like button
 * 3. Create position context
 */
.rmcc-button-group {
  /* 1 */
  display: inline-flex;
  /* 2 */
  vertical-align: middle;
  /* 3 */
  position: relative;
}

/* Group
 ========================================================================== */
/*
 * Collapse border
 */
.rmcc-button-group > .rmcc-button:nth-child(n+2),
.rmcc-button-group > div:nth-child(n+2) .rmcc-button {
  margin-left: -1px;
}

/*
 * Create position context to superimpose the successor elements border
 * Known issue: If you use an `a` element as button and an icon inside,
 * the active state will not work if you click the icon inside the button
 * Workaround: Just use a `button` or `input` element as button
 */
.rmcc-button-group .rmcc-button:hover,
.rmcc-button-group .rmcc-button:focus,
.rmcc-button-group .rmcc-button:active,
.rmcc-button-group .rmcc-button.rmcc-active {
  position: relative;
  z-index: 1;
}

/* ========================================================================
   Component: Progress
 ========================================================================== */
/*
 * 1. Add the correct vertical alignment in all browsers.
 * 2. Behave like a block element.
 * 3. Remove borders in Firefox.
 * 4. Remove default style in Chrome, Safari and Edge.
 * 5. Style
 */
.rmcc-progress {
  /* 1 */
  vertical-align: baseline;
  /* 2 */
  display: block;
  width: 100%;
  /* 3 */
  border: 0;
  /* 4 */
  background-color: #f8f8f8;
  /* 5 */
  margin-bottom: 20px;
  height: 15px;
  border-radius: 500px;
  overflow: hidden;
}

/* Add margin if adjacent element */
* + .rmcc-progress {
  margin-top: 20px;
}

/*
 * Show background color set on `rmcc-progress` in Chrome, Safari and Edge.
 */
.rmcc-progress::-webkit-progress-bar {
  background-color: transparent;
}

/*
 * Progress Bar
 * 1. Transitions don't work on `::-moz-progress-bar` pseudo element in Firefox yet.
 *    https://bugzilla.mozilla.org/show_bug.cgi?id=662351
 */
.rmcc-progress::-webkit-progress-value {
  background-color: #1e87f0;
  transition: width 0.6s ease;
}

.rmcc-progress::-moz-progress-bar {
  background-color: #1e87f0;
  /* 1 */
  transition: width 0.6s ease;
}

/* ========================================================================
   Component: Section
 ========================================================================== */
/*
 * 1. Make it work with `100vh` and height in general
 */
.rmcc-section {
  display: flow-root;
  box-sizing: border-box; /* 1 */
  padding-top: 40px;
  padding-bottom: 40px;
}

/* Desktop and bigger */
@media (min-width: 960px) {
  .rmcc-section {
    padding-top: 70px;
    padding-bottom: 70px;
  }
}
/*
 * Remove margin from the last-child
 */
.rmcc-section > :last-child {
  margin-bottom: 0;
}

/* Size modifiers
 ========================================================================== */
/*
 * XSmall
 */
.rmcc-section-xsmall {
  padding-top: 20px;
  padding-bottom: 20px;
}

/*
 * Small
 */
.rmcc-section-small {
  padding-top: 40px;
  padding-bottom: 40px;
}

/*
 * Large
 */
.rmcc-section-large {
  padding-top: 70px;
  padding-bottom: 70px;
}

/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .rmcc-section-large {
    padding-top: 140px;
    padding-bottom: 140px;
  }
}
/*
 * XLarge
 */
.rmcc-section-xlarge {
  padding-top: 140px;
  padding-bottom: 140px;
}

/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .rmcc-section-xlarge {
    padding-top: 210px;
    padding-bottom: 210px;
  }
}
/* Style modifiers
 ========================================================================== */
/*
 * Default
 */
.rmcc-section-default {
  --rmcc-inverse: dark;
  background: #fff;
}

/*
 * Muted
 */
.rmcc-section-muted {
  --rmcc-inverse: dark;
  background: #f8f8f8;
}

/*
 * Primary
 */
.rmcc-section-primary {
  --rmcc-inverse: light;
  background: #1e87f0;
}

/*
 * Secondary
 */
.rmcc-section-secondary {
  --rmcc-inverse: light;
  background: #222;
}

/* Overlap modifier
 ========================================================================== */
/*
 * Reserved modifier to make a section overlap another section with an border image
 * Implemented by the theme
 */
/* ========================================================================
   Component: Container
 ========================================================================== */
/*
 * 1. Box sizing has to be `content-box` so the max-width is always the same and
 *    unaffected by the padding on different breakpoints. It's important for the size modifiers.
 */
.rmcc-container {
  display: flow-root;
  /* 1 */
  box-sizing: content-box;
  max-width: 1200px;
  margin-left: auto;
  margin-right: auto;
  padding-left: 15px;
  padding-right: 15px;
}

/* Phone landscape and bigger */
@media (min-width: 640px) {
  .rmcc-container {
    padding-left: 30px;
    padding-right: 30px;
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .rmcc-container {
    padding-left: 40px;
    padding-right: 40px;
  }
}
/*
 * Remove margin from the last-child
 */
.rmcc-container > :last-child {
  margin-bottom: 0;
}

/*
 * Remove padding from nested containers
 */
.rmcc-container .rmcc-container {
  padding-left: 0;
  padding-right: 0;
}

/* Size modifier
 ========================================================================== */
.rmcc-container-xsmall {
  max-width: 750px;
}

.rmcc-container-small {
  max-width: 900px;
}

.rmcc-container-large {
  max-width: 1400px;
}

.rmcc-container-xlarge {
  max-width: 1600px;
}

.rmcc-container-expand {
  max-width: none;
}

/* Expand modifier
 ========================================================================== */
/*
 * Expand one side only
 */
.rmcc-container-expand-left {
  margin-left: 0;
}

.rmcc-container-expand-right {
  margin-right: 0;
}

/* Phone landscape and bigger */
@media (min-width: 640px) {
  .rmcc-container-expand-left.rmcc-container-xsmall,
  .rmcc-container-expand-right.rmcc-container-xsmall {
    max-width: calc(50% + (750px / 2) - 30px);
  }
  .rmcc-container-expand-left.rmcc-container-small,
  .rmcc-container-expand-right.rmcc-container-small {
    max-width: calc(50% + (900px / 2) - 30px);
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .rmcc-container-expand-left,
  .rmcc-container-expand-right {
    max-width: calc(50% + (1200px / 2) - 40px);
  }
  .rmcc-container-expand-left.rmcc-container-xsmall,
  .rmcc-container-expand-right.rmcc-container-xsmall {
    max-width: calc(50% + (750px / 2) - 40px);
  }
  .rmcc-container-expand-left.rmcc-container-small,
  .rmcc-container-expand-right.rmcc-container-small {
    max-width: calc(50% + (900px / 2) - 40px);
  }
  .rmcc-container-expand-left.rmcc-container-large,
  .rmcc-container-expand-right.rmcc-container-large {
    max-width: calc(50% + (1400px / 2) - 40px);
  }
  .rmcc-container-expand-left.rmcc-container-xlarge,
  .rmcc-container-expand-right.rmcc-container-xlarge {
    max-width: calc(50% + (1600px / 2) - 40px);
  }
}
/* Item
 ========================================================================== */
/*
 * Utility classes to reset container padding on the left or right side
 * Note: It has to be negative margin on the item, because it's specific to the item.
 */
.rmcc-container-item-padding-remove-left,
.rmcc-container-item-padding-remove-right {
  width: calc(100% + 15px);
}

.rmcc-container-item-padding-remove-left {
  margin-left: -15px;
}

.rmcc-container-item-padding-remove-right {
  margin-right: -15px;
}

/* Phone landscape and bigger */
@media (min-width: 640px) {
  .rmcc-container-item-padding-remove-left,
  .rmcc-container-item-padding-remove-right {
    width: calc(100% + 30px);
  }
  .rmcc-container-item-padding-remove-left {
    margin-left: -30px;
  }
  .rmcc-container-item-padding-remove-right {
    margin-right: -30px;
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .rmcc-container-item-padding-remove-left,
  .rmcc-container-item-padding-remove-right {
    width: calc(100% + 40px);
  }
  .rmcc-container-item-padding-remove-left {
    margin-left: -40px;
  }
  .rmcc-container-item-padding-remove-right {
    margin-right: -40px;
  }
}
/* ========================================================================
   Component: Tile
 ========================================================================== */
.rmcc-tile {
  display: flow-root;
  position: relative;
  box-sizing: border-box;
  padding-left: 15px;
  padding-right: 15px;
  padding-top: 40px;
  padding-bottom: 40px;
}

/* Phone landscape and bigger */
@media (min-width: 640px) {
  .rmcc-tile {
    padding-left: 30px;
    padding-right: 30px;
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .rmcc-tile {
    padding-left: 40px;
    padding-right: 40px;
    padding-top: 70px;
    padding-bottom: 70px;
  }
}
/*
 * Remove margin from the last-child
 */
.rmcc-tile > :last-child {
  margin-bottom: 0;
}

/* Size modifiers
 ========================================================================== */
/*
 * XSmall
 */
.rmcc-tile-xsmall {
  padding-top: 20px;
  padding-bottom: 20px;
}

/*
 * Small
 */
.rmcc-tile-small {
  padding-top: 40px;
  padding-bottom: 40px;
}

/*
 * Large
 */
.rmcc-tile-large {
  padding-top: 70px;
  padding-bottom: 70px;
}

/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .rmcc-tile-large {
    padding-top: 140px;
    padding-bottom: 140px;
  }
}
/*
 * XLarge
 */
.rmcc-tile-xlarge {
  padding-top: 140px;
  padding-bottom: 140px;
}

/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .rmcc-tile-xlarge {
    padding-top: 210px;
    padding-bottom: 210px;
  }
}
/* Style modifiers
 ========================================================================== */
/*
 * Default
 */
.rmcc-tile-default {
  --rmcc-inverse: dark;
  background-color: #fff;
}

/*
 * Muted
 */
.rmcc-tile-muted {
  --rmcc-inverse: dark;
  background-color: #f8f8f8;
}

/*
 * Primary
 */
.rmcc-tile-primary {
  --rmcc-inverse: light;
  background-color: #1e87f0;
}

/*
 * Secondary
 */
.rmcc-tile-secondary {
  --rmcc-inverse: light;
  background-color: #222;
}

/* ========================================================================
   Component: Card
 ========================================================================== */
.rmcc-card {
  position: relative;
  box-sizing: border-box;
  transition: box-shadow 0.1s ease-in-out;
}

/* Sections
 ========================================================================== */
.rmcc-card-body {
  display: flow-root;
  padding: 30px 30px;
}

.rmcc-card-header {
  display: flow-root;
  padding: 15px 30px;
}

.rmcc-card-footer {
  display: flow-root;
  padding: 15px 30px;
}

/* Desktop and bigger */
@media (min-width: 1200px) {
  .rmcc-card-body {
    padding: 40px 40px;
  }
  .rmcc-card-header {
    padding: 20px 40px;
  }
  .rmcc-card-footer {
    padding: 20px 40px;
  }
}
/*
 * Remove margin from the last-child
 */
.rmcc-card-body > :last-child,
.rmcc-card-header > :last-child,
.rmcc-card-footer > :last-child {
  margin-bottom: 0;
}

/* Media
 ========================================================================== */
/*
 * Reserved alignment modifier to style the media element, e.g. with `border-radius`
 * Implemented by the theme
 */
/* Title
 ========================================================================== */
.rmcc-card-title {
  font-size: 1.5rem;
  line-height: 1.4;
}

/* Badge
 ========================================================================== */
/*
 * 1. Position
 * 2. Size
 * 3. Style
 * 4. Center child vertically
 */
.rmcc-card-badge {
  /* 1 */
  position: absolute;
  top: 15px;
  right: 15px;
  z-index: 1;
  /* 2 */
  height: 22px;
  padding: 0 10px;
  /* 3 */
  background: #1e87f0;
  color: #fff;
  font-size: 0.875rem;
  /* 4 */
  display: flex;
  justify-content: center;
  align-items: center;
  line-height: 0;
  border-radius: 2px;
  text-transform: uppercase;
}

/*
 * Remove margin from adjacent element
 */
.rmcc-card-badge:first-child + * {
  margin-top: 0;
}

/* Hover modifier
 ========================================================================== */
.rmcc-card-hover:not(.rmcc-card-default):not(.rmcc-card-primary):not(.rmcc-card-secondary):hover {
  background-color: #fff;
  box-shadow: 0 14px 25px rgba(0, 0, 0, 0.16);
}

/* Style modifiers
 ========================================================================== */
/*
 * Default
 * Note: Header and Footer are only implemented for the default style
 */
.rmcc-card-default {
  --rmcc-inverse: dark;
  background-color: #fff;
  color: #666;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
}

.rmcc-card-default .rmcc-card-title {
  color: #333;
}

.rmcc-card-default.rmcc-card-hover:hover {
  background-color: #fff;
  box-shadow: 0 14px 25px rgba(0, 0, 0, 0.16);
}

.rmcc-card-default .rmcc-card-header {
  border-bottom: 1px solid #e5e5e5;
}

.rmcc-card-default .rmcc-card-footer {
  border-top: 1px solid #e5e5e5;
}

/*
 * Primary
 */
.rmcc-card-primary {
  --rmcc-inverse: light;
  background-color: #1e87f0;
  color: #fff;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
}

.rmcc-card-primary .rmcc-card-title {
  color: #fff;
}

.rmcc-card-primary.rmcc-card-hover:hover {
  background-color: #1e87f0;
  box-shadow: 0 14px 25px rgba(0, 0, 0, 0.16);
}

/*
 * Secondary
 */
.rmcc-card-secondary {
  --rmcc-inverse: light;
  background-color: #222;
  color: #fff;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
}

.rmcc-card-secondary .rmcc-card-title {
  color: #fff;
}

.rmcc-card-secondary.rmcc-card-hover:hover {
  background-color: #222;
  box-shadow: 0 14px 25px rgba(0, 0, 0, 0.16);
}

/* Size modifier
 ========================================================================== */
/*
 * Small
 */
.rmcc-card-small.rmcc-card-body,
.rmcc-card-small .rmcc-card-body {
  padding: 20px 20px;
}

.rmcc-card-small .rmcc-card-header {
  padding: 13px 20px;
}

.rmcc-card-small .rmcc-card-footer {
  padding: 13px 20px;
}

/*
 * Large
 */
/* Desktop and bigger */
@media (min-width: 1200px) {
  .rmcc-card-large.rmcc-card-body,
  .rmcc-card-large .rmcc-card-body {
    padding: 70px 70px;
  }
  .rmcc-card-large .rmcc-card-header {
    padding: 35px 70px;
  }
  .rmcc-card-large .rmcc-card-footer {
    padding: 35px 70px;
  }
}
/*
 * Default
 */
.rmcc-card-body > .rmcc-nav-default {
  margin-left: -30px;
  margin-right: -30px;
}

.rmcc-card-body > .rmcc-nav-default:only-child {
  margin-top: -15px;
  margin-bottom: -15px;
}

.rmcc-card-body > .rmcc-nav-default > li > a,
.rmcc-card-body > .rmcc-nav-default .rmcc-nav-header,
.rmcc-card-body > .rmcc-nav-default .rmcc-nav-divider {
  padding-left: 30px;
  padding-right: 30px;
}

.rmcc-card-body > .rmcc-nav-default .rmcc-nav-sub {
  padding-left: 45px;
}

/* Desktop and bigger */
@media (min-width: 1200px) {
  .rmcc-card-body > .rmcc-nav-default {
    margin-left: -40px;
    margin-right: -40px;
  }
  .rmcc-card-body > .rmcc-nav-default:only-child {
    margin-top: -25px;
    margin-bottom: -25px;
  }
  .rmcc-card-body > .rmcc-nav-default > li > a,
  .rmcc-card-body > .rmcc-nav-default .rmcc-nav-header,
  .rmcc-card-body > .rmcc-nav-default .rmcc-nav-divider {
    padding-left: 40px;
    padding-right: 40px;
  }
  .rmcc-card-body > .rmcc-nav-default .rmcc-nav-sub {
    padding-left: 55px;
  }
}
/*
 * Small
 */
.rmcc-card-small > .rmcc-nav-default {
  margin-left: -20px;
  margin-right: -20px;
}

.rmcc-card-small > .rmcc-nav-default:only-child {
  margin-top: -5px;
  margin-bottom: -5px;
}

.rmcc-card-small > .rmcc-nav-default > li > a,
.rmcc-card-small > .rmcc-nav-default .rmcc-nav-header,
.rmcc-card-small > .rmcc-nav-default .rmcc-nav-divider {
  padding-left: 20px;
  padding-right: 20px;
}

.rmcc-card-small > .rmcc-nav-default .rmcc-nav-sub {
  padding-left: 35px;
}

/*
 * Large
 */
/* Desktop and bigger */
@media (min-width: 1200px) {
  .rmcc-card-large > .rmcc-nav-default {
    margin: 0;
  }
  .rmcc-card-large > .rmcc-nav-default:only-child {
    margin: 0;
  }
  .rmcc-card-large > .rmcc-nav-default > li > a,
  .rmcc-card-large > .rmcc-nav-default .rmcc-nav-header,
  .rmcc-card-large > .rmcc-nav-default .rmcc-nav-divider {
    padding-left: 0;
    padding-right: 0;
  }
  .rmcc-card-large > .rmcc-nav-default .rmcc-nav-sub {
    padding-left: 15px;
  }
}
/* ========================================================================
   Component: Close
 ========================================================================== */
/*
 * Adopts `rmcc-icon`
 */
.rmcc-close {
  color: #999;
  transition: 0.1s ease-in-out;
  transition-property: color, opacity;
}

/* Hover */
.rmcc-close:hover {
  color: #666;
}

/* ========================================================================
   Component: Spinner
 ========================================================================== */
/*
 * Adopts `rmcc-icon`
 */
/* SVG
 ========================================================================== */
.rmcc-spinner > * {
  animation: rmcc-spinner-rotate 1.4s linear infinite;
}

@keyframes rmcc-spinner-rotate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(270deg);
  }
}
/*
 * Circle
 */
.rmcc-spinner > * > * {
  stroke-dasharray: 88px;
  stroke-dashoffset: 0;
  transform-origin: center;
  animation: rmcc-spinner-dash 1.4s ease-in-out infinite;
  stroke-width: 1;
  stroke-linecap: round;
}

@keyframes rmcc-spinner-dash {
  0% {
    stroke-dashoffset: 88px;
  }
  50% {
    stroke-dashoffset: 22px;
    transform: rotate(135deg);
  }
  100% {
    stroke-dashoffset: 88px;
    transform: rotate(450deg);
  }
}
/* ========================================================================
   Component: Totop
 ========================================================================== */
/*
 * Adopts `rmcc-icon`
 */
.rmcc-totop {
  padding: 5px;
  color: #999;
  transition: color 0.1s ease-in-out;
}

/* Hover */
.rmcc-totop:hover {
  color: #666;
}

/* OnClick */
.rmcc-totop:active {
  color: #333;
}

/* ========================================================================
   Component: Marker
 ========================================================================== */
/*
 * Addopts `rmcc-icon`
 */
.rmcc-marker {
  padding: 5px;
  background: #222;
  color: #fff;
  border-radius: 500px;
}

/* Hover */
.rmcc-marker:hover {
  color: #fff;
}

/* ========================================================================
   Component: Alert
 ========================================================================== */
.rmcc-alert {
  position: relative;
  margin-bottom: 20px;
  padding: 15px 29px 15px 15px;
  background: #f8f8f8;
  color: #666;
}

/* Add margin if adjacent element */
* + .rmcc-alert {
  margin-top: 20px;
}

/*
 * Remove margin from the last-child
 */
.rmcc-alert > :last-child {
  margin-bottom: 0;
}

/* Close
 * Adopts `rmcc-close`
 ========================================================================== */
.rmcc-alert-close {
  position: absolute;
  top: 20px;
  right: 15px;
  color: inherit;
  opacity: 0.4;
}

/*
 * Remove margin from adjacent element
 */
.rmcc-alert-close:first-child + * {
  margin-top: 0;
}

/*
 * Hover
 */
.rmcc-alert-close:hover {
  color: inherit;
  opacity: 0.8;
}

/* Style modifiers
 ========================================================================== */
/*
 * Primary
 */
.rmcc-alert-primary {
  background: rgb(215.625, 234, 252.375);
  color: #1e87f0;
}

/*
 * Success
 */
.rmcc-alert-success {
  background: rgb(236.55, 250.95, 245.55);
  color: #32d296;
}

/*
 * Warning
 */
.rmcc-alert-warning {
  background: rgb(254.5, 245.5, 238.5);
  color: #faa05a;
}

/*
 * Danger
 */
.rmcc-alert-danger {
  background: rgb(254.0526315789, 243.9473684211, 245.8421052632);
  color: #f0506e;
}

/*
 * Content
 */
.rmcc-alert h1,
.rmcc-alert h2,
.rmcc-alert h3,
.rmcc-alert h4,
.rmcc-alert h5,
.rmcc-alert h6 {
  color: inherit;
}

.rmcc-alert a:not([class]) {
  color: inherit;
  text-decoration: underline;
}

.rmcc-alert a:not([class]):hover {
  color: inherit;
  text-decoration: underline;
}

/* ========================================================================
   Component: Placeholder
 ========================================================================== */
.rmcc-placeholder {
  margin-bottom: 20px;
  padding: 30px 30px;
  background: transparent;
  border: 1px dashed #e5e5e5;
}

/* Add margin if adjacent element */
* + .rmcc-placeholder {
  margin-top: 20px;
}

/*
 * Remove margin from the last-child
 */
.rmcc-placeholder > :last-child {
  margin-bottom: 0;
}

/* ========================================================================
   Component: Badge
 ========================================================================== */
/*
 * 1. Style
 * 2. Center child vertically and horizontally
 */
.rmcc-badge {
  box-sizing: border-box;
  min-width: 18px;
  height: 18px;
  padding: 0 5px;
  border-radius: 500px;
  vertical-align: middle;
  /* 1 */
  background: #1e87f0;
  color: #fff !important;
  font-size: 11px;
  /* 2 */
  display: inline-flex;
  justify-content: center;
  align-items: center;
  line-height: 0;
}

/*
 * Required for `a`
 */
.rmcc-badge:hover {
  text-decoration: none;
}

/* ========================================================================
   Component: Label
 ========================================================================== */
.rmcc-label {
  display: inline-block;
  padding: 0 10px;
  background: #1e87f0;
  line-height: 1.5;
  font-size: 0.875rem;
  color: #fff;
  vertical-align: middle;
  white-space: nowrap;
  border-radius: 2px;
  text-transform: uppercase;
}

/* Color modifiers
 ========================================================================== */
/*
 * Success
 */
.rmcc-label-success {
  background-color: #32d296;
  color: #fff;
}

/*
 * Warning
 */
.rmcc-label-warning {
  background-color: #faa05a;
  color: #fff;
}

/*
 * Danger
 */
.rmcc-label-danger {
  background-color: #f0506e;
  color: #fff;
}

/* ========================================================================
   Component: Overlay
 ========================================================================== */
.rmcc-overlay {
  padding: 30px 30px;
}

/*
 * Remove margin from the last-child
 */
.rmcc-overlay > :last-child {
  margin-bottom: 0;
}

/* Icon
 ========================================================================== */
/* Style modifiers
 ========================================================================== */
/*
 * Default
 */
.rmcc-overlay-default {
  --rmcc-inverse: dark;
  background: rgba(255, 255, 255, 0.8);
}

/*
 * Primary
 */
.rmcc-overlay-primary {
  --rmcc-inverse: light;
  background: rgba(34, 34, 34, 0.8);
}

/* ========================================================================
   Component: Article
 ========================================================================== */
.rmcc-article {
  display: flow-root;
}

/*
 * Remove margin from the last-child
 */
.rmcc-article > :last-child {
  margin-bottom: 0;
}

/* Adjacent sibling
 ========================================================================== */
.rmcc-article + .rmcc-article {
  margin-top: 70px;
}

/* Title
 ========================================================================== */
.rmcc-article-title {
  font-size: 2.23125rem;
  line-height: 1.2;
}

/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .rmcc-article-title {
    font-size: 2.625rem;
  }
}
/* Meta
 ========================================================================== */
.rmcc-article-meta {
  font-size: 0.875rem;
  line-height: 1.4;
  color: #999;
}
.rmcc-article-meta a {
  color: #999;
}
.rmcc-article-meta a:hover {
  color: #666;
  text-decoration: none;
}

/* ========================================================================
   Component: Comment
 ========================================================================== */
/* Sections
 ========================================================================== */
.rmcc-comment-body {
  display: flow-root;
  overflow-wrap: break-word;
  word-wrap: break-word;
}

.rmcc-comment-header {
  display: flow-root;
  margin-bottom: 20px;
}

/*
 * Remove margin from the last-child
 */
.rmcc-comment-body > :last-child,
.rmcc-comment-header > :last-child {
  margin-bottom: 0;
}

/* Title
 ========================================================================== */
.rmcc-comment-title {
  font-size: 1.25rem;
  line-height: 1.4;
}

/* Meta
 ========================================================================== */
.rmcc-comment-meta {
  font-size: 0.875rem;
  line-height: 1.4;
  color: #999;
}

/* Avatar
 ========================================================================== */
/* List
 ========================================================================== */
.rmcc-comment-list {
  padding: 0;
  list-style: none;
}

/* Adjacent siblings */
.rmcc-comment-list > :nth-child(n+2) {
  margin-top: 70px;
}

/*
 * Sublists
 * Note: General sibling selector allows reply block between comment and sublist
 */
.rmcc-comment-list .rmcc-comment ~ ul {
  margin: 70px 0 0 0;
  padding-left: 30px;
  list-style: none;
}

/* Tablet and bigger */
@media (min-width: 960px) {
  .rmcc-comment-list .rmcc-comment ~ ul {
    padding-left: 100px;
  }
}
/* Adjacent siblings */
.rmcc-comment-list .rmcc-comment ~ ul > :nth-child(n+2) {
  margin-top: 70px;
}

/* Style modifier
 ========================================================================== */
.rmcc-comment-primary {
  padding: 30px;
  background-color: #f8f8f8;
}

/* ========================================================================
   Component: Search
 ========================================================================== */
/*
 * 1. Container fits its content
 * 2. Create position context
 * 3. Prevent content overflow
 * 4. Reset `form`
 */
.rmcc-search {
  /* 1 */
  display: inline-block;
  /* 2 */
  position: relative;
  /* 3 */
  max-width: 100%;
  /* 4 */
  margin: 0;
}

/* Input
 ========================================================================== */
/*
 * Remove the inner padding and cancel buttons in Chrome on OS X and Safari on OS X.
 */
.rmcc-search-input::-webkit-search-cancel-button,
.rmcc-search-input::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
 * Removes placeholder transparency in Firefox.
 */
.rmcc-search-input::-moz-placeholder {
  opacity: 1;
}

/*
 * 1. Define consistent box sizing.
 * 2. Address margins set differently in Firefox/IE and Chrome/Safari/Opera.
 * 3. Remove `border-radius` in iOS.
 * 4. Change font properties to `inherit` in all browsers
 * 5. Show the overflow in Edge.
 * 6. Remove default style in iOS.
 * 7. Vertical alignment
 * 8. Take the full container width
 * 9. Style
 */
.rmcc-search-input {
  /* 1 */
  box-sizing: border-box;
  /* 2 */
  margin: 0;
  /* 3 */
  border-radius: 0;
  /* 4 */
  font: inherit;
  /* 5 */
  overflow: visible;
  /* 6 */
  -webkit-appearance: none;
  /* 7 */
  vertical-align: middle;
  /* 8 */
  width: 100%;
  /* 9 */
  border: none;
  color: #666;
}

.rmcc-search-input:focus {
  outline: none;
}

/* Placeholder */
.rmcc-search-input::placeholder {
  color: #999;
}

/* Icon (Adopts `rmcc-icon`)
 ========================================================================== */
/*
 * Position above input
 * 1. Set position
 * 2. Center icon vertically and horizontally
 * 3. Style
 */
.rmcc-search .rmcc-search-icon {
  /* 1 */
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  /* 2 */
  display: inline-flex;
  justify-content: center;
  align-items: center;
  /* 3 */
  color: #999;
}

/*
 * Required for `a`.
 */
.rmcc-search .rmcc-search-icon:hover {
  color: #999;
}

/*
 * Make `input` element clickable through icon, e.g. if it's a `span`
 */
.rmcc-search .rmcc-search-icon:not(a):not(button):not(input) {
  pointer-events: none;
}

/*
 * Position modifier
 */
.rmcc-search .rmcc-search-icon-flip {
  right: 0;
  left: auto;
}

/* Default modifier
 ========================================================================== */
.rmcc-search-default {
  width: 240px;
}

/*
 * Input
 */
.rmcc-search-default .rmcc-search-input {
  height: 40px;
  padding-left: 10px;
  padding-right: 10px;
  background: transparent;
  border: 1px solid #e5e5e5;
}

/* Focus */
.rmcc-search-default .rmcc-search-input:focus {
  background-color: rgba(0, 0, 0, 0);
  border-color: #1e87f0;
}

/*
 * Icon
 */
.rmcc-search-default .rmcc-search-icon {
  padding-left: 10px;
  padding-right: 10px;
}

.rmcc-search-default:has(.rmcc-search-icon:not(.rmcc-search-icon-flip)) .rmcc-search-input {
  padding-left: 40px;
}

.rmcc-search-default:has(.rmcc-search-icon-flip) .rmcc-search-input {
  padding-right: 40px;
}

/* Navbar modifier
 ========================================================================== */
.rmcc-search-navbar {
  width: 240px;
}

/*
 * Input
 */
.rmcc-search-navbar .rmcc-search-input {
  height: 40px;
  padding-left: 10px;
  padding-right: 10px;
  background: #fff;
  border: 1px solid #e5e5e5;
}

/* Focus */
.rmcc-search-navbar .rmcc-search-input:focus {
  background-color: #fff;
  border-color: #1e87f0;
}

/*
 * Icon
 */
.rmcc-search-navbar .rmcc-search-icon {
  padding-left: 10px;
  padding-right: 10px;
}

.rmcc-search-navbar:has(.rmcc-search-icon:not(.rmcc-search-icon-flip)) .rmcc-search-input {
  padding-left: 40px;
}

.rmcc-search-navbar:has(.rmcc-search-icon-flip) .rmcc-search-input {
  padding-right: 40px;
}

/* Medium modifier
 ========================================================================== */
.rmcc-search-medium {
  width: 400px;
}

/*
 * Input
 */
.rmcc-search-medium .rmcc-search-input {
  height: 55px;
  padding-left: 12px;
  padding-right: 12px;
  background: transparent;
  font-size: 1.5rem;
  border: 1px solid #e5e5e5;
}

/* Focus */
.rmcc-search-medium .rmcc-search-input:focus {
  background-color: rgba(0, 0, 0, 0);
  border-color: #1e87f0;
}

/*
 * Icon
 */
.rmcc-search-medium .rmcc-search-icon {
  padding-left: 12px;
  padding-right: 12px;
}

.rmcc-search-medium:has(.rmcc-search-icon:not(.rmcc-search-icon-flip)) .rmcc-search-input {
  padding-left: 48px;
}

.rmcc-search-medium:has(.rmcc-search-icon-flip) .rmcc-search-input {
  padding-right: 48px;
}

/* Large modifier
 ========================================================================== */
.rmcc-search-large {
  width: 500px;
}

/*
 * Input
 */
.rmcc-search-large .rmcc-search-input {
  height: 90px;
  padding-left: 20px;
  padding-right: 20px;
  background: transparent;
  font-size: 2.625rem;
  border: 1px solid #e5e5e5;
}

/* Focus */
.rmcc-search-large .rmcc-search-input:focus {
  background-color: rgba(0, 0, 0, 0);
  border-color: #1e87f0;
}

/*
 * Icon
 */
.rmcc-search-large .rmcc-search-icon {
  padding-left: 20px;
  padding-right: 20px;
}

.rmcc-search-large:has(.rmcc-search-icon:not(.rmcc-search-icon-flip)) .rmcc-search-input {
  padding-left: 80px;
}

.rmcc-search-large:has(.rmcc-search-icon-flip) .rmcc-search-input {
  padding-right: 80px;
}

/* Toggle
 ========================================================================== */
.rmcc-search-toggle {
  color: #999;
}

/* Hover */
.rmcc-search-toggle:hover {
  color: #666;
}

/* ========================================================================
   Component: Accordion
 ========================================================================== */
.rmcc-accordion {
  padding: 0;
  list-style: none;
}

/* Item
 ========================================================================== */
.rmcc-accordion > :nth-child(n+2) {
  margin-top: 20px;
}

/* Title
 ========================================================================== */
.rmcc-accordion-title {
  display: block;
  font-size: 1.25rem;
  line-height: 1.4;
  color: #333;
  overflow: hidden;
}
.rmcc-accordion-title::before {
  content: "";
  width: 1.4em;
  height: 1.4em;
  margin-left: 10px;
  float: right;
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2213%22%20height%3D%2213%22%20viewBox%3D%220%200%2013%2013%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Crect%20fill%3D%22%23666%22%20width%3D%2213%22%20height%3D%221%22%20x%3D%220%22%20y%3D%226%22%20%2F%3E%0A%20%20%20%20%3Crect%20fill%3D%22%23666%22%20width%3D%221%22%20height%3D%2213%22%20x%3D%226%22%20y%3D%220%22%20%2F%3E%0A%3C%2Fsvg%3E");
  background-repeat: no-repeat;
  background-position: 50% 50%;
}
.rmcc-open > .rmcc-accordion-title::before {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2213%22%20height%3D%2213%22%20viewBox%3D%220%200%2013%2013%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Crect%20fill%3D%22%23666%22%20width%3D%2213%22%20height%3D%221%22%20x%3D%220%22%20y%3D%226%22%20%2F%3E%0A%3C%2Fsvg%3E");
}

/* Hover */
.rmcc-accordion-title:hover {
  color: #666;
  text-decoration: none;
}

/* Content
 ========================================================================== */
.rmcc-accordion-content {
  display: flow-root;
  margin-top: 20px;
}

/*
 * Remove margin from the last-child
 */
.rmcc-accordion-content > :last-child {
  margin-bottom: 0;
}

/* ========================================================================
   Component: Drop
 ========================================================================== */
/*
 * 1. Hide by default
 * 2. Set position
 * 3. Set a default width
 */
.rmcc-drop {
  /* 1 */
  display: none;
  /* 2 */
  position: absolute;
  z-index: 1020;
  --rmcc-position-offset: 20px;
  --rmcc-position-viewport-offset: 15px;
  /* 3 */
  box-sizing: border-box;
  width: 300px;
}

/* Show */
.rmcc-drop.rmcc-open {
  display: block;
}

/* Grid modifiers
 ========================================================================== */
.rmcc-drop-stack .rmcc-drop-grid > * {
  width: 100% !important;
}

/* Parent icon
 ========================================================================== */
.rmcc-drop-parent-icon {
  margin-left: 0.25em;
  transition: transform 0.3s ease-out;
}

[aria-expanded=true] > .rmcc-drop-parent-icon {
  transform: rotateX(180deg);
}

/* ========================================================================
   Component: Dropbar
 ========================================================================== */
/*
 * Adopts `rmcc-drop`
 * 1. Reset drop
 * 2. Style
 */
.rmcc-dropbar {
  --rmcc-position-offset: 0;
  --rmcc-position-shift-offset: 0;
  --rmcc-position-viewport-offset: 0;
  --rmcc-inverse: dark;
  /* 1 */
  width: auto;
  /* 2 */
  padding: 25px 15px 25px 15px;
  background: #fff;
  color: #666;
}

/*
 * Remove margin from the last-child
 */
.rmcc-dropbar > :last-child {
  margin-bottom: 0;
}

/* Phone landscape and bigger */
@media (min-width: 640px) {
  .rmcc-dropbar {
    padding-left: 30px;
    padding-right: 30px;
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .rmcc-dropbar {
    padding-left: 40px;
    padding-right: 40px;
  }
}
.rmcc-dropbar :focus-visible {
  outline-color: #333 !important;
}

/* Size modifier
 ========================================================================== */
.rmcc-dropbar-large {
  padding-top: 40px;
  padding-bottom: 40px;
}

/* Direction modifier
 ========================================================================== */
.rmcc-dropbar-top {
  box-shadow: 0 12px 7px -6px rgba(0, 0, 0, 0.05);
}

.rmcc-dropbar-bottom {
  box-shadow: 0 -12px 7px -6px rgba(0, 0, 0, 0.05);
}

.rmcc-dropbar-left {
  box-shadow: 12px 0 7px -6px rgba(0, 0, 0, 0.05);
}

.rmcc-dropbar-right {
  box-shadow: -12px 0 7px -6px rgba(0, 0, 0, 0.05);
}

/* ========================================================================
   Component: Dropnav
 ========================================================================== */
/*
 * 1. Position
 * 2. Reset dropbar
 * 3. Width
 */
.rmcc-dropnav-dropbar {
  /* 1 */
  position: absolute;
  z-index: 980;
  /* 2 */
  padding: 0;
  /* 3 */
  left: 0;
  right: 0;
}

/* ========================================================================
   Component: Modal
 ========================================================================== */
/*
 * 1. Hide by default
 * 2. Set position
 * 3. Allow scrolling for the modal dialog
 * 4. Horizontal padding
 * 5. Mask the background page
 * 6. Fade-in transition
 */
.rmcc-modal {
  /* 1 */
  display: none;
  /* 2 */
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1010;
  /* 3 */
  overflow-y: auto;
  /* 4 */
  padding: 15px 15px;
  /* 5 */
  background: rgba(0, 0, 0, 0.6);
  /* 6 */
  opacity: 0;
  transition: opacity 0.15s linear;
}

/* Phone landscape and bigger */
@media (min-width: 640px) {
  .rmcc-modal {
    padding: 50px 30px;
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .rmcc-modal {
    padding-left: 40px;
    padding-right: 40px;
  }
}
/*
 * Open
 */
.rmcc-modal.rmcc-open {
  opacity: 1;
}

/* Page
 ========================================================================== */
/*
 * Prevent scrollbars
 */
.rmcc-modal-page {
  overflow: hidden;
}

/* Dialog
 ========================================================================== */
/*
 * 1. Create position context for spinner and close button
 * 2. Dimensions
 * 3. `!important` is needed to overwrite `rmcc-width-auto`. See `#modal-media-image` in tests
 * 4. Style
 * 5. Slide-in transition
 */
.rmcc-modal-dialog {
  /* 1 */
  position: relative;
  /* 2 */
  box-sizing: border-box;
  margin: 0 auto;
  width: 600px;
  /* 3 */
  max-width: 100% !important;
  /* 4 */
  background: #fff;
  /* 5 */
  opacity: 0;
  transform: translateY(-100px);
  transition: 0.3s linear;
  transition-property: opacity, transform;
}

/*
 * Open
 */
.rmcc-open > .rmcc-modal-dialog {
  opacity: 1;
  transform: translateY(0);
}

/* Size modifier
 ========================================================================== */
/*
 * Container size
 * Take the same size as the Container component
 */
.rmcc-modal-container .rmcc-modal-dialog {
  width: 1200px;
}

/*
 * Full size
 * 1. Remove padding and background from modal
 * 2. Reset all default declarations from modal dialog
 */
/* 1 */
.rmcc-modal-full {
  padding: 0;
  background: none;
}

/* 2 */
.rmcc-modal-full .rmcc-modal-dialog {
  margin: 0;
  width: 100%;
  max-width: 100%;
  transform: translateY(0);
}

/* Sections
 ========================================================================== */
.rmcc-modal-body {
  display: flow-root;
  padding: 20px 20px;
}

.rmcc-modal-header {
  display: flow-root;
  padding: 10px 20px;
  background: #fff;
  border-bottom: 1px solid #e5e5e5;
}

.rmcc-modal-footer {
  display: flow-root;
  padding: 10px 20px;
  background: #fff;
  border-top: 1px solid #e5e5e5;
}

/* Phone landscape and bigger */
@media (min-width: 640px) {
  .rmcc-modal-body {
    padding: 30px 30px;
  }
  .rmcc-modal-header {
    padding: 15px 30px;
  }
  .rmcc-modal-footer {
    padding: 15px 30px;
  }
}
/*
 * Remove margin from the last-child
 */
.rmcc-modal-body > :last-child,
.rmcc-modal-header > :last-child,
.rmcc-modal-footer > :last-child {
  margin-bottom: 0;
}

/* Title
 ========================================================================== */
.rmcc-modal-title {
  font-size: 2rem;
  line-height: 1.3;
}

/* Close
 * Adopts `rmcc-close`
 ========================================================================== */
[class*=rmcc-modal-close-] {
  position: absolute;
  z-index: 1010;
  top: 10px;
  right: 10px;
  padding: 5px;
}

/*
 * Remove margin from adjacent element
 */
[class*=rmcc-modal-close-]:first-child + * {
  margin-top: 0;
}

/*
 * Hover
 */
/*
 * Default
 */
/*
 * Outside
 * 1. Prevent scrollbar on small devices
 */
.rmcc-modal-close-outside {
  top: 0;
  /* 1 */
  right: -5px;
  transform: translate(0, -100%);
  color: white;
}

.rmcc-modal-close-outside:hover {
  color: #fff;
}

/* Tablet landscape and bigger */
@media (min-width: 960px) {
  /* 1 */
  .rmcc-modal-close-outside {
    right: 0;
    transform: translate(100%, -100%);
  }
}
/*
 * Full
 */
.rmcc-modal-close-full {
  top: 0;
  right: 0;
  padding: 10px;
  background: #fff;
}

/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .rmcc-modal-close-full {
    padding: 20px;
  }
}
/* ========================================================================
   Component: Slideshow
 ========================================================================== */
/*
 * 1. Prevent tab highlighting on iOS.
 */
.rmcc-slideshow {
  /* 1 */
  -webkit-tap-highlight-color: transparent;
}

/* Items
 ========================================================================== */
/*
 * 1. Create position and stacking context
 * 2. Reset list
 * 3. Clip child elements
 * 4. Prevent displaying the callout information on iOS.
 * 5. Disable horizontal panning gestures
 */
.rmcc-slideshow-items {
  /* 1 */
  position: relative;
  z-index: 0;
  /* 2 */
  margin: 0;
  padding: 0;
  list-style: none;
  /* 3 */
  overflow: hidden;
  /* 4 */
  -webkit-touch-callout: none;
  /* 5 */
  touch-action: pan-y;
}

/* Item
 ========================================================================== */
/*
 * 1. Position items above each other
 * 2. Take the full width
 * 3. Clip child elements, e.g. for `rmcc-cover`
 * 4. Optimize animation
 */
.rmcc-slideshow-items > * {
  /* 1 */
  position: absolute;
  top: 0;
  left: 0;
  /* 2 */
  right: 0;
  bottom: 0;
  /* 3 */
  overflow: hidden;
  /* 4 */
  will-change: transform, opacity;
}

/*
 * Hide not active items
 */
.rmcc-slideshow-items > :not(.rmcc-active) {
  display: none;
}

/* ========================================================================
   Component: Slider
 ========================================================================== */
/*
 * 1. Prevent tab highlighting on iOS.
 */
.rmcc-slider {
  /* 1 */
  -webkit-tap-highlight-color: transparent;
}

/* Container
 ========================================================================== */
/*
 * 1. Clip child elements
 * 2. Prevent accidental scrolling through elements in slide getting focused
 */
.rmcc-slider-container {
  /* 1 */
  overflow: hidden;
  /* 2 */
  overflow: clip;
}

/*
 * Widen container to prevent box-shadows from clipping, `large-box-shadow`
 */
.rmcc-slider-container-offset {
  margin: -11px -25px -39px -25px;
  padding: 11px 25px 39px 25px;
}

/* Items
 ========================================================================== */
/*
 * 1. Optimize animation
 * 2. Create a containing block. In Safari it's neither created by `transform` nor `will-change`.
 * 3. Disable horizontal panning gestures
 */
.rmcc-slider-items {
  /* 1 */
  will-change: transform;
  /* 2 */
  position: relative;
  /* 3 */
  touch-action: pan-y;
}

/*
 * 1. Reset list style without interfering with grid
 * 2. Prevent displaying the callout information on iOS.
 */
.rmcc-slider-items:not(.rmcc-grid) {
  display: flex;
  /* 1 */
  margin: 0;
  padding: 0;
  list-style: none;
  /* 2 */
  -webkit-touch-callout: none;
}

.rmcc-slider-items.rmcc-grid {
  flex-wrap: nowrap;
}

/* Item
 ========================================================================== */
/*
 * 1. Let items take content dimensions (0 0 auto)
 *    `max-width` needed to keep image responsiveness and prevent content overflow
 * 2. Create position context
 */
.rmcc-slider-items > * {
  /* 1 */
  flex: none !important;
  box-sizing: border-box;
  max-width: 100%;
  /* 2 */
  position: relative;
}

/* ========================================================================
   Component: Sticky
 ========================================================================== */
/*
 * 1. Create position context so it's t the same like when fixed.
 * 2. Create stacking context already when not sticky to have the same context
*     for position set to `sticky` and `relative`
 * 2. More robust if padding and border are used and the sticky height is transitioned
 */
.rmcc-sticky {
  /* 1 */
  position: relative;
  /* 2 */
  z-index: 980;
  /* 3 */
  box-sizing: border-box;
}

.rmcc-sticky-fixed {
  margin: 0 !important;
}

/*
 * Faster animations
 */
.rmcc-sticky[class*=rmcc-animation-] {
  animation-duration: 0.2s;
}

.rmcc-sticky.rmcc-animation-reverse {
  animation-duration: 0.2s;
}

/*
 * Placeholder
 * Make content clickable for sticky cover and reveal effects
 */
.rmcc-sticky-placeholder {
  pointer-events: none;
}

/* ========================================================================
   Component: Off-canvas
 ========================================================================== */
/*
 * 1. Hide by default
 * 2. Set position
 */
.rmcc-offcanvas {
  /* 1 */
  display: none;
  /* 2 */
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  z-index: 1000;
}

/*
 * Flip modifier
 */
.rmcc-offcanvas-flip .rmcc-offcanvas {
  right: 0;
  left: auto;
}

/* Bar
 ========================================================================== */
/*
 * 1. Set position
 * 2. Size and style
 * 3. Allow scrolling
 */
.rmcc-offcanvas-bar {
  --rmcc-inverse: light;
  /* 1 */
  position: absolute;
  top: 0;
  bottom: 0;
  left: -270px;
  /* 2 */
  box-sizing: border-box;
  width: 270px;
  padding: 20px 20px;
  background: #222;
  /* 3 */
  overflow-y: auto;
}

/* Phone landscape and bigger */
@media (min-width: 640px) {
  .rmcc-offcanvas-bar {
    left: -350px;
    width: 350px;
    padding: 30px 30px;
  }
}
/* Flip modifier */
.rmcc-offcanvas-flip .rmcc-offcanvas-bar {
  left: auto;
  right: -270px;
}

/* Tablet landscape and bigger */
@media (min-width: 640px) {
  .rmcc-offcanvas-flip .rmcc-offcanvas-bar {
    right: -350px;
  }
}
/*
 * Open
 */
.rmcc-open > .rmcc-offcanvas-bar {
  left: 0;
}

.rmcc-offcanvas-flip .rmcc-open > .rmcc-offcanvas-bar {
  left: auto;
  right: 0;
}

/*
 * Slide Animation (Used in slide and push mode)
 */
.rmcc-offcanvas-bar-animation {
  transition: left 0.3s ease-out;
}

.rmcc-offcanvas-flip .rmcc-offcanvas-bar-animation {
  transition-property: right;
}

/*
 * Reveal Animation
 * 1. Set position
 * 2. Clip the bar
 * 3. Animation
 * 4. Reset position
 */
.rmcc-offcanvas-reveal {
  /* 1 */
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  /* 2 */
  width: 0;
  overflow: hidden;
  /* 3 */
  transition: width 0.3s ease-out;
}

.rmcc-offcanvas-reveal .rmcc-offcanvas-bar {
  /* 4 */
  left: 0;
}

.rmcc-offcanvas-flip .rmcc-offcanvas-reveal .rmcc-offcanvas-bar {
  /* 4 */
  left: auto;
  right: 0;
}

.rmcc-open > .rmcc-offcanvas-reveal {
  width: 270px;
}

/* Tablet landscape and bigger */
@media (min-width: 640px) {
  .rmcc-open > .rmcc-offcanvas-reveal {
    width: 350px;
  }
}
/*
 * Flip modifier
 */
.rmcc-offcanvas-flip .rmcc-offcanvas-reveal {
  right: 0;
  left: auto;
}

/* Close
 * Adopts `rmcc-close`
 ========================================================================== */
.rmcc-offcanvas-close {
  position: absolute;
  z-index: 1000;
  top: 5px;
  right: 5px;
  padding: 5px;
}

/* Tablet landscape and bigger */
@media (min-width: 640px) {
  .rmcc-offcanvas-close {
    top: 10px;
    right: 10px;
  }
}
/*
 * Remove margin from adjacent element
 */
.rmcc-offcanvas-close:first-child + * {
  margin-top: 0;
}

/* Overlay
 ========================================================================== */
/*
 * Overlay the whole page. Needed for the `::before`
 * 1. Using `100vw` so no modification is needed when off-canvas is flipped
 * 2. Allow for closing with swipe gesture on devices with pointer events.
 */
.rmcc-offcanvas-overlay {
  /* 1 */
  width: 100vw;
  /* 2 */
  touch-action: none;
}

/*
 * 1. Mask the whole page
 * 2. Fade-in transition
 */
.rmcc-offcanvas-overlay::before {
  /* 1 */
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background: rgba(0, 0, 0, 0.1);
  /* 2 */
  opacity: 0;
  transition: opacity 0.15s linear;
}

.rmcc-offcanvas-overlay.rmcc-open::before {
  opacity: 1;
}

/* Prevent scrolling
 ========================================================================== */
/*
 * Prevent horizontal scrollbar when the content is slide-out
 * Has to be on the `html` element too to make it work on the `body`
 * 1. `clip` is needed for `position: sticky` elements to keep their position
 */
.rmcc-offcanvas-page,
.rmcc-offcanvas-container {
  overflow-x: hidden;
  /* 1 */
  overflow-x: clip;
}

/* Container
 ========================================================================== */
/*
 * Prepare slide-out animation (Used in reveal and push mode)
 * Using `position: left` instead of `transform` because position `fixed` elements like sticky navbars
 * lose their fixed state and behaves like `absolute` within a transformed container
 * 1. Provide a fixed width and prevent shrinking
 */
.rmcc-offcanvas-container {
  position: relative;
  left: 0;
  transition: left 0.3s ease-out;
  /* 1 */
  box-sizing: border-box;
  width: 100%;
}

/*
 * Activate slide-out animation
 */
:not(.rmcc-offcanvas-flip).rmcc-offcanvas-container-animation {
  left: 270px;
}

.rmcc-offcanvas-flip.rmcc-offcanvas-container-animation {
  left: -270px;
}

/* Tablet landscape and bigger */
@media (min-width: 640px) {
  :not(.rmcc-offcanvas-flip).rmcc-offcanvas-container-animation {
    left: 350px;
  }
  .rmcc-offcanvas-flip.rmcc-offcanvas-container-animation {
    left: -350px;
  }
}
/* ========================================================================
   Component: Switcher
 ========================================================================== */
/*
 * Reset list
 */
.rmcc-switcher {
  margin: 0;
  padding: 0;
  list-style: none;
}

/* Items
 ========================================================================== */
/*
 * Hide not active items
 */
.rmcc-switcher > :not(.rmcc-active) {
  display: none;
}

/*
 * Remove margin from the last-child
 */
.rmcc-switcher > * > :last-child {
  margin-bottom: 0;
}

/* ========================================================================
   Component: Leader
 ========================================================================== */
.rmcc-leader {
  overflow: hidden;
}

/*
 * 1. Place element in text flow
 * 2. Never break into a new line
 * 3. Get a string back with as many repeating characters to fill the container
 * 4. Prevent wrapping. Overflowing characters will be clipped by the container
 */
.rmcc-leader-fill::after {
  /* 1 */
  display: inline-block;
  margin-left: 15px;
  /* 2 */
  width: 0;
  /* 3 */
  content: attr(data-fill);
  /* 4 */
  white-space: nowrap;
}

/*
 * Hide if media does not match
 */
.rmcc-leader-fill.rmcc-leader-hide::after {
  display: none;
}

/*
 * Pass fill character to JS
 */
:root {
  --rmcc-leader-fill-content: .;
}

/* ========================================================================
   Component: Notification
 ========================================================================== */
/*
 * 1. Set position
 * 2. Dimensions
 */
.rmcc-notification {
  /* 1 */
  position: fixed;
  top: 10px;
  left: 10px;
  z-index: 1040;
  /* 2 */
  box-sizing: border-box;
  width: 350px;
}

/* Position modifiers
========================================================================== */
.rmcc-notification-top-right,
.rmcc-notification-bottom-right {
  left: auto;
  right: 10px;
}

.rmcc-notification-top-center,
.rmcc-notification-bottom-center {
  left: 50%;
  margin-left: -175px;
}

.rmcc-notification-bottom-left,
.rmcc-notification-bottom-right,
.rmcc-notification-bottom-center {
  top: auto;
  bottom: 10px;
}

/* Responsiveness
========================================================================== */
/* Phones portrait and smaller */
@media (max-width: 639px) {
  .rmcc-notification {
    left: 10px;
    right: 10px;
    width: auto;
    margin: 0;
  }
}
/* Message
========================================================================== */
.rmcc-notification-message {
  position: relative;
  padding: 15px;
  background: #f8f8f8;
  color: #666;
  font-size: 1.25rem;
  line-height: 1.4;
  cursor: pointer;
}

* + .rmcc-notification-message {
  margin-top: 10px;
}

/* Close
 * Adopts `rmcc-close`
 ========================================================================== */
.rmcc-notification-close {
  display: none;
  position: absolute;
  top: 20px;
  right: 15px;
}

.rmcc-notification-message:hover .rmcc-notification-close {
  display: block;
}

/* Style modifiers
 ========================================================================== */
/*
 * Primary
 */
.rmcc-notification-message-primary {
  color: #1e87f0;
}

/*
 * Success
 */
.rmcc-notification-message-success {
  color: #32d296;
}

/*
 * Warning
 */
.rmcc-notification-message-warning {
  color: #faa05a;
}

/*
 * Danger
 */
.rmcc-notification-message-danger {
  color: #f0506e;
}

/* ========================================================================
   Component: Tooltip
 ========================================================================== */
/*
 * 1. Hide by default
 * 2. Position
 * 3. Remove tooltip from document flow to keep the UIkit container from changing its size when injected into the document initially
 * 4. Dimensions
 * 5. Style
 */
.rmcc-tooltip {
  /* 1 */
  display: none;
  /* 2 */
  position: absolute;
  z-index: 1030;
  --rmcc-position-offset: 10px;
  --rmcc-position-viewport-offset: 10;
  /* 3 */
  top: 0;
  /* 4 */
  box-sizing: border-box;
  max-width: 200px;
  padding: 3px 6px;
  /* 5 */
  background: #666;
  border-radius: 2px;
  color: #fff;
  font-size: 12px;
}

/* Show */
.rmcc-tooltip.rmcc-active {
  display: block;
}

/* ========================================================================
   Component: Sortable
 ========================================================================== */
.rmcc-sortable {
  position: relative;
}

/*
 * Remove margin from the last-child
 */
.rmcc-sortable > :last-child {
  margin-bottom: 0;
}

/* Drag
 ========================================================================== */
.rmcc-sortable-drag {
  position: fixed !important;
  z-index: 1050 !important;
  pointer-events: none;
}

/* Placeholder
 ========================================================================== */
.rmcc-sortable-placeholder {
  opacity: 0;
  pointer-events: none;
}

/* Empty modifier
 ========================================================================== */
.rmcc-sortable-empty {
  min-height: 50px;
}

/* Handle
 ========================================================================== */
/* Hover */
.rmcc-sortable-handle:hover {
  cursor: move;
}

/* ========================================================================
   Component: Countdown
 ========================================================================== */
/* Item
 ========================================================================== */
/* Number
 ========================================================================== */
/*
 * 1. Make numbers all of the same size to prevent jumping. Must be supported by the font.
 * 2. Style
 */
.rmcc-countdown-number {
  /* 1 */
  font-variant-numeric: tabular-nums;
  /* 2 */
  font-size: 2rem;
  line-height: 0.8;
}

/* Phone landscape and bigger */
@media (min-width: 640px) {
  .rmcc-countdown-number {
    font-size: 4rem;
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .rmcc-countdown-number {
    font-size: 6rem;
  }
}
/* Separator
 ========================================================================== */
.rmcc-countdown-separator {
  font-size: 1rem;
  line-height: 1.6;
}

/* Phone landscape and bigger */
@media (min-width: 640px) {
  .rmcc-countdown-separator {
    font-size: 2rem;
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .rmcc-countdown-separator {
    font-size: 3rem;
  }
}
/* Label
 ========================================================================== */
/* ========================================================================
   Component: Thumbnav
 ========================================================================== */
/*
 * 1. Allow items to wrap into the next line
 * 2. Reset list
 * 3. Gutter
 */
.rmcc-thumbnav {
  display: flex;
  /* 1 */
  flex-wrap: wrap;
  /* 2 */
  margin: 0;
  padding: 0;
  list-style: none;
  /* 3 */
  margin-left: -15px;
}

/*
 * Space is allocated based on content dimensions, but shrinks: 0 1 auto
 * 1. Gutter
 */
.rmcc-thumbnav > * {
  /* 1 */
  padding-left: 15px;
}

/* Items
 ========================================================================== */
/*
 * Items
 */
.rmcc-thumbnav > * > * {
  display: inline-block;
  position: relative;
}
.rmcc-thumbnav > * > *::after {
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background-image: linear-gradient(180deg, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.4));
  transition: opacity 0.1s ease-in-out;
}

/* Hover */
.rmcc-thumbnav > * > :hover::after {
  opacity: 0;
}

/* Active */
.rmcc-thumbnav > .rmcc-active > *::after {
  opacity: 0;
}

/* Modifier: 'rmcc-thumbnav-vertical'
 ========================================================================== */
/*
 * 1. Change direction
 * 2. Gutter
 */
.rmcc-thumbnav-vertical {
  /* 1 */
  flex-direction: column;
  /* 2 */
  margin-left: 0;
  margin-top: -15px;
}

/* 2 */
.rmcc-thumbnav-vertical > * {
  padding-left: 0;
  padding-top: 15px;
}

/* ========================================================================
   Component: Iconnav
 ========================================================================== */
/*
 * 1. Allow items to wrap into the next line
 * 2. Reset list
 * 3. Gutter
 */
.rmcc-iconnav {
  display: flex;
  /* 1 */
  flex-wrap: wrap;
  /* 2 */
  margin: 0;
  padding: 0;
  list-style: none;
  /* 3 */
  margin-left: -10px;
}

/*
 * Space is allocated based on content dimensions, but shrinks: 0 1 auto
 * 1. Gutter
 */
.rmcc-iconnav > * {
  /* 1 */
  padding-left: 10px;
}

/* Items
 ========================================================================== */
/*
 * Items must target `a` elements to exclude other elements (e.g. dropdowns)
 * 1. Center content vertically if there is still some text
 * 2. Imitate white space gap when using flexbox
 * 3. Force text not to affect item height
 * 4. Style
 * 5. Required for `a` if there is still some text
 */
.rmcc-iconnav > * > a {
  /* 1 */
  display: flex;
  align-items: center;
  /* 2 */
  column-gap: 0.25em;
  /* 3 */
  line-height: 0;
  /* 4 */
  color: #999;
  /* 5 */
  text-decoration: none;
  font-size: 0.875rem;
  transition: 0.1s ease-in-out;
  transition-property: color, background-color;
}

/* Hover */
.rmcc-iconnav > * > a:hover {
  color: #666;
}

/* Active */
.rmcc-iconnav > .rmcc-active > a {
  color: #666;
}

/* Modifier: 'rmcc-iconnav-vertical'
 ========================================================================== */
/*
 * 1. Change direction
 * 2. Gutter
 */
.rmcc-iconnav-vertical {
  /* 1 */
  flex-direction: column;
  /* 2 */
  margin-left: 0;
  margin-top: -10px;
}

/* 2 */
.rmcc-iconnav-vertical > * {
  padding-left: 0;
  padding-top: 10px;
}

/* ========================================================================
   Component: Grid
 ========================================================================== */
/*
 * 1. Allow cells to wrap into the next line
 * 2. Reset list
 */
.rmcc-grid {
  display: flex;
  /* 1 */
  flex-wrap: wrap;
  /* 2 */
  margin: 0;
  padding: 0;
  list-style: none;
}

/*
 * Grid cell
 * Note: Space is allocated solely based on content dimensions, but shrinks: 0 1 auto
 * Reset margin for e.g. paragraphs
 */
.rmcc-grid > * {
  margin: 0;
}

/*
 * Remove margin from the last-child
 */
.rmcc-grid > * > :last-child {
  margin-bottom: 0;
}

/* Gutter
 ========================================================================== */
/*
 * Default
 */
/* Horizontal */
.rmcc-grid {
  margin-left: -30px;
}

.rmcc-grid > * {
  padding-left: 30px;
}

/* Vertical */
.rmcc-grid + .rmcc-grid,
.rmcc-grid > .rmcc-grid-margin,
* + .rmcc-grid-margin {
  margin-top: 30px;
}

/* Desktop and bigger */
@media (min-width: 1200px) {
  /* Horizontal */
  .rmcc-grid {
    margin-left: -40px;
  }
  .rmcc-grid > * {
    padding-left: 40px;
  }
  /* Vertical */
  .rmcc-grid + .rmcc-grid,
  .rmcc-grid > .rmcc-grid-margin,
  * + .rmcc-grid-margin {
    margin-top: 40px;
  }
}
/*
 * Small
 */
/* Horizontal */
.rmcc-grid-small,
.rmcc-grid-column-small {
  margin-left: -15px;
}

.rmcc-grid-small > *,
.rmcc-grid-column-small > * {
  padding-left: 15px;
}

/* Vertical */
.rmcc-grid + .rmcc-grid-small,
.rmcc-grid + .rmcc-grid-row-small,
.rmcc-grid-small > .rmcc-grid-margin,
.rmcc-grid-row-small > .rmcc-grid-margin,
* + .rmcc-grid-margin-small {
  margin-top: 15px;
}

/*
 * Medium
 */
/* Horizontal */
.rmcc-grid-medium,
.rmcc-grid-column-medium {
  margin-left: -30px;
}

.rmcc-grid-medium > *,
.rmcc-grid-column-medium > * {
  padding-left: 30px;
}

/* Vertical */
.rmcc-grid + .rmcc-grid-medium,
.rmcc-grid + .rmcc-grid-row-medium,
.rmcc-grid-medium > .rmcc-grid-margin,
.rmcc-grid-row-medium > .rmcc-grid-margin,
* + .rmcc-grid-margin-medium {
  margin-top: 30px;
}

/*
 * Large
 */
/* Horizontal */
.rmcc-grid-large,
.rmcc-grid-column-large {
  margin-left: -40px;
}

.rmcc-grid-large > *,
.rmcc-grid-column-large > * {
  padding-left: 40px;
}

/* Vertical */
.rmcc-grid + .rmcc-grid-large,
.rmcc-grid + .rmcc-grid-row-large,
.rmcc-grid-large > .rmcc-grid-margin,
.rmcc-grid-row-large > .rmcc-grid-margin,
* + .rmcc-grid-margin-large {
  margin-top: 40px;
}

/* Desktop and bigger */
@media (min-width: 1200px) {
  /* Horizontal */
  .rmcc-grid-large,
  .rmcc-grid-column-large {
    margin-left: -70px;
  }
  .rmcc-grid-large > *,
  .rmcc-grid-column-large > * {
    padding-left: 70px;
  }
  /* Vertical */
  .rmcc-grid + .rmcc-grid-large,
  .rmcc-grid + .rmcc-grid-row-large,
  .rmcc-grid-large > .rmcc-grid-margin,
  .rmcc-grid-row-large > .rmcc-grid-margin,
  * + .rmcc-grid-margin-large {
    margin-top: 70px;
  }
}
/*
 * Collapse
 */
/* Horizontal */
.rmcc-grid-collapse,
.rmcc-grid-column-collapse {
  margin-left: 0;
}

.rmcc-grid-collapse > *,
.rmcc-grid-column-collapse > * {
  padding-left: 0;
}

/* Vertical */
.rmcc-grid + .rmcc-grid-collapse,
.rmcc-grid + .rmcc-grid-row-collapse,
.rmcc-grid-collapse > .rmcc-grid-margin,
.rmcc-grid-row-collapse > .rmcc-grid-margin {
  margin-top: 0;
}

/* Divider
 ========================================================================== */
.rmcc-grid-divider > * {
  position: relative;
}

.rmcc-grid-divider > :not(.rmcc-first-column)::before {
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  border-left: 1px solid #e5e5e5;
}

/* Vertical */
.rmcc-grid-divider.rmcc-grid-stack > .rmcc-grid-margin::before {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  border-top: 1px solid #e5e5e5;
}

/*
 * Default
 */
/* Horizontal */
.rmcc-grid-divider {
  margin-left: -60px;
}

.rmcc-grid-divider > * {
  padding-left: 60px;
}

.rmcc-grid-divider > :not(.rmcc-first-column)::before {
  left: 30px;
}

/* Vertical */
.rmcc-grid-divider.rmcc-grid-stack > .rmcc-grid-margin {
  margin-top: 60px;
}

.rmcc-grid-divider.rmcc-grid-stack > .rmcc-grid-margin::before {
  top: -30px;
  left: 60px;
}

/* Desktop and bigger */
@media (min-width: 1200px) {
  /* Horizontal */
  .rmcc-grid-divider {
    margin-left: -80px;
  }
  .rmcc-grid-divider > * {
    padding-left: 80px;
  }
  .rmcc-grid-divider > :not(.rmcc-first-column)::before {
    left: 40px;
  }
  /* Vertical */
  .rmcc-grid-divider.rmcc-grid-stack > .rmcc-grid-margin {
    margin-top: 80px;
  }
  .rmcc-grid-divider.rmcc-grid-stack > .rmcc-grid-margin::before {
    top: -40px;
    left: 80px;
  }
}
/*
 * Small
 */
/* Horizontal */
.rmcc-grid-divider.rmcc-grid-small,
.rmcc-grid-divider.rmcc-grid-column-small {
  margin-left: -30px;
}

.rmcc-grid-divider.rmcc-grid-small > *,
.rmcc-grid-divider.rmcc-grid-column-small > * {
  padding-left: 30px;
}

.rmcc-grid-divider.rmcc-grid-small > :not(.rmcc-first-column)::before,
.rmcc-grid-divider.rmcc-grid-column-small > :not(.rmcc-first-column)::before {
  left: 15px;
}

/* Vertical */
.rmcc-grid-divider.rmcc-grid-small.rmcc-grid-stack > .rmcc-grid-margin,
.rmcc-grid-divider.rmcc-grid-row-small.rmcc-grid-stack > .rmcc-grid-margin {
  margin-top: 30px;
}

.rmcc-grid-divider.rmcc-grid-small.rmcc-grid-stack > .rmcc-grid-margin::before {
  top: -15px;
  left: 30px;
}

.rmcc-grid-divider.rmcc-grid-row-small.rmcc-grid-stack > .rmcc-grid-margin::before {
  top: -15px;
}

.rmcc-grid-divider.rmcc-grid-column-small.rmcc-grid-stack > .rmcc-grid-margin::before {
  left: 30px;
}

/*
 * Medium
 */
/* Horizontal */
.rmcc-grid-divider.rmcc-grid-medium,
.rmcc-grid-divider.rmcc-grid-column-medium {
  margin-left: -60px;
}

.rmcc-grid-divider.rmcc-grid-medium > *,
.rmcc-grid-divider.rmcc-grid-column-medium > * {
  padding-left: 60px;
}

.rmcc-grid-divider.rmcc-grid-medium > :not(.rmcc-first-column)::before,
.rmcc-grid-divider.rmcc-grid-column-medium > :not(.rmcc-first-column)::before {
  left: 30px;
}

/* Vertical */
.rmcc-grid-divider.rmcc-grid-medium.rmcc-grid-stack > .rmcc-grid-margin,
.rmcc-grid-divider.rmcc-grid-row-medium.rmcc-grid-stack > .rmcc-grid-margin {
  margin-top: 60px;
}

.rmcc-grid-divider.rmcc-grid-medium.rmcc-grid-stack > .rmcc-grid-margin::before {
  top: -30px;
  left: 60px;
}

.rmcc-grid-divider.rmcc-grid-row-medium.rmcc-grid-stack > .rmcc-grid-margin::before {
  top: -30px;
}

.rmcc-grid-divider.rmcc-grid-column-medium.rmcc-grid-stack > .rmcc-grid-margin::before {
  left: 60px;
}

/*
 * Large
 */
/* Horizontal */
.rmcc-grid-divider.rmcc-grid-large,
.rmcc-grid-divider.rmcc-grid-column-large {
  margin-left: -80px;
}

.rmcc-grid-divider.rmcc-grid-large > *,
.rmcc-grid-divider.rmcc-grid-column-large > * {
  padding-left: 80px;
}

.rmcc-grid-divider.rmcc-grid-large > :not(.rmcc-first-column)::before,
.rmcc-grid-divider.rmcc-grid-column-large > :not(.rmcc-first-column)::before {
  left: 40px;
}

/* Vertical */
.rmcc-grid-divider.rmcc-grid-large.rmcc-grid-stack > .rmcc-grid-margin,
.rmcc-grid-divider.rmcc-grid-row-large.rmcc-grid-stack > .rmcc-grid-margin {
  margin-top: 80px;
}

.rmcc-grid-divider.rmcc-grid-large.rmcc-grid-stack > .rmcc-grid-margin::before {
  top: -40px;
  left: 80px;
}

.rmcc-grid-divider.rmcc-grid-row-large.rmcc-grid-stack > .rmcc-grid-margin::before {
  top: -40px;
}

.rmcc-grid-divider.rmcc-grid-column-large.rmcc-grid-stack > .rmcc-grid-margin::before {
  left: 80px;
}

/* Desktop and bigger */
@media (min-width: 1200px) {
  /* Horizontal */
  .rmcc-grid-divider.rmcc-grid-large,
  .rmcc-grid-divider.rmcc-grid-column-large {
    margin-left: -140px;
  }
  .rmcc-grid-divider.rmcc-grid-large > *,
  .rmcc-grid-divider.rmcc-grid-column-large > * {
    padding-left: 140px;
  }
  .rmcc-grid-divider.rmcc-grid-large > :not(.rmcc-first-column)::before,
  .rmcc-grid-divider.rmcc-grid-column-large > :not(.rmcc-first-column)::before {
    left: 70px;
  }
  /* Vertical */
  .rmcc-grid-divider.rmcc-grid-large.rmcc-grid-stack > .rmcc-grid-margin,
  .rmcc-grid-divider.rmcc-grid-row-large.rmcc-grid-stack > .rmcc-grid-margin {
    margin-top: 140px;
  }
  .rmcc-grid-divider.rmcc-grid-large.rmcc-grid-stack > .rmcc-grid-margin::before {
    top: -70px;
    left: 140px;
  }
  .rmcc-grid-divider.rmcc-grid-row-large.rmcc-grid-stack > .rmcc-grid-margin::before {
    top: -70px;
  }
  .rmcc-grid-divider.rmcc-grid-column-large.rmcc-grid-stack > .rmcc-grid-margin::before {
    left: 140px;
  }
}
/* Match child of a grid cell
 ========================================================================== */
/*
 * Behave like a block element
 * 1. Wrap into the next line
 * 2. Take the full width, at least 100%. Only if no class from the Width component is set.
 * 3. Expand width even if larger than 100%, e.g. because of negative margin (Needed for nested grids)
 */
.rmcc-grid-match > *,
.rmcc-grid-item-match {
  display: flex;
  /* 1 */
  flex-wrap: wrap;
}

.rmcc-grid-match > * > :not([class*=rmcc-width]),
.rmcc-grid-item-match > :not([class*=rmcc-width]) {
  /* 2 */
  box-sizing: border-box;
  width: 100%;
  /* 3 */
  flex: auto;
}

/* ========================================================================
   Component: Nav
 ========================================================================== */
/*
 * Reset
 */
.rmcc-nav,
.rmcc-nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

/*
* 1. Center content vertically, e.g. an icon
* 2. Imitate white space gap when using flexbox
* 3. Reset link
 */
.rmcc-nav li > a {
  /* 1 */
  display: flex;
  align-items: center;
  /* 2 */
  column-gap: 0.25em;
  /* 3*/
  text-decoration: none;
}

/*
 * Items
 * Must target `a` elements to exclude other elements (e.g. lists)
 */
.rmcc-nav > li > a {
  padding: 5px 0;
}

/* Sublists
 ========================================================================== */
/*
 * Level 2
 * `ul` needed for higher specificity to override padding
 */
ul.rmcc-nav-sub {
  padding: 5px 0 5px 15px;
}

/*
 * Level 3 and deeper
 */
.rmcc-nav-sub ul {
  padding-left: 15px;
}

/*
 * Items
 */
.rmcc-nav-sub a {
  padding: 2px 0;
}

/* Parent icon
 ========================================================================== */
.rmcc-nav-parent-icon {
  margin-left: auto;
  transition: transform 0.3s ease-out;
}

.rmcc-nav > li.rmcc-open > a .rmcc-nav-parent-icon {
  transform: rotateX(180deg);
}

/* Header
 ========================================================================== */
.rmcc-nav-header {
  padding: 5px 0;
  text-transform: uppercase;
  font-size: 0.875rem;
}

.rmcc-nav-header:not(:first-child) {
  margin-top: 20px;
}

/* Divider
 ========================================================================== */
.rmcc-nav .rmcc-nav-divider {
  margin: 5px 0;
}

/* Default modifier
 ========================================================================== */
.rmcc-nav-default {
  font-size: 0.875rem;
  line-height: 1.5;
}

/*
 * Items
 */
.rmcc-nav-default > li > a {
  color: #999;
}

/* Hover */
.rmcc-nav-default > li > a:hover {
  color: #666;
}

/* Active */
.rmcc-nav-default > li.rmcc-active > a {
  color: #333;
}

/*
 * Subtitle
 */
.rmcc-nav-default .rmcc-nav-subtitle {
  font-size: 12px;
}

/*
 * Header
 */
.rmcc-nav-default .rmcc-nav-header {
  color: #333;
}

/*
 * Divider
 */
.rmcc-nav-default .rmcc-nav-divider {
  border-top: 1px solid #e5e5e5;
}

/*
 * Sublists
 */
.rmcc-nav-default .rmcc-nav-sub {
  font-size: 0.875rem;
  line-height: 1.5;
}

.rmcc-nav-default .rmcc-nav-sub a {
  color: #999;
}

.rmcc-nav-default .rmcc-nav-sub a:hover {
  color: #666;
}

.rmcc-nav-default .rmcc-nav-sub li.rmcc-active > a {
  color: #333;
}

/* Primary modifier
 ========================================================================== */
.rmcc-nav-primary {
  font-size: 1.5rem;
  line-height: 1.5;
}

/*
 * Items
 */
.rmcc-nav-primary > li > a {
  color: #999;
}

/* Hover */
.rmcc-nav-primary > li > a:hover {
  color: #666;
}

/* Active */
.rmcc-nav-primary > li.rmcc-active > a {
  color: #333;
}

/*
 * Subtitle
 */
.rmcc-nav-primary .rmcc-nav-subtitle {
  font-size: 1.25rem;
}

/*
 * Header
 */
.rmcc-nav-primary .rmcc-nav-header {
  color: #333;
}

/*
 * Divider
 */
.rmcc-nav-primary .rmcc-nav-divider {
  border-top: 1px solid #e5e5e5;
}

/*
 * Sublists
 */
.rmcc-nav-primary .rmcc-nav-sub {
  font-size: 1.25rem;
  line-height: 1.5;
}

.rmcc-nav-primary .rmcc-nav-sub a {
  color: #999;
}

.rmcc-nav-primary .rmcc-nav-sub a:hover {
  color: #666;
}

.rmcc-nav-primary .rmcc-nav-sub li.rmcc-active > a {
  color: #333;
}

/* Secondary modifier
 ========================================================================== */
.rmcc-nav-secondary {
  font-size: 16px;
  line-height: 1.5;
}
.rmcc-nav-secondary > :not(.rmcc-nav-divider) + :not(.rmcc-nav-header, .rmcc-nav-divider) {
  margin-top: 0;
}

/*
 * Items
 */
.rmcc-nav-secondary > li > a {
  color: #333;
  padding: 10px 10px;
}

/* Hover */
.rmcc-nav-secondary > li > a:hover {
  color: #333;
  background-color: #f8f8f8;
}

/* Active */
.rmcc-nav-secondary > li.rmcc-active > a {
  color: #333;
  background-color: #f8f8f8;
}

/*
 * Subtitle
 */
.rmcc-nav-secondary .rmcc-nav-subtitle {
  font-size: 0.875rem;
  color: #999;
}

/* Hover */
.rmcc-nav-secondary > li > a:hover .rmcc-nav-subtitle {
  color: #666;
}

/* Active */
.rmcc-nav-secondary > li.rmcc-active > a .rmcc-nav-subtitle {
  color: #333;
}

/*
 * Header
 */
.rmcc-nav-secondary .rmcc-nav-header {
  color: #333;
}

/*
 * Divider
 */
.rmcc-nav-secondary .rmcc-nav-divider {
  border-top: 1px solid #e5e5e5;
}

/*
 * Sublists
 */
.rmcc-nav-secondary .rmcc-nav-sub {
  font-size: 0.875rem;
  line-height: 1.5;
}

.rmcc-nav-secondary .rmcc-nav-sub a {
  color: #999;
}

.rmcc-nav-secondary .rmcc-nav-sub a:hover {
  color: #666;
}

.rmcc-nav-secondary .rmcc-nav-sub li.rmcc-active > a {
  color: #333;
}

/* Size modifier
 ========================================================================== */
/*
 * Medium
 */
.rmcc-nav-medium {
  font-size: 2.8875rem;
  line-height: 1;
}

.rmcc-nav-large {
  font-size: 3.4rem;
  line-height: 1;
}

.rmcc-nav-xlarge {
  font-size: 4rem;
  line-height: 1;
}

/* Tablet Landscape and bigger */
@media (min-width: 960px) {
  .rmcc-nav-medium {
    font-size: 3.5rem;
  }
  .rmcc-nav-large {
    font-size: 4rem;
  }
  .rmcc-nav-xlarge {
    font-size: 6rem;
  }
}
/* Laptop and bigger */
@media (min-width: 1200px) {
  .rmcc-nav-medium {
    font-size: 4rem;
  }
  .rmcc-nav-large {
    font-size: 6rem;
  }
  .rmcc-nav-xlarge {
    font-size: 8rem;
  }
}
/* Alignment modifier
 ========================================================================== */
/*
 * 1. Center header
 * 2. Center items
 */
/* 1 */
.rmcc-nav-center {
  text-align: center;
}

/* 2 */
.rmcc-nav-center li > a {
  justify-content: center;
}

/* Sublists */
.rmcc-nav-center .rmcc-nav-sub,
.rmcc-nav-center .rmcc-nav-sub ul {
  padding-left: 0;
}

/* Parent icon  */
.rmcc-nav-center .rmcc-nav-parent-icon {
  margin-left: 0.25em;
}

/* Style modifier
 ========================================================================== */
/*
 * Divider
 * Naming is in plural to prevent conflicts with divider sub object.
 */
.rmcc-nav.rmcc-nav-divider > :not(.rmcc-nav-header, .rmcc-nav-divider) + :not(.rmcc-nav-header, .rmcc-nav-divider) {
  margin-top: 5px;
  padding-top: 5px;
  border-top: 1px solid #e5e5e5;
}

/* ========================================================================
   Component: Navbar
 ========================================================================== */
/*
 * 1. Create position context to center navbar group
 */
.rmcc-navbar {
  display: flex;
  /* 1 */
  position: relative;
}

/* Container
 ========================================================================== */
.rmcc-navbar-container:not(.rmcc-navbar-transparent) {
  background: #f8f8f8;
}

/* Groups
 ========================================================================== */
/*
 * 1. Align navs and items vertically if they have a different height
 */
.rmcc-navbar-left,
.rmcc-navbar-right,
[class*=rmcc-navbar-center] {
  display: flex;
  gap: 15px;
  /* 1 */
  align-items: center;
}

/*
 * Horizontal alignment
 * 1. Create position context for centered navbar with sub groups (left/right)
 * 2. Fix text wrapping if content is larger than 50% of the container.
 * 3. Needed for dropdowns because a new position context is created
 *    `z-index` must be smaller than off-canvas
 * 4. Align sub groups for centered navbar
 */
.rmcc-navbar-right {
  margin-left: auto;
}

.rmcc-navbar-center:only-child {
  margin-left: auto;
  margin-right: auto;
  /* 1 */
  position: relative;
}

.rmcc-navbar-center:not(:only-child) {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  /* 2 */
  width: max-content;
  box-sizing: border-box;
  /* 3 */
  z-index: 990;
}

/* 4 */
.rmcc-navbar-center-left,
.rmcc-navbar-center-right {
  position: absolute;
  top: 0;
}

.rmcc-navbar-center-left {
  right: calc(100% + 15px);
}

.rmcc-navbar-center-right {
  left: calc(100% + 15px);
}

[class*=rmcc-navbar-center-] {
  width: max-content;
  box-sizing: border-box;
}

/* Nav
 ========================================================================== */
/*
 * 1. Reset list
 */
.rmcc-navbar-nav {
  display: flex;
  gap: 15px;
  /* 1 */
  margin: 0;
  padding: 0;
  list-style: none;
}

/*
 * Allow items to wrap into the next line
 * Only not `absolute` positioned groups
 */
.rmcc-navbar-left,
.rmcc-navbar-right,
.rmcc-navbar-center:only-child {
  flex-wrap: wrap;
}

/*
 * Items
 * 1. Center content vertically and horizontally
 * 2. Imitate white space gap when using flexbox
 * 3. Dimensions
 * 4. Style
 * 5. Required for `a`
 */
.rmcc-navbar-nav > li > a,
.rmcc-navbar-item,
.rmcc-navbar-toggle {
  /* 1 */
  display: flex;
  justify-content: center;
  align-items: center;
  /* 2 */
  column-gap: 0.25em;
  /* 3 */
  box-sizing: border-box;
  min-height: 80px;
  /* 4 */
  font-size: 0.875rem;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 5 */
  text-decoration: none;
}

/*
 * Nav items
 */
.rmcc-navbar-nav > li > a {
  padding: 0 0;
  color: #999;
  text-transform: uppercase;
  transition: 0.1s ease-in-out;
  transition-property: color, background-color;
}

/*
 * Hover
 * Apply hover style also if dropdown is opened
 */
.rmcc-navbar-nav > li:hover > a,
.rmcc-navbar-nav > li > a[aria-expanded=true] {
  color: #666;
}

/* OnClick */
.rmcc-navbar-nav > li > a:active {
  color: #333;
}

/* Active */
.rmcc-navbar-nav > li.rmcc-active > a {
  color: #333;
}

/* Parent icon modifier
 ========================================================================== */
.rmcc-navbar-parent-icon {
  margin-left: 4px;
  transition: transform 0.3s ease-out;
}

.rmcc-navbar-nav > li > a[aria-expanded=true] .rmcc-navbar-parent-icon {
  transform: rotateX(180deg);
}

/* Item
 ========================================================================== */
.rmcc-navbar-item {
  padding: 0 0;
  color: #666;
}

/*
 * Remove margin from the last-child
 */
.rmcc-navbar-item > :last-child {
  margin-bottom: 0;
}

/* Toggle
 ========================================================================== */
.rmcc-navbar-toggle {
  padding: 0 0;
  color: #999;
}

.rmcc-navbar-toggle:hover,
.rmcc-navbar-toggle[aria-expanded=true] {
  color: #666;
  text-decoration: none;
}

/*
 * Icon
 * Adopts `rmcc-icon`
 */
/* Hover */
/* Subtitle
 ========================================================================== */
.rmcc-navbar-subtitle {
  font-size: 0.875rem;
}

/* Justify modifier
 ========================================================================== */
.rmcc-navbar-justify .rmcc-navbar-left,
.rmcc-navbar-justify .rmcc-navbar-right,
.rmcc-navbar-justify .rmcc-navbar-nav,
.rmcc-navbar-justify .rmcc-navbar-nav > li,
.rmcc-navbar-justify .rmcc-navbar-item,
.rmcc-navbar-justify .rmcc-navbar-toggle {
  flex-grow: 1;
}

/* Style modifiers
 ========================================================================== */
/* Dropdown
 ========================================================================== */
/*
 * Adopts `rmcc-drop`
 * 1. Set a default width
 * 2. Style
 */
.rmcc-navbar-dropdown {
  --rmcc-position-offset: 15px;
  --rmcc-position-shift-offset: 0;
  --rmcc-position-viewport-offset: 15px;
  --rmcc-inverse: dark;
  /* 1 */
  width: 200px;
  /* 2 */
  padding: 25px;
  background: #fff;
  color: #666;
  box-shadow: 0 5px 12px rgba(0, 0, 0, 0.15);
}

/*
 * Remove margin from the last-child
 */
.rmcc-navbar-dropdown > :last-child {
  margin-bottom: 0;
}

.rmcc-navbar-dropdown :focus-visible {
  outline-color: #333 !important;
}

/*
 * Grid
 * Adopts `rmcc-grid`
 */
/* Gutter Horizontal */
.rmcc-navbar-dropdown .rmcc-drop-grid {
  margin-left: -30px;
}

.rmcc-navbar-dropdown .rmcc-drop-grid > * {
  padding-left: 30px;
}

/* Gutter Vertical */
.rmcc-navbar-dropdown .rmcc-drop-grid > .rmcc-grid-margin {
  margin-top: 30px;
}

/*
 * Width modifier
 */
.rmcc-navbar-dropdown-width-2:not(.rmcc-drop-stack) {
  width: 400px;
}

.rmcc-navbar-dropdown-width-3:not(.rmcc-drop-stack) {
  width: 600px;
}

.rmcc-navbar-dropdown-width-4:not(.rmcc-drop-stack) {
  width: 800px;
}

.rmcc-navbar-dropdown-width-5:not(.rmcc-drop-stack) {
  width: 1000px;
}

/*
 * Size modifier
 */
.rmcc-navbar-dropdown-large {
  --rmcc-position-shift-offset: 0;
  padding: 40px;
}

/*
 * Dropbar modifier
 * 1. Reset dropdown width to prevent to early shifting
 * 2. Reset style
 * 3. Padding
 */
.rmcc-navbar-dropdown-dropbar {
  /* 1 */
  width: auto;
  /* 2 */
  background: transparent;
  /* 3 */
  padding: 25px 0 25px 0;
  --rmcc-position-offset: 0;
  --rmcc-position-shift-offset: 0;
  --rmcc-position-viewport-offset: 15px;
  box-shadow: none;
}

/* Phone landscape and bigger */
@media (min-width: 640px) {
  .rmcc-navbar-dropdown-dropbar {
    --rmcc-position-viewport-offset: 30px;
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .rmcc-navbar-dropdown-dropbar {
    --rmcc-position-viewport-offset: 40px;
  }
}
.rmcc-navbar-dropdown-dropbar-large {
  --rmcc-position-shift-offset: 0;
  padding-top: 40px;
  padding-bottom: 40px;
}

/* Dropdown Nav
 * Adopts `rmcc-nav`
 ========================================================================== */
.rmcc-navbar-dropdown-nav {
  font-size: 0.875rem;
}

/*
 * Items
 */
.rmcc-navbar-dropdown-nav > li > a {
  color: #999;
}

/* Hover */
.rmcc-navbar-dropdown-nav > li > a:hover {
  color: #666;
}

/* Active */
.rmcc-navbar-dropdown-nav > li.rmcc-active > a {
  color: #333;
}

/*
 * Subtitle
 */
.rmcc-navbar-dropdown-nav .rmcc-nav-subtitle {
  font-size: 12px;
}

/*
 * Header
 */
.rmcc-navbar-dropdown-nav .rmcc-nav-header {
  color: #333;
}

/*
 * Divider
 */
.rmcc-navbar-dropdown-nav .rmcc-nav-divider {
  border-top: 1px solid #e5e5e5;
}

/*
 * Sublists
 */
.rmcc-navbar-dropdown-nav .rmcc-nav-sub a {
  color: #999;
}

.rmcc-navbar-dropdown-nav .rmcc-nav-sub a:hover {
  color: #666;
}

.rmcc-navbar-dropdown-nav .rmcc-nav-sub li.rmcc-active > a {
  color: #333;
}

/* Dropbar
 ========================================================================== */
/*
 * Adopts `rmcc-dropnav-dropbar`
 */
.rmcc-navbar-container {
  transition: 0.1s ease-in-out;
  transition-property: background-color;
}

/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .rmcc-navbar-left,
  .rmcc-navbar-right,
  [class*=rmcc-navbar-center] {
    gap: 30px;
  }
  .rmcc-navbar-center-left {
    right: calc(100% + 30px);
  }
  .rmcc-navbar-center-right {
    left: calc(100% + 30px);
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .rmcc-navbar-nav {
    gap: 30px;
  }
}
/* ========================================================================
   Component: Subnav
 ========================================================================== */
/*
 * 1. Allow items to wrap into the next line
 * 2. Center items vertically if they have a different height
 * 3. Gutter
 * 4. Reset list
 */
.rmcc-subnav {
  display: flex;
  /* 1 */
  flex-wrap: wrap;
  /* 2 */
  align-items: center;
  /* 3 */
  margin-left: -20px;
  /* 4 */
  padding: 0;
  list-style: none;
}

/*
 * 1. Space is allocated solely based on content dimensions: 0 0 auto
 * 2. Gutter
 * 3. Create position context for dropdowns
 */
.rmcc-subnav > * {
  /* 1 */
  flex: none;
  /* 2 */
  padding-left: 20px;
  /* 3 */
  position: relative;
}

/* Items
 ========================================================================== */
/*
 * Items must target `a` elements to exclude other elements (e.g. dropdowns)
 * Using `:first-child` instead of `a` to support `span` elements for text
 * 1. Center content vertically, e.g. an icon
 * 2. Imitate white space gap when using flexbox
 * 3. Style
 */
.rmcc-subnav > * > :first-child {
  /* 1 */
  display: flex;
  align-items: center;
  /* 2 */
  column-gap: 0.25em;
  /* 3 */
  color: #999;
  font-size: 0.875rem;
  text-transform: uppercase;
  transition: 0.1s ease-in-out;
  transition-property: color, background-color;
}

/* Hover */
.rmcc-subnav > * > a:hover {
  color: #666;
  text-decoration: none;
}

/* Active */
.rmcc-subnav > .rmcc-active > a {
  color: #333;
}

/* Divider modifier
 ========================================================================== */
/*
 * Set gutter
 */
.rmcc-subnav-divider {
  margin-left: -41px;
}

/*
 * Align items and divider vertically
 */
.rmcc-subnav-divider > * {
  display: flex;
  align-items: center;
}

/*
 * Divider
 * 1. `nth-child` makes it also work without JS if it's only one row
 */
.rmcc-subnav-divider > ::before {
  content: "";
  height: 1.5em;
  margin-left: 0px;
  margin-right: 20px;
  border-left: 1px solid transparent;
}

/* 1 */
.rmcc-subnav-divider > :nth-child(n+2):not(.rmcc-first-column)::before {
  border-left-color: #e5e5e5;
}

/* Pill modifier
 ========================================================================== */
/*
 * Gutter
 */
.rmcc-subnav-pill {
  margin-left: -20px;
}

.rmcc-subnav-pill > * {
  padding-left: 20px;
}

.rmcc-subnav-pill > * > :first-child {
  padding: 5px 10px;
  background: transparent;
  color: #999;
}

/* Hover */
.rmcc-subnav-pill > * > a:hover {
  background-color: #f8f8f8;
  color: #666;
}

/* OnClick */
.rmcc-subnav-pill > * > a:active {
  background-color: #f8f8f8;
  color: #666;
}

/* Active */
.rmcc-subnav-pill > .rmcc-active > a {
  background-color: #1e87f0;
  color: #fff;
}

/* Disabled
 * The same for all style modifiers
 ========================================================================== */
.rmcc-subnav > .rmcc-disabled > a {
  color: #999;
}

/* ========================================================================
   Component: Breadcrumb
 ========================================================================== */
/*
 * 1. Reset list
 * 2. Remove space between elements
 */
.rmcc-breadcrumb {
  /* 1 */
  padding: 0;
  list-style: none;
  /* 2 */
  font-size: 0;
}

/*
 * 1. Doesn't generate any box and replaced by child boxes
 */
.rmcc-breadcrumb > * {
  display: contents;
}

/* Items
 ========================================================================== */
.rmcc-breadcrumb > * > * {
  font-size: 0.875rem;
  color: #999;
}

/* Hover */
.rmcc-breadcrumb > * > :hover {
  color: #666;
  text-decoration: none;
}

/* Disabled */
/* Active */
.rmcc-breadcrumb > :last-child > span,
.rmcc-breadcrumb > :last-child > a:not([href]) {
  color: #666;
}

/*
 * Divider
 * `nth-child` makes it also work without JS if it's only one row
 * 1. Remove space between inline block elements.
 * 2. Style
 */
.rmcc-breadcrumb > :nth-child(n+2):not(.rmcc-first-column)::before {
  content: "/";
  display: inline-block;
  /* 1 */
  margin: 0 20px;
  /* 2 */
  font-size: 0.875rem;
  color: #999;
}

/* ========================================================================
   Component: Pagination
 ========================================================================== */
/*
 * 1. Allow items to wrap into the next line
 * 2. Center items vertically if they have a different height
 * 3. Gutter
 * 4. Reset list
 */
.rmcc-pagination {
  display: flex;
  /* 1 */
  flex-wrap: wrap;
  /* 2 */
  align-items: center;
  /* 3 */
  margin-left: 0;
  /* 4 */
  padding: 0;
  list-style: none;
}

/*
 * 1. Space is allocated solely based on content dimensions: 0 0 auto
 * 2. Gutter
 * 3. Create position context for dropdowns
 */
.rmcc-pagination > * {
  /* 1 */
  flex: none;
  /* 2 */
  padding-left: 0;
  /* 3 */
  position: relative;
}

/* Items
 ========================================================================== */
/*
 * 1. Center content vertically, e.g. an icon
 * 2. Imitate white space gap when using flexbox
 * 3. Style
 */
.rmcc-pagination > * > * {
  /* 1 */
  display: flex;
  align-items: center;
  /* 2 */
  column-gap: 0.25em;
  /* 3 */
  padding: 5px 10px;
  color: #999;
  transition: color 0.1s ease-in-out;
}

/* Hover */
.rmcc-pagination > * > :hover {
  color: #666;
  text-decoration: none;
}

/* Active */
.rmcc-pagination > .rmcc-active > * {
  color: #666;
}

/* Disabled */
.rmcc-pagination > .rmcc-disabled > * {
  color: #999;
}

/* ========================================================================
   Component: Tab
 ========================================================================== */
/*
 * 1. Allow items to wrap into the next line
 * 2. Gutter
 * 3. Reset list
 */
.rmcc-tab {
  display: flex;
  /* 1 */
  flex-wrap: wrap;
  /* 2 */
  margin-left: -20px;
  /* 3 */
  padding: 0;
  list-style: none;
  position: relative;
}
.rmcc-tab::before {
  content: "";
  position: absolute;
  bottom: 0;
  left: 20px;
  right: 0;
  border-bottom: 1px solid #e5e5e5;
}

/*
 * 1. Space is allocated solely based on content dimensions: 0 0 auto
 * 2. Gutter
 * 3. Create position context for dropdowns
 */
.rmcc-tab > * {
  /* 1 */
  flex: none;
  /* 2 */
  padding-left: 20px;
  /* 3 */
  position: relative;
}

/* Items
 ========================================================================== */
/*
 * Items must target `a` elements to exclude other elements (e.g. dropdowns)
 * 1. Center content vertically, e.g. an icon
 * 2. Imitate white space gap when using flexbox
 * 3. Center content if a width is set
 * 4. Style
 */
.rmcc-tab > * > a {
  /* 1 */
  display: flex;
  align-items: center;
  /* 2 */
  column-gap: 0.25em;
  /* 3 */
  justify-content: center;
  /* 4 */
  padding: 5px 10px;
  color: #999;
  border-bottom: 1px solid transparent;
  font-size: 0.875rem;
  text-transform: uppercase;
  transition: color 0.1s ease-in-out;
}

/* Hover */
.rmcc-tab > * > a:hover {
  color: #666;
  text-decoration: none;
}

/* Active */
.rmcc-tab > .rmcc-active > a {
  color: #333;
  border-color: #1e87f0;
}

/* Disabled */
.rmcc-tab > .rmcc-disabled > a {
  color: #999;
}

/* Position modifier
 ========================================================================== */
/*
 * Bottom
 */
.rmcc-tab-bottom::before {
  top: 0;
  bottom: auto;
}

.rmcc-tab-bottom > * > a {
  border-top: 1px solid transparent;
  border-bottom: none;
}

/*
 * Left + Right
 * 1. Reset Gutter
 */
.rmcc-tab-left,
.rmcc-tab-right {
  flex-direction: column;
  /* 1 */
  margin-left: 0;
}

/* 1 */
.rmcc-tab-left > *,
.rmcc-tab-right > * {
  padding-left: 0;
}

.rmcc-tab-left::before {
  top: 0;
  bottom: 0;
  left: auto;
  right: 0;
  border-left: 1px solid #e5e5e5;
  border-bottom: none;
}

.rmcc-tab-right::before {
  top: 0;
  bottom: 0;
  left: 0;
  right: auto;
  border-left: 1px solid #e5e5e5;
  border-bottom: none;
}

.rmcc-tab-left > * > a {
  justify-content: left;
  border-right: 1px solid transparent;
  border-bottom: none;
}

.rmcc-tab-right > * > a {
  justify-content: left;
  border-left: 1px solid transparent;
  border-bottom: none;
}

.rmcc-tab .rmcc-dropdown {
  margin-left: 30px;
}

/* ========================================================================
   Component: Slidenav
 ========================================================================== */
/*
 * Adopts `rmcc-icon`
 */
.rmcc-slidenav {
  padding: 5px 10px;
  color: rgba(102, 102, 102, 0.5);
  transition: color 0.1s ease-in-out;
}

/* Hover */
.rmcc-slidenav:hover {
  color: rgba(102, 102, 102, 0.9);
}

/* OnClick */
.rmcc-slidenav:active {
  color: rgba(102, 102, 102, 0.5);
}

/* Icon modifier
 ========================================================================== */
/*
 * Previous
 */
/*
 * Next
 */
/* Size modifier
 ========================================================================== */
.rmcc-slidenav-large {
  padding: 10px 10px;
}

/* Container
 ========================================================================== */
.rmcc-slidenav-container {
  display: flex;
}

/* ========================================================================
   Component: Dotnav
 ========================================================================== */
/*
 * 1. Allow items to wrap into the next line
 * 2. Reset list
 * 3. Gutter
 */
.rmcc-dotnav {
  display: flex;
  /* 1 */
  flex-wrap: wrap;
  /* 2 */
  margin: 0;
  padding: 0;
  list-style: none;
  /* 3 */
  margin-left: -12px;
}

/*
 * 1. Space is allocated solely based on content dimensions: 0 0 auto
 * 2. Gutter
 */
.rmcc-dotnav > * {
  /* 1 */
  flex: none;
  /* 2 */
  padding-left: 12px;
}

/* Items
 ========================================================================== */
/*
 * Items
 * 1. Hide text if present
 */
.rmcc-dotnav > * > * {
  display: block;
  box-sizing: border-box;
  width: 10px;
  height: 10px;
  border-radius: 50%;
  background: transparent;
  /* 1 */
  text-indent: 100%;
  overflow: hidden;
  white-space: nowrap;
  border: 1px solid rgba(102, 102, 102, 0.4);
  transition: 0.2s ease-in-out;
  transition-property: background-color, border-color;
}

/* Hover */
.rmcc-dotnav > * > :hover {
  background-color: rgba(102, 102, 102, 0.6);
  border-color: transparent;
}

/* OnClick */
.rmcc-dotnav > * > :active {
  background-color: rgba(102, 102, 102, 0.2);
  border-color: transparent;
}

/* Active */
.rmcc-dotnav > .rmcc-active > * {
  background-color: rgba(102, 102, 102, 0.6);
  border-color: transparent;
}

/* Modifier: 'rmcc-dotnav-vertical'
 ========================================================================== */
/*
 * 1. Change direction
 * 2. Gutter
 */
.rmcc-dotnav-vertical {
  /* 1 */
  flex-direction: column;
  /* 2 */
  margin-left: 0;
  margin-top: -12px;
}

/* 2 */
.rmcc-dotnav-vertical > * {
  padding-left: 0;
  padding-top: 12px;
}

/* ========================================================================
   Component: Dropdown
 ========================================================================== */
/*
 * Adopts `rmcc-drop`
 * 1. Reset drop and let text expand the width instead of wrapping
 * 2. Set a default width
 * 3. Style
 */
.rmcc-dropdown {
  --rmcc-position-offset: 10px;
  --rmcc-position-viewport-offset: 15px;
  --rmcc-inverse: dark;
  /* 1 */
  width: auto;
  /* 2 */
  min-width: 200px;
  /* 3 */
  padding: 25px;
  background: #fff;
  color: #666;
  box-shadow: 0 5px 12px rgba(0, 0, 0, 0.15);
}

/*
 * Remove margin from the last-child
 */
.rmcc-dropdown > :last-child {
  margin-bottom: 0;
}

.rmcc-dropdown :focus-visible {
  outline-color: #333 !important;
}

/* Size modifier
 ========================================================================== */
.rmcc-dropdown-large {
  padding: 40px;
}

/* Dropbar modifier
 ========================================================================== */
/*
 * 1. Reset dropdown width to prevent to early shifting
 * 2. Reset style
 * 3. Padding
 */
.rmcc-dropdown-dropbar {
  --rmcc-position-offset: 10px;
  /* 1 */
  width: auto;
  /* 2 */
  background: transparent;
  /* 3 */
  padding: 5px 0 25px 0;
  --rmcc-position-viewport-offset: 15px;
  box-shadow: none;
}

/* Phone landscape and bigger */
@media (min-width: 640px) {
  .rmcc-dropdown-dropbar {
    --rmcc-position-viewport-offset: 30px;
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .rmcc-dropdown-dropbar {
    --rmcc-position-viewport-offset: 40px;
  }
}
.rmcc-dropdown-dropbar-large {
  padding-top: 40px;
  padding-bottom: 40px;
}

/* Nav
 * Adopts `rmcc-nav`
 ========================================================================== */
.rmcc-dropdown-nav {
  font-size: 0.875rem;
}

/*
 * Items
 */
.rmcc-dropdown-nav > li > a {
  color: #999;
}

/* Hover + Active */
.rmcc-dropdown-nav > li > a:hover,
.rmcc-dropdown-nav > li.rmcc-active > a {
  color: #666;
}

/*
 * Subtitle
 */
.rmcc-dropdown-nav .rmcc-nav-subtitle {
  font-size: 12px;
}

/*
 * Header
 */
.rmcc-dropdown-nav .rmcc-nav-header {
  color: #333;
}

/*
 * Divider
 */
.rmcc-dropdown-nav .rmcc-nav-divider {
  border-top: 1px solid #e5e5e5;
}

/*
 * Sublists
 */
.rmcc-dropdown-nav .rmcc-nav-sub a {
  color: #999;
}

.rmcc-dropdown-nav .rmcc-nav-sub a:hover,
.rmcc-dropdown-nav .rmcc-nav-sub li.rmcc-active > a {
  color: #666;
}

/* ========================================================================
   Component: Lightbox
 ========================================================================== */
/*
 * 1. Hide by default
 * 2. Set position
 * 3. Allow scrolling for the modal dialog
 * 4. Horizontal padding
 * 5. Mask the background page
 * 6. Fade-in transition
 * 7. Prevent cancellation of pointer events while dragging
 */
.rmcc-lightbox {
  --rmcc-inverse: light;
  /* 1 */
  display: none;
  /* 2 */
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1010;
  /* 5 */
  background: #000;
  /* 6 */
  opacity: 0;
  transition: opacity 0.15s linear;
  /* 7 */
  touch-action: pinch-zoom;
}

/*
 * Open
 * 1. Center child
 * 2. Fade-in
 */
.rmcc-lightbox.rmcc-open {
  display: block;
  /* 2 */
  opacity: 1;
}

/*
 * Focus
 */
.rmcc-lightbox :focus-visible {
  outline-color: rgba(255, 255, 255, 0.7);
}

/* Page
 ========================================================================== */
/*
 * Prevent scrollbars
 */
.rmcc-lightbox-page {
  overflow: hidden;
}

/* Items
 ========================================================================== */
/*
 * Reset list
 */
.rmcc-lightbox-items {
  margin: 0;
  padding: 0;
  list-style: none;
}

/*
 * 1. Center child within the viewport
 * 2. Not visible by default
 * 3. Optimize animation
 * 4. Responsiveness
 *    Using `vh` for `max-height` to fix image proportions after resize in Safari and Opera
 */
.rmcc-lightbox-items > * {
  /* 1 */
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  /* 2 */
  display: none;
  justify-content: center;
  align-items: flex-start;
  /* 3 */
  will-change: transform, opacity;
  /* 4 */
  overflow: auto;
}

/* 2 */
.rmcc-lightbox-items > .rmcc-active {
  display: flex;
}

.rmcc-lightbox-items-fit > * {
  align-items: center;
}

/* 4 */
.rmcc-lightbox-items-fit > * > * {
  max-width: 100vw;
  max-height: 100vh;
}

.rmcc-lightbox-items-fit > * > :not(iframe) {
  width: auto;
  height: auto;
}

/* Zoom Cursor */
.rmcc-lightbox-items.rmcc-lightbox-items-fit .rmcc-lightbox-zoom:hover {
  cursor: zoom-in;
}

.rmcc-lightbox-items:not(.rmcc-lightbox-items-fit) .rmcc-lightbox-zoom:hover {
  cursor: zoom-out;
}

/* Navs
 ========================================================================== */
.rmcc-lightbox-thumbnav-vertical :where(img, video) {
  max-width: 100px;
}

.rmcc-lightbox-thumbnav:not(.rmcc-lightbox-thumbnav-vertical) :where(img, video) {
  max-height: 100px;
}

.rmcc-lightbox-thumbnav:empty,
.rmcc-lightbox-dotnav:empty {
  display: none;
}

/* Caption
 ========================================================================== */
.rmcc-lightbox-caption:empty {
  display: none;
}

.rmcc-lightbox-caption {
  padding: 10px 10px;
  background: rgba(0, 0, 0, 0.3);
  color: rgba(255, 255, 255, 0.7);
}

.rmcc-lightbox-caption > * {
  color: rgba(255, 255, 255, 0.7);
}

/* Counter
 ========================================================================== */
.rmcc-lightbox-counter:empty {
  display: none;
}

/* Iframe
 ========================================================================== */
.rmcc-lightbox-iframe {
  width: 80%;
  height: 80%;
}

/* ========================================================================
   Component: Animation
 ========================================================================== */
[class*=rmcc-animation-] {
  animation: 0.5s ease-out both;
}

/* Animations
 ========================================================================== */
/*
 * Fade
 */
.rmcc-animation-fade {
  animation-name: rmcc-fade;
  animation-duration: 0.8s;
  animation-timing-function: linear;
}

/*
 * Scale
 */
.rmcc-animation-scale-up {
  animation-name: rmcc-fade, rmcc-scale-up;
}

.rmcc-animation-scale-down {
  animation-name: rmcc-fade, rmcc-scale-down;
}

/*
 * Slide
 */
.rmcc-animation-slide-top {
  animation-name: rmcc-fade, rmcc-slide-top;
}

.rmcc-animation-slide-bottom {
  animation-name: rmcc-fade, rmcc-slide-bottom;
}

.rmcc-animation-slide-left {
  animation-name: rmcc-fade, rmcc-slide-left;
}

.rmcc-animation-slide-right {
  animation-name: rmcc-fade, rmcc-slide-right;
}

/*
 * Slide Small
 */
.rmcc-animation-slide-top-small {
  animation-name: rmcc-fade, rmcc-slide-top-small;
}

.rmcc-animation-slide-bottom-small {
  animation-name: rmcc-fade, rmcc-slide-bottom-small;
}

.rmcc-animation-slide-left-small {
  animation-name: rmcc-fade, rmcc-slide-left-small;
}

.rmcc-animation-slide-right-small {
  animation-name: rmcc-fade, rmcc-slide-right-small;
}

/*
 * Slide Medium
 */
.rmcc-animation-slide-top-medium {
  animation-name: rmcc-fade, rmcc-slide-top-medium;
}

.rmcc-animation-slide-bottom-medium {
  animation-name: rmcc-fade, rmcc-slide-bottom-medium;
}

.rmcc-animation-slide-left-medium {
  animation-name: rmcc-fade, rmcc-slide-left-medium;
}

.rmcc-animation-slide-right-medium {
  animation-name: rmcc-fade, rmcc-slide-right-medium;
}

/*
 * Kenburns
 */
.rmcc-animation-kenburns {
  animation-name: rmcc-kenburns;
  animation-duration: 15s;
}

/*
 * Shake
 */
.rmcc-animation-shake {
  animation-name: rmcc-shake;
}

/*
 * SVG Stroke
 * The `--rmcc-animation-stroke` custom property contains the longest path length.
 * Set it manually or use `rmcc-svg="stroke-animation: true"` to set it automatically.
 * All strokes are animated by the same pace and doesn't end simultaneously.
 * To end simultaneously, `pathLength="1"` could be used, but it's not working in Safari yet.
 */
.rmcc-animation-stroke {
  animation-name: rmcc-stroke;
  animation-duration: 2s;
  stroke-dasharray: var(--rmcc-animation-stroke);
}

/* Direction modifier
 ========================================================================== */
.rmcc-animation-reverse {
  animation-direction: reverse;
  animation-timing-function: ease-in;
}

/* Duration modifier
 ========================================================================== */
.rmcc-animation-fast {
  animation-duration: 0.1s;
}

/* Toggle animation based on the State of the Parent Element
 ========================================================================== */
.rmcc-animation-toggle:not(:hover):not(:focus) [class*=rmcc-animation-] {
  animation-name: none;
}

/* Keyframes used by animation classes
 ========================================================================== */
/*
 * Fade
 */
@keyframes rmcc-fade {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
/*
 * Scale
 */
@keyframes rmcc-scale-up {
  0% {
    transform: scale(0.9);
  }
  100% {
    transform: scale(1);
  }
}
@keyframes rmcc-scale-down {
  0% {
    transform: scale(1.1);
  }
  100% {
    transform: scale(1);
  }
}
/*
 * Slide
 */
@keyframes rmcc-slide-top {
  0% {
    transform: translateY(-100%);
  }
  100% {
    transform: translateY(0);
  }
}
@keyframes rmcc-slide-bottom {
  0% {
    transform: translateY(100%);
  }
  100% {
    transform: translateY(0);
  }
}
@keyframes rmcc-slide-left {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(0);
  }
}
@keyframes rmcc-slide-right {
  0% {
    transform: translateX(100%);
  }
  100% {
    transform: translateX(0);
  }
}
/*
 * Slide Small
 */
@keyframes rmcc-slide-top-small {
  0% {
    transform: translateY(-10px);
  }
  100% {
    transform: translateY(0);
  }
}
@keyframes rmcc-slide-bottom-small {
  0% {
    transform: translateY(10px);
  }
  100% {
    transform: translateY(0);
  }
}
@keyframes rmcc-slide-left-small {
  0% {
    transform: translateX(-10px);
  }
  100% {
    transform: translateX(0);
  }
}
@keyframes rmcc-slide-right-small {
  0% {
    transform: translateX(10px);
  }
  100% {
    transform: translateX(0);
  }
}
/*
 * Slide Medium
 */
@keyframes rmcc-slide-top-medium {
  0% {
    transform: translateY(-50px);
  }
  100% {
    transform: translateY(0);
  }
}
@keyframes rmcc-slide-bottom-medium {
  0% {
    transform: translateY(50px);
  }
  100% {
    transform: translateY(0);
  }
}
@keyframes rmcc-slide-left-medium {
  0% {
    transform: translateX(-50px);
  }
  100% {
    transform: translateX(0);
  }
}
@keyframes rmcc-slide-right-medium {
  0% {
    transform: translateX(50px);
  }
  100% {
    transform: translateX(0);
  }
}
/*
 * Kenburns
 */
@keyframes rmcc-kenburns {
  0% {
    transform: scale(1);
  }
  100% {
    transform: scale(1.2);
  }
}
/*
 * Shake
 */
@keyframes rmcc-shake {
  0%, 100% {
    transform: translateX(0);
  }
  10% {
    transform: translateX(-9px);
  }
  20% {
    transform: translateX(8px);
  }
  30% {
    transform: translateX(-7px);
  }
  40% {
    transform: translateX(6px);
  }
  50% {
    transform: translateX(-5px);
  }
  60% {
    transform: translateX(4px);
  }
  70% {
    transform: translateX(-3px);
  }
  80% {
    transform: translateX(2px);
  }
  90% {
    transform: translateX(-1px);
  }
}
/*
 * Stroke
 */
@keyframes rmcc-stroke {
  0% {
    stroke-dashoffset: var(--rmcc-animation-stroke);
  }
  100% {
    stroke-dashoffset: 0;
  }
}
/* ========================================================================
   Component: Width
 ========================================================================== */
/* Equal child widths
 ========================================================================== */
[class*=rmcc-child-width] > * {
  box-sizing: border-box;
  width: 100%;
}

.rmcc-child-width-1-2 > * {
  width: 50%;
}

.rmcc-child-width-1-3 > * {
  width: calc(100% / 3);
}

.rmcc-child-width-1-4 > * {
  width: 25%;
}

.rmcc-child-width-1-5 > * {
  width: 20%;
}

.rmcc-child-width-1-6 > * {
  width: calc(100% / 6);
}

.rmcc-child-width-auto > * {
  width: auto;
}

/*
 * 1. Reset the `min-width`, which is set to auto by default, because
 *    flex items won't shrink below their minimum intrinsic content size.
 *    Using `1px` instead of `0`, so items still wrap into the next line,
 *    if they have zero width and padding and the predecessor is 100% wide.
 */
.rmcc-child-width-expand > :not([class*=rmcc-width]) {
  flex: 1;
  /* 1 */
  min-width: 1px;
}

/* Phone landscape and bigger */
@media (min-width: 640px) {
  .rmcc-child-width-1-1\@s > * {
    width: 100%;
  }
  .rmcc-child-width-1-2\@s > * {
    width: 50%;
  }
  .rmcc-child-width-1-3\@s > * {
    width: calc(100% / 3);
  }
  .rmcc-child-width-1-4\@s > * {
    width: 25%;
  }
  .rmcc-child-width-1-5\@s > * {
    width: 20%;
  }
  .rmcc-child-width-1-6\@s > * {
    width: calc(100% / 6);
  }
  .rmcc-child-width-auto\@s > * {
    width: auto;
  }
  .rmcc-child-width-expand\@s > :not([class*=rmcc-width]) {
    flex: 1;
    min-width: 1px;
  }
  /* Reset expand */
  .rmcc-child-width-1-1\@s > :not([class*=rmcc-width]),
  .rmcc-child-width-1-2\@s > :not([class*=rmcc-width]),
  .rmcc-child-width-1-3\@s > :not([class*=rmcc-width]),
  .rmcc-child-width-1-4\@s > :not([class*=rmcc-width]),
  .rmcc-child-width-1-5\@s > :not([class*=rmcc-width]),
  .rmcc-child-width-1-6\@s > :not([class*=rmcc-width]),
  .rmcc-child-width-auto\@s > :not([class*=rmcc-width]) {
    flex: initial;
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .rmcc-child-width-1-1\@m > * {
    width: 100%;
  }
  .rmcc-child-width-1-2\@m > * {
    width: 50%;
  }
  .rmcc-child-width-1-3\@m > * {
    width: calc(100% / 3);
  }
  .rmcc-child-width-1-4\@m > * {
    width: 25%;
  }
  .rmcc-child-width-1-5\@m > * {
    width: 20%;
  }
  .rmcc-child-width-1-6\@m > * {
    width: calc(100% / 6);
  }
  .rmcc-child-width-auto\@m > * {
    width: auto;
  }
  .rmcc-child-width-expand\@m > :not([class*=rmcc-width]) {
    flex: 1;
    min-width: 1px;
  }
  /* Reset expand */
  .rmcc-child-width-1-1\@m > :not([class*=rmcc-width]),
  .rmcc-child-width-1-2\@m > :not([class*=rmcc-width]),
  .rmcc-child-width-1-3\@m > :not([class*=rmcc-width]),
  .rmcc-child-width-1-4\@m > :not([class*=rmcc-width]),
  .rmcc-child-width-1-5\@m > :not([class*=rmcc-width]),
  .rmcc-child-width-1-6\@m > :not([class*=rmcc-width]),
  .rmcc-child-width-auto\@m > :not([class*=rmcc-width]) {
    flex: initial;
  }
}
/* Desktop and bigger */
@media (min-width: 1200px) {
  .rmcc-child-width-1-1\@l > * {
    width: 100%;
  }
  .rmcc-child-width-1-2\@l > * {
    width: 50%;
  }
  .rmcc-child-width-1-3\@l > * {
    width: calc(100% / 3);
  }
  .rmcc-child-width-1-4\@l > * {
    width: 25%;
  }
  .rmcc-child-width-1-5\@l > * {
    width: 20%;
  }
  .rmcc-child-width-1-6\@l > * {
    width: calc(100% / 6);
  }
  .rmcc-child-width-auto\@l > * {
    width: auto;
  }
  .rmcc-child-width-expand\@l > :not([class*=rmcc-width]) {
    flex: 1;
    min-width: 1px;
  }
  /* Reset expand */
  .rmcc-child-width-1-1\@l > :not([class*=rmcc-width]),
  .rmcc-child-width-1-2\@l > :not([class*=rmcc-width]),
  .rmcc-child-width-1-3\@l > :not([class*=rmcc-width]),
  .rmcc-child-width-1-4\@l > :not([class*=rmcc-width]),
  .rmcc-child-width-1-5\@l > :not([class*=rmcc-width]),
  .rmcc-child-width-1-6\@l > :not([class*=rmcc-width]),
  .rmcc-child-width-auto\@l > :not([class*=rmcc-width]) {
    flex: initial;
  }
}
/* Large screen and bigger */
@media (min-width: 1600px) {
  .rmcc-child-width-1-1\@xl > * {
    width: 100%;
  }
  .rmcc-child-width-1-2\@xl > * {
    width: 50%;
  }
  .rmcc-child-width-1-3\@xl > * {
    width: calc(100% / 3);
  }
  .rmcc-child-width-1-4\@xl > * {
    width: 25%;
  }
  .rmcc-child-width-1-5\@xl > * {
    width: 20%;
  }
  .rmcc-child-width-1-6\@xl > * {
    width: calc(100% / 6);
  }
  .rmcc-child-width-auto\@xl > * {
    width: auto;
  }
  .rmcc-child-width-expand\@xl > :not([class*=rmcc-width]) {
    flex: 1;
    min-width: 1px;
  }
  /* Reset expand */
  .rmcc-child-width-1-1\@xl > :not([class*=rmcc-width]),
  .rmcc-child-width-1-2\@xl > :not([class*=rmcc-width]),
  .rmcc-child-width-1-3\@xl > :not([class*=rmcc-width]),
  .rmcc-child-width-1-4\@xl > :not([class*=rmcc-width]),
  .rmcc-child-width-1-5\@xl > :not([class*=rmcc-width]),
  .rmcc-child-width-1-6\@xl > :not([class*=rmcc-width]),
  .rmcc-child-width-auto\@xl > :not([class*=rmcc-width]) {
    flex: initial;
  }
}
/* Single Widths
 ========================================================================== */
/*
 * 1. `max-width` is needed for the pixel-based classes
 */
[class*=rmcc-width] {
  box-sizing: border-box;
  width: 100%;
  /* 1 */
  max-width: 100%;
}

/* Halves */
.rmcc-width-1-2 {
  width: 50%;
}

/* Thirds */
.rmcc-width-1-3 {
  width: calc(100% / 3);
}

.rmcc-width-2-3 {
  width: calc(200% / 3);
}

/* Quarters */
.rmcc-width-1-4 {
  width: 25%;
}

.rmcc-width-3-4 {
  width: 75%;
}

/* Fifths */
.rmcc-width-1-5 {
  width: 20%;
}

.rmcc-width-2-5 {
  width: 40%;
}

.rmcc-width-3-5 {
  width: 60%;
}

.rmcc-width-4-5 {
  width: 80%;
}

/* Sixths */
.rmcc-width-1-6 {
  width: calc(100% / 6);
}

.rmcc-width-5-6 {
  width: calc(500% / 6);
}

/* Pixel */
.rmcc-width-small {
  width: 150px;
}

.rmcc-width-medium {
  width: 300px;
}

.rmcc-width-large {
  width: 450px;
}

.rmcc-width-xlarge {
  width: 600px;
}

.rmcc-width-2xlarge {
  width: 750px;
}

/* Auto */
.rmcc-width-auto {
  width: auto;
}

/* Expand */
.rmcc-width-expand {
  flex: 1;
  min-width: 1px;
}

/* Phone landscape and bigger */
@media (min-width: 640px) {
  /* Whole */
  .rmcc-width-1-1\@s {
    width: 100%;
  }
  /* Halves */
  .rmcc-width-1-2\@s {
    width: 50%;
  }
  /* Thirds */
  .rmcc-width-1-3\@s {
    width: calc(100% / 3);
  }
  .rmcc-width-2-3\@s {
    width: calc(200% / 3);
  }
  /* Quarters */
  .rmcc-width-1-4\@s {
    width: 25%;
  }
  .rmcc-width-3-4\@s {
    width: 75%;
  }
  /* Fifths */
  .rmcc-width-1-5\@s {
    width: 20%;
  }
  .rmcc-width-2-5\@s {
    width: 40%;
  }
  .rmcc-width-3-5\@s {
    width: 60%;
  }
  .rmcc-width-4-5\@s {
    width: 80%;
  }
  /* Sixths */
  .rmcc-width-1-6\@s {
    width: calc(100% / 6);
  }
  .rmcc-width-5-6\@s {
    width: calc(500% / 6);
  }
  /* Pixel */
  .rmcc-width-small\@s {
    width: 150px;
  }
  .rmcc-width-medium\@s {
    width: 300px;
  }
  .rmcc-width-large\@s {
    width: 450px;
  }
  .rmcc-width-xlarge\@s {
    width: 600px;
  }
  .rmcc-width-2xlarge\@s {
    width: 750px;
  }
  /* Auto */
  .rmcc-width-auto\@s {
    width: auto;
  }
  /* Expand */
  .rmcc-width-expand\@s {
    flex: 1;
    min-width: 1px;
  }
  /* Reset expand */
  .rmcc-width-1-1\@s,
  .rmcc-width-1-2\@s,
  .rmcc-width-1-3\@s,
  .rmcc-width-2-3\@s,
  .rmcc-width-1-4\@s,
  .rmcc-width-3-4\@s,
  .rmcc-width-1-5\@s,
  .rmcc-width-2-5\@s,
  .rmcc-width-3-5\@s,
  .rmcc-width-4-5\@s,
  .rmcc-width-1-6\@s,
  .rmcc-width-5-6\@s,
  .rmcc-width-small\@s,
  .rmcc-width-medium\@s,
  .rmcc-width-large\@s,
  .rmcc-width-xlarge\@s,
  .rmcc-width-2xlarge\@s,
  .rmcc-width-auto\@s {
    flex: initial;
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  /* Whole */
  .rmcc-width-1-1\@m {
    width: 100%;
  }
  /* Halves */
  .rmcc-width-1-2\@m {
    width: 50%;
  }
  /* Thirds */
  .rmcc-width-1-3\@m {
    width: calc(100% / 3);
  }
  .rmcc-width-2-3\@m {
    width: calc(200% / 3);
  }
  /* Quarters */
  .rmcc-width-1-4\@m {
    width: 25%;
  }
  .rmcc-width-3-4\@m {
    width: 75%;
  }
  /* Fifths */
  .rmcc-width-1-5\@m {
    width: 20%;
  }
  .rmcc-width-2-5\@m {
    width: 40%;
  }
  .rmcc-width-3-5\@m {
    width: 60%;
  }
  .rmcc-width-4-5\@m {
    width: 80%;
  }
  /* Sixths */
  .rmcc-width-1-6\@m {
    width: calc(100% / 6);
  }
  .rmcc-width-5-6\@m {
    width: calc(500% / 6);
  }
  /* Pixel */
  .rmcc-width-small\@m {
    width: 150px;
  }
  .rmcc-width-medium\@m {
    width: 300px;
  }
  .rmcc-width-large\@m {
    width: 450px;
  }
  .rmcc-width-xlarge\@m {
    width: 600px;
  }
  .rmcc-width-2xlarge\@m {
    width: 750px;
  }
  /* Auto */
  .rmcc-width-auto\@m {
    width: auto;
  }
  /* Expand */
  .rmcc-width-expand\@m {
    flex: 1;
    min-width: 1px;
  }
  /* Reset expand */
  .rmcc-width-1-1\@m,
  .rmcc-width-1-2\@m,
  .rmcc-width-1-3\@m,
  .rmcc-width-2-3\@m,
  .rmcc-width-1-4\@m,
  .rmcc-width-3-4\@m,
  .rmcc-width-1-5\@m,
  .rmcc-width-2-5\@m,
  .rmcc-width-3-5\@m,
  .rmcc-width-4-5\@m,
  .rmcc-width-1-6\@m,
  .rmcc-width-5-6\@m,
  .rmcc-width-small\@m,
  .rmcc-width-medium\@m,
  .rmcc-width-large\@m,
  .rmcc-width-xlarge\@m,
  .rmcc-width-2xlarge\@m,
  .rmcc-width-auto\@m {
    flex: initial;
  }
}
/* Desktop and bigger */
@media (min-width: 1200px) {
  /* Whole */
  .rmcc-width-1-1\@l {
    width: 100%;
  }
  /* Halves */
  .rmcc-width-1-2\@l {
    width: 50%;
  }
  /* Thirds */
  .rmcc-width-1-3\@l {
    width: calc(100% / 3);
  }
  .rmcc-width-2-3\@l {
    width: calc(200% / 3);
  }
  /* Quarters */
  .rmcc-width-1-4\@l {
    width: 25%;
  }
  .rmcc-width-3-4\@l {
    width: 75%;
  }
  /* Fifths */
  .rmcc-width-1-5\@l {
    width: 20%;
  }
  .rmcc-width-2-5\@l {
    width: 40%;
  }
  .rmcc-width-3-5\@l {
    width: 60%;
  }
  .rmcc-width-4-5\@l {
    width: 80%;
  }
  /* Sixths */
  .rmcc-width-1-6\@l {
    width: calc(100% / 6);
  }
  .rmcc-width-5-6\@l {
    width: calc(500% / 6);
  }
  /* Pixel */
  .rmcc-width-small\@l {
    width: 150px;
  }
  .rmcc-width-medium\@l {
    width: 300px;
  }
  .rmcc-width-large\@l {
    width: 450px;
  }
  .rmcc-width-xlarge\@l {
    width: 600px;
  }
  .rmcc-width-2xlarge\@l {
    width: 750px;
  }
  /* Auto */
  .rmcc-width-auto\@l {
    width: auto;
  }
  /* Expand */
  .rmcc-width-expand\@l {
    flex: 1;
    min-width: 1px;
  }
  /* Reset expand */
  .rmcc-width-1-1\@l,
  .rmcc-width-1-2\@l,
  .rmcc-width-1-3\@l,
  .rmcc-width-2-3\@l,
  .rmcc-width-1-4\@l,
  .rmcc-width-3-4\@l,
  .rmcc-width-1-5\@l,
  .rmcc-width-2-5\@l,
  .rmcc-width-3-5\@l,
  .rmcc-width-4-5\@l,
  .rmcc-width-1-6\@l,
  .rmcc-width-5-6\@l,
  .rmcc-width-small\@l,
  .rmcc-width-medium\@l,
  .rmcc-width-large\@l,
  .rmcc-width-xlarge\@l,
  .rmcc-width-2xlarge\@l,
  .rmcc-width-auto\@l {
    flex: initial;
  }
}
/* Large screen and bigger */
@media (min-width: 1600px) {
  /* Whole */
  .rmcc-width-1-1\@xl {
    width: 100%;
  }
  /* Halves */
  .rmcc-width-1-2\@xl {
    width: 50%;
  }
  /* Thirds */
  .rmcc-width-1-3\@xl {
    width: calc(100% / 3);
  }
  .rmcc-width-2-3\@xl {
    width: calc(200% / 3);
  }
  /* Quarters */
  .rmcc-width-1-4\@xl {
    width: 25%;
  }
  .rmcc-width-3-4\@xl {
    width: 75%;
  }
  /* Fifths */
  .rmcc-width-1-5\@xl {
    width: 20%;
  }
  .rmcc-width-2-5\@xl {
    width: 40%;
  }
  .rmcc-width-3-5\@xl {
    width: 60%;
  }
  .rmcc-width-4-5\@xl {
    width: 80%;
  }
  /* Sixths */
  .rmcc-width-1-6\@xl {
    width: calc(100% / 6);
  }
  .rmcc-width-5-6\@xl {
    width: calc(500% / 6);
  }
  /* Pixel */
  .rmcc-width-small\@xl {
    width: 150px;
  }
  .rmcc-width-medium\@xl {
    width: 300px;
  }
  .rmcc-width-large\@xl {
    width: 450px;
  }
  .rmcc-width-xlarge\@xl {
    width: 600px;
  }
  .rmcc-width-2xlarge\@xl {
    width: 750px;
  }
  /* Auto */
  .rmcc-width-auto\@xl {
    width: auto;
  }
  /* Expand */
  .rmcc-width-expand\@xl {
    flex: 1;
    min-width: 1px;
  }
  /* Reset expand */
  .rmcc-width-1-1\@xl,
  .rmcc-width-1-2\@xl,
  .rmcc-width-1-3\@xl,
  .rmcc-width-2-3\@xl,
  .rmcc-width-1-4\@xl,
  .rmcc-width-3-4\@xl,
  .rmcc-width-1-5\@xl,
  .rmcc-width-2-5\@xl,
  .rmcc-width-3-5\@xl,
  .rmcc-width-4-5\@xl,
  .rmcc-width-1-6\@xl,
  .rmcc-width-5-6\@xl,
  .rmcc-width-small\@xl,
  .rmcc-width-medium\@xl,
  .rmcc-width-large\@xl,
  .rmcc-width-xlarge\@xl,
  .rmcc-width-2xlarge\@xl,
  .rmcc-width-auto\@xl {
    flex: initial;
  }
}
/* Intrinsic Widths
 ========================================================================== */
.rmcc-width-max-content {
  width: max-content;
}

.rmcc-width-min-content {
  width: min-content;
}

/* ========================================================================
   Component: Height
 ========================================================================== */
[class*=rmcc-height] {
  box-sizing: border-box;
}

/*
 * Only works if parent element has a height set
 */
.rmcc-height-1-1 {
  height: 100%;
}

/*
 * Useful to create image teasers
 */
.rmcc-height-viewport {
  min-height: 100vh;
}

.rmcc-height-viewport-2 {
  min-height: 200vh;
}

.rmcc-height-viewport-3 {
  min-height: 300vh;
}

.rmcc-height-viewport-4 {
  min-height: 400vh;
}

/*
 * Pixel
 * Useful for `overflow: auto`
 */
.rmcc-height-small {
  height: 150px;
}

.rmcc-height-medium {
  height: 300px;
}

.rmcc-height-large {
  height: 450px;
}

.rmcc-height-max-small {
  max-height: 150px;
}

.rmcc-height-max-medium {
  max-height: 300px;
}

.rmcc-height-max-large {
  max-height: 450px;
}

/* ========================================================================
   Component: Text
 ========================================================================== */
/* Style modifiers
 ========================================================================== */
.rmcc-text-lead {
  font-size: 1.5rem;
  line-height: 1.5;
  color: #333;
}

.rmcc-text-meta {
  font-size: 0.875rem;
  line-height: 1.4;
  color: #999;
}
.rmcc-text-meta > a {
  color: #999;
}
.rmcc-text-meta > a:hover {
  color: #666;
  text-decoration: none;
}

/* Size modifiers
 ========================================================================== */
.rmcc-text-small {
  font-size: 0.875rem;
  line-height: 1.5;
}

.rmcc-text-large {
  font-size: 1.5rem;
  line-height: 1.5;
}

.rmcc-text-default {
  font-size: 16px;
  line-height: 1.5;
}

/* Weight modifier
 ========================================================================== */
.rmcc-text-light {
  font-weight: 300;
}

.rmcc-text-normal {
  font-weight: 400;
}

.rmcc-text-bold {
  font-weight: 700;
}

.rmcc-text-lighter {
  font-weight: lighter;
}

.rmcc-text-bolder {
  font-weight: bolder;
}

/* Style modifier
 ========================================================================== */
.rmcc-text-italic {
  font-style: italic;
}

/* Transform modifier
 ========================================================================== */
.rmcc-text-capitalize {
  text-transform: capitalize !important;
}

.rmcc-text-uppercase {
  text-transform: uppercase !important;
}

.rmcc-text-lowercase {
  text-transform: lowercase !important;
}

/* Decoration modifier
 ========================================================================== */
.rmcc-text-decoration-none {
  text-decoration: none !important;
}

/* Color modifiers
 ========================================================================== */
.rmcc-text-muted {
  color: #999 !important;
}

.rmcc-text-emphasis {
  color: #333 !important;
}

.rmcc-text-primary {
  color: #1e87f0 !important;
}

.rmcc-text-secondary {
  color: #222 !important;
}

.rmcc-text-success {
  color: #32d296 !important;
}

.rmcc-text-warning {
  color: #faa05a !important;
}

.rmcc-text-danger {
  color: #f0506e !important;
}

/* Background modifier
 ========================================================================== */
/*
 * 1. The background clips to the foreground text. Works in all browsers.
 * 2. Default color is set to transparent.
 * 3. Container fits the text
 * 4. Style
 */
.rmcc-text-background {
  /* 1 */
  -webkit-background-clip: text;
  /* 2 */
  color: transparent !important;
  /* 3 */
  display: inline-block;
  /* 4 */
  background-color: #1e87f0;
  background-image: linear-gradient(90deg, #1e87f0 0%, #411ef0 100%);
}

/* Alignment modifiers
 ========================================================================== */
.rmcc-text-left {
  text-align: left !important;
}

.rmcc-text-right {
  text-align: right !important;
}

.rmcc-text-center {
  text-align: center !important;
}

.rmcc-text-justify {
  text-align: justify !important;
}

/* Phone landscape and bigger */
@media (min-width: 640px) {
  .rmcc-text-left\@s {
    text-align: left !important;
  }
  .rmcc-text-right\@s {
    text-align: right !important;
  }
  .rmcc-text-center\@s {
    text-align: center !important;
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .rmcc-text-left\@m {
    text-align: left !important;
  }
  .rmcc-text-right\@m {
    text-align: right !important;
  }
  .rmcc-text-center\@m {
    text-align: center !important;
  }
}
/* Desktop and bigger */
@media (min-width: 1200px) {
  .rmcc-text-left\@l {
    text-align: left !important;
  }
  .rmcc-text-right\@l {
    text-align: right !important;
  }
  .rmcc-text-center\@l {
    text-align: center !important;
  }
}
/* Large screen and bigger */
@media (min-width: 1600px) {
  .rmcc-text-left\@xl {
    text-align: left !important;
  }
  .rmcc-text-right\@xl {
    text-align: right !important;
  }
  .rmcc-text-center\@xl {
    text-align: center !important;
  }
}
/*
 * Vertical
 */
.rmcc-text-top {
  vertical-align: top !important;
}

.rmcc-text-middle {
  vertical-align: middle !important;
}

.rmcc-text-bottom {
  vertical-align: bottom !important;
}

.rmcc-text-baseline {
  vertical-align: baseline !important;
}

/* Wrap modifiers
 ========================================================================== */
/*
 * Prevent text from wrapping onto multiple lines
 */
.rmcc-text-nowrap {
  white-space: nowrap;
}

/*
 * 1. Make sure a max-width is set after which truncation can occur
 * 2. Prevent text from wrapping onto multiple lines, and truncate with an ellipsis
 * 3. Fix for table cells
 */
.rmcc-text-truncate {
  /* 1 */
  max-width: 100%;
  /* 2 */
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/* 2 */
th.rmcc-text-truncate,
td.rmcc-text-truncate {
  max-width: 0;
}

/*
 * Wrap long words onto the next line and break them if they are too long to fit.
 * 1. Make it work with table cells in all browsers.
 * Note: Not using `hyphens: auto` because it hyphenates text even if not needed.
 */
.rmcc-text-break {
  overflow-wrap: break-word;
}

/* 1 */
th.rmcc-text-break,
td.rmcc-text-break {
  word-break: break-word;
}

/* Stroke modifiers
 ========================================================================== */
.rmcc-text-stroke {
  -webkit-text-stroke: calc(1.4px + 0.002em);
  -webkit-text-fill-color: transparent;
}

/* ========================================================================
   Component: Column
 ========================================================================== */
[class*=rmcc-column-] {
  column-gap: 30px;
}

/* Desktop and bigger */
@media (min-width: 1200px) {
  [class*=rmcc-column-] {
    column-gap: 40px;
  }
}
/*
 * Fix image 1px line wrapping into the next column in Chrome
 */
[class*=rmcc-column-] img {
  transform: translate3d(0, 0, 0);
}

/* Divider
 ========================================================================== */
/*
 * 1. Double the column gap
 */
.rmcc-column-divider {
  column-rule: 1px solid #e5e5e5;
  /* 1 */
  column-gap: 60px;
}

/* Desktop and bigger */
@media (min-width: 1200px) {
  .rmcc-column-divider {
    column-gap: 80px;
  }
}
/* Width modifiers
 ========================================================================== */
.rmcc-column-1-2 {
  column-count: 2;
}

.rmcc-column-1-3 {
  column-count: 3;
}

.rmcc-column-1-4 {
  column-count: 4;
}

.rmcc-column-1-5 {
  column-count: 5;
}

.rmcc-column-1-6 {
  column-count: 6;
}

/* Phone landscape and bigger */
@media (min-width: 640px) {
  .rmcc-column-1-2\@s {
    column-count: 2;
  }
  .rmcc-column-1-3\@s {
    column-count: 3;
  }
  .rmcc-column-1-4\@s {
    column-count: 4;
  }
  .rmcc-column-1-5\@s {
    column-count: 5;
  }
  .rmcc-column-1-6\@s {
    column-count: 6;
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .rmcc-column-1-2\@m {
    column-count: 2;
  }
  .rmcc-column-1-3\@m {
    column-count: 3;
  }
  .rmcc-column-1-4\@m {
    column-count: 4;
  }
  .rmcc-column-1-5\@m {
    column-count: 5;
  }
  .rmcc-column-1-6\@m {
    column-count: 6;
  }
}
/* Desktop and bigger */
@media (min-width: 1200px) {
  .rmcc-column-1-2\@l {
    column-count: 2;
  }
  .rmcc-column-1-3\@l {
    column-count: 3;
  }
  .rmcc-column-1-4\@l {
    column-count: 4;
  }
  .rmcc-column-1-5\@l {
    column-count: 5;
  }
  .rmcc-column-1-6\@l {
    column-count: 6;
  }
}
/* Large screen and bigger */
@media (min-width: 1600px) {
  .rmcc-column-1-2\@xl {
    column-count: 2;
  }
  .rmcc-column-1-3\@xl {
    column-count: 3;
  }
  .rmcc-column-1-4\@xl {
    column-count: 4;
  }
  .rmcc-column-1-5\@xl {
    column-count: 5;
  }
  .rmcc-column-1-6\@xl {
    column-count: 6;
  }
}
/* Make element span across all columns
 * Does not work in Firefox yet
 ========================================================================== */
.rmcc-column-span {
  column-span: all;
}

/* ========================================================================
   Component: Cover
 ========================================================================== */
/*
 * Works with iframes and embedded content
 * 1. Use attribute to apply transform instantly. Needed if transform is transitioned.
 * 2. Reset responsiveness for embedded content
 * 3. Center object
 * Note: Percent values on the `top` property only works if this element
 *       is absolute positioned or if the container has a height
 */
/* 1 */
[rmcc-cover]:where(canvas, iframe, svg),
[data-rmcc-cover]:where(canvas, iframe, svg) {
  /* 2 */
  max-width: none;
  /* 3 */
  position: absolute;
  left: 50%;
  top: 50%;
  --rmcc-position-translate-x: -50%;
  --rmcc-position-translate-y: -50%;
  transform: translate(var(--rmcc-position-translate-x), var(--rmcc-position-translate-y));
}

iframe[rmcc-cover],
iframe[data-rmcc-cover] {
  pointer-events: none;
}

[rmcc-cover]:where(img, video),
[data-rmcc-cover]:where(img, video) {
  /* 3 */
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  box-sizing: border-box;
  object-fit: cover;
  object-position: center;
}

/* Container
 ========================================================================== */
/*
 * 1. Parent container which clips resized object
 * 2. Needed if the child is positioned absolute. See note above
 */
.rmcc-cover-container {
  /* 1 */
  overflow: hidden;
  /* 2 */
  position: relative;
}

/* ========================================================================
   Component: Background
 ========================================================================== */
/* Color
 ========================================================================== */
.rmcc-background-default {
  background-color: #fff;
}

.rmcc-background-muted {
  background-color: #f8f8f8;
}

.rmcc-background-primary {
  background-color: #1e87f0;
}

.rmcc-background-secondary {
  background-color: #222;
}

/* Size
 ========================================================================== */
.rmcc-background-cover,
.rmcc-background-contain,
.rmcc-background-width-1-1,
.rmcc-background-height-1-1 {
  background-position: 50% 50%;
  background-repeat: no-repeat;
}

.rmcc-background-cover {
  background-size: cover;
}

.rmcc-background-contain {
  background-size: contain;
}

.rmcc-background-width-1-1 {
  background-size: 100%;
}

.rmcc-background-height-1-1 {
  background-size: auto 100%;
}

/* Position
 ========================================================================== */
.rmcc-background-top-left {
  background-position: 0 0;
}

.rmcc-background-top-center {
  background-position: 50% 0;
}

.rmcc-background-top-right {
  background-position: 100% 0;
}

.rmcc-background-center-left {
  background-position: 0 50%;
}

.rmcc-background-center-center {
  background-position: 50% 50%;
}

.rmcc-background-center-right {
  background-position: 100% 50%;
}

.rmcc-background-bottom-left {
  background-position: 0 100%;
}

.rmcc-background-bottom-center {
  background-position: 50% 100%;
}

.rmcc-background-bottom-right {
  background-position: 100% 100%;
}

/* Repeat
 ========================================================================== */
.rmcc-background-norepeat {
  background-repeat: no-repeat;
}

/* Attachment
 ========================================================================== */
.rmcc-background-fixed {
  background-attachment: fixed;
}

/*
 * Exclude touch devices because `fixed` doesn't work on iOS and Android
 */
@media (pointer: coarse) {
  .rmcc-background-fixed {
    background-attachment: scroll;
  }
}
/* Image
 ========================================================================== */
/* Phone portrait and smaller */
@media (max-width: 639px) {
  .rmcc-background-image\@s {
    background-image: none !important;
  }
}
/* Phone landscape and smaller */
@media (max-width: 959px) {
  .rmcc-background-image\@m {
    background-image: none !important;
  }
}
/* Tablet landscape and smaller */
@media (max-width: 1199px) {
  .rmcc-background-image\@l {
    background-image: none !important;
  }
}
/* Desktop and smaller */
@media (max-width: 1599px) {
  .rmcc-background-image\@xl {
    background-image: none !important;
  }
}
/* Blend modes
 ========================================================================== */
.rmcc-background-blend-multiply {
  background-blend-mode: multiply;
}

.rmcc-background-blend-screen {
  background-blend-mode: screen;
}

.rmcc-background-blend-overlay {
  background-blend-mode: overlay;
}

.rmcc-background-blend-darken {
  background-blend-mode: darken;
}

.rmcc-background-blend-lighten {
  background-blend-mode: lighten;
}

.rmcc-background-blend-color-dodge {
  background-blend-mode: color-dodge;
}

.rmcc-background-blend-color-burn {
  background-blend-mode: color-burn;
}

.rmcc-background-blend-hard-light {
  background-blend-mode: hard-light;
}

.rmcc-background-blend-soft-light {
  background-blend-mode: soft-light;
}

.rmcc-background-blend-difference {
  background-blend-mode: difference;
}

.rmcc-background-blend-exclusion {
  background-blend-mode: exclusion;
}

.rmcc-background-blend-hue {
  background-blend-mode: hue;
}

.rmcc-background-blend-saturation {
  background-blend-mode: saturation;
}

.rmcc-background-blend-color {
  background-blend-mode: color;
}

.rmcc-background-blend-luminosity {
  background-blend-mode: luminosity;
}

/* ========================================================================
   Component: Align
 ========================================================================== */
/*
 * Default
 */
[class*=rmcc-align] {
  display: block;
  margin-bottom: 30px;
}

* + [class*=rmcc-align] {
  margin-top: 30px;
}

/*
 * Center
 */
.rmcc-align-center {
  margin-left: auto;
  margin-right: auto;
}

/*
 * Left/Right
 */
.rmcc-align-left {
  margin-top: 0;
  margin-right: 30px;
  float: left;
}

.rmcc-align-right {
  margin-top: 0;
  margin-left: 30px;
  float: right;
}

/* Phone landscape and bigger */
@media (min-width: 640px) {
  .rmcc-align-left\@s {
    margin-top: 0;
    margin-right: 30px;
    float: left;
  }
  .rmcc-align-right\@s {
    margin-top: 0;
    margin-left: 30px;
    float: right;
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .rmcc-align-left\@m {
    margin-top: 0;
    margin-right: 30px;
    float: left;
  }
  .rmcc-align-right\@m {
    margin-top: 0;
    margin-left: 30px;
    float: right;
  }
}
/* Desktop and bigger */
@media (min-width: 1200px) {
  .rmcc-align-left\@l {
    margin-top: 0;
    float: left;
  }
  .rmcc-align-right\@l {
    margin-top: 0;
    float: right;
  }
  .rmcc-align-left,
  .rmcc-align-left\@s,
  .rmcc-align-left\@m,
  .rmcc-align-left\@l {
    margin-right: 40px;
  }
  .rmcc-align-right,
  .rmcc-align-right\@s,
  .rmcc-align-right\@m,
  .rmcc-align-right\@l {
    margin-left: 40px;
  }
}
/* Large screen and bigger */
@media (min-width: 1600px) {
  .rmcc-align-left\@xl {
    margin-top: 0;
    margin-right: 40px;
    float: left;
  }
  .rmcc-align-right\@xl {
    margin-top: 0;
    margin-left: 40px;
    float: right;
  }
}
/* ========================================================================
   Component: SVG
 ========================================================================== */
/*
 * 1. Fill all SVG elements with the current text color if no `fill` attribute is set
 * 2. Set the fill and stroke color of all SVG elements to the current text color
 */
/* 1 */
.rmcc-svg,
.rmcc-svg:not(.rmcc-preserve) [fill*="#"]:not(.rmcc-preserve) {
  fill: currentcolor;
}

.rmcc-svg:not(.rmcc-preserve) [stroke*="#"]:not(.rmcc-preserve) {
  stroke: currentcolor;
}

/*
 * Fix Firefox blurry SVG rendering: https://bugzilla.mozilla.org/show_bug.cgi?id=1046835
 */
.rmcc-svg {
  transform: translate(0, 0);
}

/* ========================================================================
   Component: Utility
 ========================================================================== */
/* Panel
 ========================================================================== */
.rmcc-panel {
  display: flow-root;
  position: relative;
  box-sizing: border-box;
}

/*
 * Remove margin from the last-child
 */
.rmcc-panel > :last-child {
  margin-bottom: 0;
}

/*
 * Scrollable
 */
.rmcc-panel-scrollable {
  height: 170px;
  padding: 10px;
  border: 1px solid #e5e5e5;
  overflow: auto;
  resize: both;
}

/* Clearfix
 ========================================================================== */
/*
 * 1. `table-cell` is used with `::before` because `table` creates a 1px gap when it becomes a flex item, only in Webkit
 * 2. `table` is used again with `::after` because `clear` only works with block elements.
 * Note: `display: block` with `overflow: hidden` is currently not working in the latest Safari
 */
/* 1 */
.rmcc-clearfix::before {
  content: "";
  display: table-cell;
}

/* 2 */
.rmcc-clearfix::after {
  content: "";
  display: table;
  clear: both;
}

/* Float
 ========================================================================== */
/*
 * 1. Prevent content overflow
 */
.rmcc-float-left {
  float: left;
}

.rmcc-float-right {
  float: right;
}

/* 1 */
[class*=rmcc-float-] {
  max-width: 100%;
}

/* Overflow
 ========================================================================== */
.rmcc-overflow-hidden {
  overflow: hidden;
}

/*
 * Enable scrollbars if content is clipped
 */
.rmcc-overflow-auto {
  overflow: auto;
}

.rmcc-overflow-auto > :last-child {
  margin-bottom: 0;
}

/* Box Sizing
 ========================================================================== */
.rmcc-box-sizing-content {
  box-sizing: content-box;
}

.rmcc-box-sizing-border {
  box-sizing: border-box;
}

/* Resize
 ========================================================================== */
.rmcc-resize {
  resize: both;
}

.rmcc-resize-horizontal {
  resize: horizontal;
}

.rmcc-resize-vertical {
  resize: vertical;
}

/* Display
 ========================================================================== */
.rmcc-display-block {
  display: block !important;
}

.rmcc-display-inline {
  display: inline !important;
}

.rmcc-display-inline-block {
  display: inline-block !important;
}

/* Inline
 ========================================================================== */
/*
 * 1. Container fits its content
 * 2. Create position context
 * 3. Prevent content overflow
 * 4. Behave like most inline-block elements
 * 5. Force new layer without creating a new stacking context
 *    to fix 1px glitch when combined with overlays and transitions in Webkit
 * 6. Clip child elements
 */
[class*=rmcc-inline] {
  /* 1 */
  display: inline-block;
  /* 2 */
  position: relative;
  /* 3 */
  max-width: 100%;
  /* 4 */
  vertical-align: middle;
  /* 5 */
  -webkit-backface-visibility: hidden;
}

.rmcc-inline-clip {
  /* 6 */
  overflow: hidden;
}

/* Responsive objects
 ========================================================================== */
/*
 * Preserve original dimensions
 * Because `img, `video`, `canvas` and  `audio` are already responsive by default, see Base component
 */
.rmcc-preserve-width,
.rmcc-preserve-width canvas,
.rmcc-preserve-width img,
.rmcc-preserve-width svg,
.rmcc-preserve-width video {
  max-width: none;
}

/*
 * Responsiveness
 * Corrects `max-width` and `max-height` behavior if padding and border are used
 */
.rmcc-responsive-width,
.rmcc-responsive-height {
  box-sizing: border-box;
}

/*
 * 1. Set a maximum width. `important` needed to override `rmcc-preserve-width img`
 * 2. Auto scale the height. Only needed if `height` attribute is present
 */
.rmcc-responsive-width {
  /* 1 */
  max-width: 100% !important;
  /* 2 */
  height: auto;
}

/*
 * 1. Set a maximum height. Only works if the parent element has a fixed height
 * 2. Auto scale the width. Only needed if `width` attribute is present
 * 3. Reset max-width, which `img, `video`, `canvas` and  `audio` already have by default
 */
.rmcc-responsive-height {
  /* 1 */
  max-height: 100%;
  /* 2 */
  width: auto;
  /* 3 */
  max-width: none;
}

/*
 * Fix initial iframe width. Without the viewport is expanded on iOS devices
 */
[rmcc-responsive],
[data-rmcc-responsive] {
  max-width: 100%;
}

/* Object
 ========================================================================== */
.rmcc-object-cover {
  object-fit: cover;
}

.rmcc-object-contain {
  object-fit: contain;
}

.rmcc-object-fill {
  object-fit: fill;
}

.rmcc-object-none {
  object-fit: none;
}

.rmcc-object-scale-down {
  object-fit: scale-down;
}

/*
 * Position
 */
.rmcc-object-top-left {
  object-position: 0 0;
}

.rmcc-object-top-center {
  object-position: 50% 0;
}

.rmcc-object-top-right {
  object-position: 100% 0;
}

.rmcc-object-center-left {
  object-position: 0 50%;
}

.rmcc-object-center-center {
  object-position: 50% 50%;
}

.rmcc-object-center-right {
  object-position: 100% 50%;
}

.rmcc-object-bottom-left {
  object-position: 0 100%;
}

.rmcc-object-bottom-center {
  object-position: 50% 100%;
}

.rmcc-object-bottom-right {
  object-position: 100% 100%;
}

/* Border
 ========================================================================== */
.rmcc-border-circle {
  border-radius: 50%;
}

.rmcc-border-pill {
  border-radius: 500px;
}

.rmcc-border-rounded {
  border-radius: 5px;
}

/*
 * Fix `overflow: hidden` to be ignored with border-radius and CSS transforms in Webkit
 */
.rmcc-inline-clip[class*=rmcc-border-] {
  -webkit-transform: translateZ(0);
}

/* Box-shadow
 ========================================================================== */
.rmcc-box-shadow-small {
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
}

.rmcc-box-shadow-medium {
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
}

.rmcc-box-shadow-large {
  box-shadow: 0 14px 25px rgba(0, 0, 0, 0.16);
}

.rmcc-box-shadow-xlarge {
  box-shadow: 0 28px 50px rgba(0, 0, 0, 0.16);
}

/*
 * Hover
 */
[class*=rmcc-box-shadow-hover] {
  transition: box-shadow 0.1s ease-in-out;
}

.rmcc-box-shadow-hover-small:hover {
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
}

.rmcc-box-shadow-hover-medium:hover {
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
}

.rmcc-box-shadow-hover-large:hover {
  box-shadow: 0 14px 25px rgba(0, 0, 0, 0.16);
}

.rmcc-box-shadow-hover-xlarge:hover {
  box-shadow: 0 28px 50px rgba(0, 0, 0, 0.16);
}

/* Box-shadow bottom
 ========================================================================== */
/*
 * 1. Set position.
 * 2. Set style
 * 3. Fix shadow being clipped in Safari if container is animated
 */
@supports (filter: blur(0)) {
  .rmcc-box-shadow-bottom {
    display: inline-block;
    position: relative;
    z-index: 0;
    max-width: 100%;
    vertical-align: middle;
  }
  .rmcc-box-shadow-bottom::after {
    content: "";
    /* 1 */
    position: absolute;
    bottom: -30px;
    left: 0;
    right: 0;
    z-index: -1;
    /* 2 */
    height: 30px;
    border-radius: 100%;
    background: #444;
    filter: blur(20px);
    /* 3 */
    will-change: filter;
  }
}
/* Drop cap
 ========================================================================== */
/*
 * 1. Firefox doesn't apply `::first-letter` if the first letter is inside child elements
 *    https://bugzilla.mozilla.org/show_bug.cgi?id=214004
 * 2. In Firefox, a floating `::first-letter` doesn't have a line box and there for no `line-height`
 *    https://bugzilla.mozilla.org/show_bug.cgi?id=317933
 */
.rmcc-dropcap::first-letter,
.rmcc-dropcap > p:first-of-type::first-letter {
  display: block;
  margin-right: 10px;
  float: left;
  font-size: 4.5em;
  line-height: 1;
  margin-bottom: -2px;
}

/* 2 */
@-moz-document url-prefix() {
  .rmcc-dropcap::first-letter,
  .rmcc-dropcap > p:first-of-type::first-letter {
    margin-top: 1.1%;
  }
}
/* Logo
 ========================================================================== */
/*
 * 1. Style
 * 2. Required for `a`
 * 3. Behave like image but can be overridden through flex utility classes
 */
.rmcc-logo {
  /* 1 */
  font-size: 1.5rem;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  color: #333;
  /* 2 */
  text-decoration: none;
}

/* 3 */
:where(.rmcc-logo) {
  display: inline-block;
  vertical-align: middle;
}

/* Hover */
.rmcc-logo:hover {
  color: #333;
  /* 1 */
  text-decoration: none;
}

.rmcc-logo :where(img, svg, video) {
  display: block;
}

.rmcc-logo-inverse {
  display: none;
}

/* Disabled State
 ========================================================================== */
.rmcc-disabled {
  pointer-events: none;
}

/* Drag State
 ========================================================================== */
/*
 * 1. Needed if moving over elements with have their own cursor on hover, e.g. links or buttons
 * 2. Fix dragging over iframes
 */
.rmcc-drag,
.rmcc-drag * {
  cursor: move;
}

/* 2 */
.rmcc-drag iframe {
  pointer-events: none;
}

/* Dragover State
 ========================================================================== */
/*
 * Create a box-shadow when dragging a file over the upload area
 */
.rmcc-dragover {
  box-shadow: 0 0 20px rgba(100, 100, 100, 0.3);
}

/* Blend modes
 ========================================================================== */
.rmcc-blend-multiply {
  mix-blend-mode: multiply;
}

.rmcc-blend-screen {
  mix-blend-mode: screen;
}

.rmcc-blend-overlay {
  mix-blend-mode: overlay;
}

.rmcc-blend-darken {
  mix-blend-mode: darken;
}

.rmcc-blend-lighten {
  mix-blend-mode: lighten;
}

.rmcc-blend-color-dodge {
  mix-blend-mode: color-dodge;
}

.rmcc-blend-color-burn {
  mix-blend-mode: color-burn;
}

.rmcc-blend-hard-light {
  mix-blend-mode: hard-light;
}

.rmcc-blend-soft-light {
  mix-blend-mode: soft-light;
}

.rmcc-blend-difference {
  mix-blend-mode: difference;
}

.rmcc-blend-exclusion {
  mix-blend-mode: exclusion;
}

.rmcc-blend-hue {
  mix-blend-mode: hue;
}

.rmcc-blend-saturation {
  mix-blend-mode: saturation;
}

.rmcc-blend-color {
  mix-blend-mode: color;
}

.rmcc-blend-luminosity {
  mix-blend-mode: luminosity;
}

/* Transform
========================================================================== */
.rmcc-transform-center {
  transform: translate(-50%, -50%);
}

/* Transform Origin
========================================================================== */
.rmcc-transform-origin-top-left {
  transform-origin: 0 0;
}

.rmcc-transform-origin-top-center {
  transform-origin: 50% 0;
}

.rmcc-transform-origin-top-right {
  transform-origin: 100% 0;
}

.rmcc-transform-origin-center-left {
  transform-origin: 0 50%;
}

.rmcc-transform-origin-center-right {
  transform-origin: 100% 50%;
}

.rmcc-transform-origin-bottom-left {
  transform-origin: 0 100%;
}

.rmcc-transform-origin-bottom-center {
  transform-origin: 50% 100%;
}

.rmcc-transform-origin-bottom-right {
  transform-origin: 100% 100%;
}

/* ========================================================================
   Component: Flex
 ========================================================================== */
.rmcc-flex {
  display: flex;
}

.rmcc-flex-inline {
  display: inline-flex;
}

/* Alignment
 ========================================================================== */
/*
 * Align items along the main axis of the current line of the flex container
 * Row: Horizontal
 */
.rmcc-flex-left {
  justify-content: flex-start;
}

.rmcc-flex-center {
  justify-content: center;
}

.rmcc-flex-right {
  justify-content: flex-end;
}

.rmcc-flex-between {
  justify-content: space-between;
}

.rmcc-flex-around {
  justify-content: space-around;
}

/* Phone landscape and bigger */
@media (min-width: 640px) {
  .rmcc-flex-left\@s {
    justify-content: flex-start;
  }
  .rmcc-flex-center\@s {
    justify-content: center;
  }
  .rmcc-flex-right\@s {
    justify-content: flex-end;
  }
  .rmcc-flex-between\@s {
    justify-content: space-between;
  }
  .rmcc-flex-around\@s {
    justify-content: space-around;
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .rmcc-flex-left\@m {
    justify-content: flex-start;
  }
  .rmcc-flex-center\@m {
    justify-content: center;
  }
  .rmcc-flex-right\@m {
    justify-content: flex-end;
  }
  .rmcc-flex-between\@m {
    justify-content: space-between;
  }
  .rmcc-flex-around\@m {
    justify-content: space-around;
  }
}
/* Desktop and bigger */
@media (min-width: 1200px) {
  .rmcc-flex-left\@l {
    justify-content: flex-start;
  }
  .rmcc-flex-center\@l {
    justify-content: center;
  }
  .rmcc-flex-right\@l {
    justify-content: flex-end;
  }
  .rmcc-flex-between\@l {
    justify-content: space-between;
  }
  .rmcc-flex-around\@l {
    justify-content: space-around;
  }
}
/* Large screen and bigger */
@media (min-width: 1600px) {
  .rmcc-flex-left\@xl {
    justify-content: flex-start;
  }
  .rmcc-flex-center\@xl {
    justify-content: center;
  }
  .rmcc-flex-right\@xl {
    justify-content: flex-end;
  }
  .rmcc-flex-between\@xl {
    justify-content: space-between;
  }
  .rmcc-flex-around\@xl {
    justify-content: space-around;
  }
}
/*
 * Align items in the cross axis of the current line of the flex container
 * Row: Vertical
 */
.rmcc-flex-stretch {
  align-items: stretch;
}

.rmcc-flex-top {
  align-items: flex-start;
}

.rmcc-flex-middle {
  align-items: center;
}

.rmcc-flex-bottom {
  align-items: flex-end;
}

/* Phone landscape and bigger */
@media (min-width: 640px) {
  .rmcc-flex-stretch\@s {
    align-items: stretch;
  }
  .rmcc-flex-top\@s {
    align-items: flex-start;
  }
  .rmcc-flex-middle\@s {
    align-items: center;
  }
  .rmcc-flex-bottom\@s {
    align-items: flex-end;
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .rmcc-flex-stretch\@m {
    align-items: stretch;
  }
  .rmcc-flex-top\@m {
    align-items: flex-start;
  }
  .rmcc-flex-middle\@m {
    align-items: center;
  }
  .rmcc-flex-bottom\@m {
    align-items: flex-end;
  }
}
/* Desktop and bigger */
@media (min-width: 1200px) {
  .rmcc-flex-stretch\@l {
    align-items: stretch;
  }
  .rmcc-flex-top\@l {
    align-items: flex-start;
  }
  .rmcc-flex-middle\@l {
    align-items: center;
  }
  .rmcc-flex-bottom\@l {
    align-items: flex-end;
  }
}
/* Large screen and bigger */
@media (min-width: 1600px) {
  .rmcc-flex-stretch\@xl {
    align-items: stretch;
  }
  .rmcc-flex-top\@xl {
    align-items: flex-start;
  }
  .rmcc-flex-middle\@xl {
    align-items: center;
  }
  .rmcc-flex-bottom\@xl {
    align-items: flex-end;
  }
}
/* Direction
 ========================================================================== */
.rmcc-flex-row {
  flex-direction: row;
}

.rmcc-flex-row-reverse {
  flex-direction: row-reverse;
}

.rmcc-flex-column {
  flex-direction: column;
}

.rmcc-flex-column-reverse {
  flex-direction: column-reverse;
}

/* Phone landscape and bigger */
@media (min-width: 640px) {
  .rmcc-flex-row\@s {
    flex-direction: row;
  }
  .rmcc-flex-column\@s {
    flex-direction: column;
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .rmcc-flex-row\@m {
    flex-direction: row;
  }
  .rmcc-flex-column\@m {
    flex-direction: column;
  }
}
/* Desktop and bigger */
@media (min-width: 1200px) {
  .rmcc-flex-row\@l {
    flex-direction: row;
  }
  .rmcc-flex-column\@l {
    flex-direction: column;
  }
}
/* Large screen and bigger */
@media (min-width: 1600px) {
  .rmcc-flex-row\@xl {
    flex-direction: row;
  }
  .rmcc-flex-column\@xl {
    flex-direction: column;
  }
}
/* Wrap
 ========================================================================== */
.rmcc-flex-nowrap {
  flex-wrap: nowrap;
}

.rmcc-flex-wrap {
  flex-wrap: wrap;
}

.rmcc-flex-wrap-reverse {
  flex-wrap: wrap-reverse;
}

/*
 * Aligns items within the flex container when there is extra space in the cross-axis
 * Only works if there is more than one line of flex items
 */
.rmcc-flex-wrap-stretch {
  align-content: stretch;
}

.rmcc-flex-wrap-top {
  align-content: flex-start;
}

.rmcc-flex-wrap-middle {
  align-content: center;
}

.rmcc-flex-wrap-bottom {
  align-content: flex-end;
}

.rmcc-flex-wrap-between {
  align-content: space-between;
}

.rmcc-flex-wrap-around {
  align-content: space-around;
}

/* Item ordering
 ========================================================================== */
/*
 * Default is 0
 */
.rmcc-flex-first {
  order: -1;
}

.rmcc-flex-last {
  order: 99;
}

/* Phone landscape and bigger */
@media (min-width: 640px) {
  .rmcc-flex-first\@s {
    order: -1;
  }
  .rmcc-flex-last\@s {
    order: 99;
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .rmcc-flex-first\@m {
    order: -1;
  }
  .rmcc-flex-last\@m {
    order: 99;
  }
}
/* Desktop and bigger */
@media (min-width: 1200px) {
  .rmcc-flex-first\@l {
    order: -1;
  }
  .rmcc-flex-last\@l {
    order: 99;
  }
}
/* Large screen and bigger */
@media (min-width: 1600px) {
  .rmcc-flex-first\@xl {
    order: -1;
  }
  .rmcc-flex-last\@xl {
    order: 99;
  }
}
/* Item dimensions
 ========================================================================== */
/*
 * Initial: 0 1 auto
 * Content dimensions, but shrinks
 */
.rmcc-flex-initial {
  flex: initial;
}

/*
 * No Flex: 0 0 auto
 * Content dimensions
 */
.rmcc-flex-none {
  flex: none;
}

/*
 * Relative Flex: 1 1 auto
 * Space is allocated considering content
 */
.rmcc-flex-auto {
  flex: auto;
}

/*
 * Absolute Flex: 1 1 0%
 * Space is allocated solely based on flex
 */
.rmcc-flex-1 {
  flex: 1;
}

/* Phone landscape and bigger */
@media (min-width: 640px) {
  .rmcc-flex-initial\@s {
    flex: initial;
  }
  .rmcc-flex-none\@s {
    flex: none;
  }
  .rmcc-flex-1\@s {
    flex: 1;
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .rmcc-flex-initial\@m {
    flex: initial;
  }
  .rmcc-flex-none\@m {
    flex: none;
  }
  .rmcc-flex-1\@m {
    flex: 1;
  }
}
/* Desktop and bigger */
@media (min-width: 1200px) {
  .rmcc-flex-initial\@l {
    flex: initial;
  }
  .rmcc-flex-none\@l {
    flex: none;
  }
  .rmcc-flex-1\@l {
    flex: 1;
  }
}
/* Large screen and bigger */
@media (min-width: 1600px) {
  .rmcc-flex-initial\@xl {
    flex: initial;
  }
  .rmcc-flex-none\@xl {
    flex: none;
  }
  .rmcc-flex-1\@xl {
    flex: 1;
  }
}
/* ========================================================================
   Component: Margin
 ========================================================================== */
/*
 * Default
 */
.rmcc-margin {
  margin-bottom: 20px;
}

* + .rmcc-margin {
  margin-top: 20px !important;
}

.rmcc-margin-top {
  margin-top: 20px !important;
}

.rmcc-margin-bottom {
  margin-bottom: 20px !important;
}

.rmcc-margin-left {
  margin-left: 20px !important;
}

.rmcc-margin-right {
  margin-right: 20px !important;
}

/* XSmall
 ========================================================================== */
.rmcc-margin-xsmall {
  margin-bottom: 5px;
}

* + .rmcc-margin-xsmall {
  margin-top: 5px !important;
}

.rmcc-margin-xsmall-top {
  margin-top: 5px !important;
}

.rmcc-margin-xsmall-bottom {
  margin-bottom: 5px !important;
}

.rmcc-margin-xsmall-left {
  margin-left: 5px !important;
}

.rmcc-margin-xsmall-right {
  margin-right: 5px !important;
}

/* Small
 ========================================================================== */
.rmcc-margin-small {
  margin-bottom: 10px;
}

* + .rmcc-margin-small {
  margin-top: 10px !important;
}

.rmcc-margin-small-top {
  margin-top: 10px !important;
}

.rmcc-margin-small-bottom {
  margin-bottom: 10px !important;
}

.rmcc-margin-small-left {
  margin-left: 10px !important;
}

.rmcc-margin-small-right {
  margin-right: 10px !important;
}

/* Medium
 ========================================================================== */
.rmcc-margin-medium {
  margin-bottom: 40px;
}

* + .rmcc-margin-medium {
  margin-top: 40px !important;
}

.rmcc-margin-medium-top {
  margin-top: 40px !important;
}

.rmcc-margin-medium-bottom {
  margin-bottom: 40px !important;
}

.rmcc-margin-medium-left {
  margin-left: 40px !important;
}

.rmcc-margin-medium-right {
  margin-right: 40px !important;
}

/* Large
 ========================================================================== */
.rmcc-margin-large {
  margin-bottom: 40px;
}

* + .rmcc-margin-large {
  margin-top: 40px !important;
}

.rmcc-margin-large-top {
  margin-top: 40px !important;
}

.rmcc-margin-large-bottom {
  margin-bottom: 40px !important;
}

.rmcc-margin-large-left {
  margin-left: 40px !important;
}

.rmcc-margin-large-right {
  margin-right: 40px !important;
}

/* Desktop and bigger */
@media (min-width: 1200px) {
  .rmcc-margin-large {
    margin-bottom: 70px;
  }
  * + .rmcc-margin-large {
    margin-top: 70px !important;
  }
  .rmcc-margin-large-top {
    margin-top: 70px !important;
  }
  .rmcc-margin-large-bottom {
    margin-bottom: 70px !important;
  }
  .rmcc-margin-large-left {
    margin-left: 70px !important;
  }
  .rmcc-margin-large-right {
    margin-right: 70px !important;
  }
}
/* XLarge
 ========================================================================== */
.rmcc-margin-xlarge {
  margin-bottom: 70px;
}

* + .rmcc-margin-xlarge {
  margin-top: 70px !important;
}

.rmcc-margin-xlarge-top {
  margin-top: 70px !important;
}

.rmcc-margin-xlarge-bottom {
  margin-bottom: 70px !important;
}

.rmcc-margin-xlarge-left {
  margin-left: 70px !important;
}

.rmcc-margin-xlarge-right {
  margin-right: 70px !important;
}

/* Desktop and bigger */
@media (min-width: 1200px) {
  .rmcc-margin-xlarge {
    margin-bottom: 140px;
  }
  * + .rmcc-margin-xlarge {
    margin-top: 140px !important;
  }
  .rmcc-margin-xlarge-top {
    margin-top: 140px !important;
  }
  .rmcc-margin-xlarge-bottom {
    margin-bottom: 140px !important;
  }
  .rmcc-margin-xlarge-left {
    margin-left: 140px !important;
  }
  .rmcc-margin-xlarge-right {
    margin-right: 140px !important;
  }
}
/* Auto
 ========================================================================== */
.rmcc-margin-auto {
  margin-left: auto !important;
  margin-right: auto !important;
}

.rmcc-margin-auto-top {
  margin-top: auto !important;
}

.rmcc-margin-auto-bottom {
  margin-bottom: auto !important;
}

.rmcc-margin-auto-left {
  margin-left: auto !important;
}

.rmcc-margin-auto-right {
  margin-right: auto !important;
}

.rmcc-margin-auto-vertical {
  margin-top: auto !important;
  margin-bottom: auto !important;
}

/* Phone landscape and bigger */
@media (min-width: 640px) {
  .rmcc-margin-auto\@s {
    margin-left: auto !important;
    margin-right: auto !important;
  }
  .rmcc-margin-auto-left\@s {
    margin-left: auto !important;
  }
  .rmcc-margin-auto-right\@s {
    margin-right: auto !important;
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .rmcc-margin-auto\@m {
    margin-left: auto !important;
    margin-right: auto !important;
  }
  .rmcc-margin-auto-left\@m {
    margin-left: auto !important;
  }
  .rmcc-margin-auto-right\@m {
    margin-right: auto !important;
  }
}
/* Desktop and bigger */
@media (min-width: 1200px) {
  .rmcc-margin-auto\@l {
    margin-left: auto !important;
    margin-right: auto !important;
  }
  .rmcc-margin-auto-left\@l {
    margin-left: auto !important;
  }
  .rmcc-margin-auto-right\@l {
    margin-right: auto !important;
  }
}
/* Large screen and bigger */
@media (min-width: 1600px) {
  .rmcc-margin-auto\@xl {
    margin-left: auto !important;
    margin-right: auto !important;
  }
  .rmcc-margin-auto-left\@xl {
    margin-left: auto !important;
  }
  .rmcc-margin-auto-right\@xl {
    margin-right: auto !important;
  }
}
/* Remove
 ========================================================================== */
.rmcc-margin-remove {
  margin: 0 !important;
}

.rmcc-margin-remove-top {
  margin-top: 0 !important;
}

.rmcc-margin-remove-bottom {
  margin-bottom: 0 !important;
}

.rmcc-margin-remove-left {
  margin-left: 0 !important;
}

.rmcc-margin-remove-right {
  margin-right: 0 !important;
}

.rmcc-margin-remove-vertical {
  margin-top: 0 !important;
  margin-bottom: 0 !important;
}

.rmcc-margin-remove-adjacent + *,
.rmcc-margin-remove-first-child > :first-child {
  margin-top: 0 !important;
}

.rmcc-margin-remove-last-child > :last-child {
  margin-bottom: 0 !important;
}

/* Phone landscape and bigger */
@media (min-width: 640px) {
  .rmcc-margin-remove-left\@s {
    margin-left: 0 !important;
  }
  .rmcc-margin-remove-right\@s {
    margin-right: 0 !important;
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .rmcc-margin-remove-left\@m {
    margin-left: 0 !important;
  }
  .rmcc-margin-remove-right\@m {
    margin-right: 0 !important;
  }
}
/* Desktop and bigger */
@media (min-width: 1200px) {
  .rmcc-margin-remove-left\@l {
    margin-left: 0 !important;
  }
  .rmcc-margin-remove-right\@l {
    margin-right: 0 !important;
  }
}
/* Large screen and bigger */
@media (min-width: 1600px) {
  .rmcc-margin-remove-left\@xl {
    margin-left: 0 !important;
  }
  .rmcc-margin-remove-right\@xl {
    margin-right: 0 !important;
  }
}
/* ========================================================================
   Component: Padding
 ========================================================================== */
.rmcc-padding {
  padding: 30px;
}

/* Desktop and bigger */
@media (min-width: 1200px) {
  .rmcc-padding {
    padding: 40px;
  }
}
/* Small
 ========================================================================== */
.rmcc-padding-small {
  padding: 15px;
}

/* Large
 ========================================================================== */
.rmcc-padding-large {
  padding: 40px;
}

/* Desktop and bigger */
@media (min-width: 1200px) {
  .rmcc-padding-large {
    padding: 70px;
  }
}
/* Remove
 ========================================================================== */
.rmcc-padding-remove {
  padding: 0 !important;
}

.rmcc-padding-remove-top {
  padding-top: 0 !important;
}

.rmcc-padding-remove-bottom {
  padding-bottom: 0 !important;
}

.rmcc-padding-remove-left {
  padding-left: 0 !important;
}

.rmcc-padding-remove-right {
  padding-right: 0 !important;
}

.rmcc-padding-remove-vertical {
  padding-top: 0 !important;
  padding-bottom: 0 !important;
}

.rmcc-padding-remove-horizontal {
  padding-left: 0 !important;
  padding-right: 0 !important;
}

/* ========================================================================
   Component: Position
 ========================================================================== */
:root {
  --rmcc-position-margin-offset: 0px;
}

/* Directions
 ========================================================================== */
/*
 * 1. Prevent content overflow.
 */
[class*=rmcc-position-top],
[class*=rmcc-position-bottom],
[class*=rmcc-position-left],
[class*=rmcc-position-right],
[class*=rmcc-position-center] {
  position: absolute !important;
  /* 1 */
  max-width: calc(100% - (var(--rmcc-position-margin-offset) * 2));
  box-sizing: border-box;
}

/*
 * Edges
 * Don't use `width: 100%` because it's wrong if the parent has padding.
 */
.rmcc-position-top {
  top: 0;
  left: 0;
  right: 0;
}

.rmcc-position-bottom {
  bottom: 0;
  left: 0;
  right: 0;
}

.rmcc-position-left {
  top: 0;
  bottom: 0;
  left: 0;
}

.rmcc-position-right {
  top: 0;
  bottom: 0;
  right: 0;
}

/*
 * Corners
 */
.rmcc-position-top-left {
  top: 0;
  left: 0;
}

.rmcc-position-top-right {
  top: 0;
  right: 0;
}

.rmcc-position-bottom-left {
  bottom: 0;
  left: 0;
}

.rmcc-position-bottom-right {
  bottom: 0;
  right: 0;
}

/*
 * Center
 * 1. Fix text wrapping if content is larger than 50% of the container.
 *    Using `max-content` requires `max-width` of 100% which is set generally.
 */
.rmcc-position-center {
  top: calc(50% - var(--rmcc-position-margin-offset));
  left: calc(50% - var(--rmcc-position-margin-offset));
  --rmcc-position-translate-x: -50%;
  --rmcc-position-translate-y: -50%;
  transform: translate(var(--rmcc-position-translate-x), var(--rmcc-position-translate-y));
  /* 1 */
  width: max-content;
}

/* Vertical */
[class*=rmcc-position-center-left],
[class*=rmcc-position-center-right],
.rmcc-position-center-vertical {
  top: calc(50% - var(--rmcc-position-margin-offset));
  --rmcc-position-translate-y: -50%;
  transform: translate(0, var(--rmcc-position-translate-y));
}

.rmcc-position-center-left {
  left: 0;
}

.rmcc-position-center-right {
  right: 0;
}

.rmcc-position-center-vertical {
  left: 0;
  right: 0;
}

.rmcc-position-center-left-out {
  right: 100%;
  width: max-content;
}

.rmcc-position-center-right-out {
  left: 100%;
  width: max-content;
}

/* Horizontal */
.rmcc-position-top-center,
.rmcc-position-bottom-center,
.rmcc-position-center-horizontal {
  left: calc(50% - var(--rmcc-position-margin-offset));
  --rmcc-position-translate-x: -50%;
  transform: translate(var(--rmcc-position-translate-x), 0);
  /* 1 */
  width: max-content;
}

.rmcc-position-top-center {
  top: 0;
}

.rmcc-position-bottom-center {
  bottom: 0;
}

.rmcc-position-center-horizontal {
  top: 0;
  bottom: 0;
}

/*
 * Cover
 */
.rmcc-position-cover {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}

/* Margin
 ========================================================================== */
.rmcc-position-small {
  margin: 15px;
  --rmcc-position-margin-offset: 15px;
}

.rmcc-position-medium {
  margin: 30px;
  --rmcc-position-margin-offset: 30px;
}

.rmcc-position-large {
  margin: 30px;
  --rmcc-position-margin-offset: 30px;
}

/* Desktop and bigger */
@media (min-width: 1200px) {
  .rmcc-position-large {
    margin: 50px;
    --rmcc-position-margin-offset: 50px;
  }
}
/* Schemes
 ========================================================================== */
.rmcc-position-relative {
  position: relative !important;
}

.rmcc-position-absolute {
  position: absolute !important;
}

.rmcc-position-fixed {
  position: fixed !important;
}

.rmcc-position-sticky {
  position: sticky !important;
}

/* Layer
 ========================================================================== */
.rmcc-position-z-index {
  z-index: 1;
}

.rmcc-position-z-index-zero {
  z-index: 0;
}

.rmcc-position-z-index-negative {
  z-index: -1;
}

.rmcc-position-z-index-high {
  z-index: 990;
}

/* ========================================================================
   Component: Transition
 ========================================================================== */
/* Transitions
 ========================================================================== */
/*
 * The toggle is triggered on touch devices by two methods:
 * 1. Using `:focus` and tabindex
 * 2. Using `:hover` and a `touchstart` event listener registered on the document
 *    (Doesn't work on Surface touch devices)
 */
:where(.rmcc-transition-fade),
:where([class*=rmcc-transition-scale]),
:where([class*=rmcc-transition-slide]) {
  --rmcc-position-translate-x: 0;
  --rmcc-position-translate-y: 0;
}

.rmcc-transition-fade,
[class*=rmcc-transition-scale],
[class*=rmcc-transition-slide] {
  --rmcc-translate-x: 0;
  --rmcc-translate-y: 0;
  --rmcc-scale-x: 1;
  --rmcc-scale-y: 1;
  transform: translate(var(--rmcc-position-translate-x), var(--rmcc-position-translate-y)) translate(var(--rmcc-translate-x), var(--rmcc-translate-y)) scale(var(--rmcc-scale-x), var(--rmcc-scale-y));
  transition: 0.3s ease-out;
  transition-property: opacity, transform, filter;
  opacity: 0;
}

/*
 * Fade
 */
.rmcc-transition-toggle:hover .rmcc-transition-fade,
.rmcc-transition-toggle:focus .rmcc-transition-fade,
.rmcc-transition-toggle:focus-within .rmcc-transition-fade,
.rmcc-transition-active.rmcc-active .rmcc-transition-fade {
  opacity: 1;
}

/*
 * Scale
 * 1. Make image rendering the same during the transition as before and after. Prefixed because of Safari.
 */
/* 1 */
[class*=rmcc-transition-scale] {
  -webkit-backface-visibility: hidden;
}

.rmcc-transition-scale-up {
  --rmcc-scale-x: 1;
  --rmcc-scale-y: 1;
}

.rmcc-transition-scale-down {
  --rmcc-scale-x: 1.03;
  --rmcc-scale-y: 1.03;
}

/* Show */
.rmcc-transition-toggle:hover .rmcc-transition-scale-up,
.rmcc-transition-toggle:focus .rmcc-transition-scale-up,
.rmcc-transition-toggle:focus-within .rmcc-transition-scale-up,
.rmcc-transition-active.rmcc-active .rmcc-transition-scale-up {
  --rmcc-scale-x: 1.03;
  --rmcc-scale-y: 1.03;
  opacity: 1;
}

.rmcc-transition-toggle:hover .rmcc-transition-scale-down,
.rmcc-transition-toggle:focus .rmcc-transition-scale-down,
.rmcc-transition-toggle:focus-within .rmcc-transition-scale-down,
.rmcc-transition-active.rmcc-active .rmcc-transition-scale-down {
  --rmcc-scale-x: 1;
  --rmcc-scale-y: 1;
  opacity: 1;
}

/*
 * Slide
 */
.rmcc-transition-slide-top {
  --rmcc-translate-y: -100%;
}

.rmcc-transition-slide-bottom {
  --rmcc-translate-y: 100%;
}

.rmcc-transition-slide-left {
  --rmcc-translate-x: -100%;
}

.rmcc-transition-slide-right {
  --rmcc-translate-x: 100%;
}

.rmcc-transition-slide-top-small {
  --rmcc-translate-y: calc(-1 * 10px);
}

.rmcc-transition-slide-bottom-small {
  --rmcc-translate-y: 10px;
}

.rmcc-transition-slide-left-small {
  --rmcc-translate-x: calc(-1 * 10px);
}

.rmcc-transition-slide-right-small {
  --rmcc-translate-x: 10px;
}

.rmcc-transition-slide-top-medium {
  --rmcc-translate-y: calc(-1 * 50px);
}

.rmcc-transition-slide-bottom-medium {
  --rmcc-translate-y: 50px;
}

.rmcc-transition-slide-left-medium {
  --rmcc-translate-x: calc(-1 * 50px);
}

.rmcc-transition-slide-right-medium {
  --rmcc-translate-x: 50px;
}

/* Show */
.rmcc-transition-toggle:hover [class*=rmcc-transition-slide],
.rmcc-transition-toggle:focus [class*=rmcc-transition-slide],
.rmcc-transition-toggle:focus-within [class*=rmcc-transition-slide],
.rmcc-transition-active.rmcc-active [class*=rmcc-transition-slide] {
  --rmcc-translate-x: 0;
  --rmcc-translate-y: 0;
  opacity: 1;
}

/* Opacity modifier
 ========================================================================== */
.rmcc-transition-opaque {
  opacity: 1;
}

/* Duration modifier
 ========================================================================== */
.rmcc-transition-slow {
  transition-duration: 0.7s;
}

/* Disable modifier
 ========================================================================== */
.rmcc-transition-disable,
.rmcc-transition-disable * {
  transition: none !important;
}

/* ========================================================================
   Component: Visibility
 ========================================================================== */
/*
 * Hidden
 * `hidden` attribute also set here to make it stronger
 */
[hidden],
.rmcc-hidden,
.rmcc-hidden-empty:empty {
  display: none !important;
}

/* Phone landscape and bigger */
@media (min-width: 640px) {
  .rmcc-hidden\@s {
    display: none !important;
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .rmcc-hidden\@m {
    display: none !important;
  }
}
/* Desktop and bigger */
@media (min-width: 1200px) {
  .rmcc-hidden\@l {
    display: none !important;
  }
}
/* Large screen and bigger */
@media (min-width: 1600px) {
  .rmcc-hidden\@xl {
    display: none !important;
  }
}
/*
 * Visible
 */
/* Phone portrait and smaller */
@media (max-width: 639px) {
  .rmcc-visible\@s {
    display: none !important;
  }
}
/* Phone landscape and smaller */
@media (max-width: 959px) {
  .rmcc-visible\@m {
    display: none !important;
  }
}
/* Tablet landscape and smaller */
@media (max-width: 1199px) {
  .rmcc-visible\@l {
    display: none !important;
  }
}
/* Desktop and smaller */
@media (max-width: 1599px) {
  .rmcc-visible\@xl {
    display: none !important;
  }
}
/* Visibility
 ========================================================================== */
.rmcc-invisible {
  visibility: hidden !important;
}

/* Based on the State of the Parent Element
 ========================================================================== */
/*
 * Mind that `display: none`, `visibility: hidden` and `opacity: 0`
 * remove the element from the accessibility tree and that
 * `display: none` and `visibility: hidden` are not focusable.
 *
 * The target stays visible if any element within receives focus through keyboard.
 */
/*
 * Remove space when hidden.
 * 1. Remove from document flow.
 * 2. Hide element and shrink its dimension. Current browsers and screen readers
 *    keep the element in the accessibility tree even with zero dimensions.
 *    Using `tabindex="-1"` will show the element on touch devices.
 *    Note: `clip-path` doesn't work with `tabindex` on touch devices.
 */
.rmcc-hidden-visually:not(:focus):not(:active):not(:focus-within),
.rmcc-visible-toggle:not(:hover):not(:focus) .rmcc-hidden-hover:not(:focus-visible):not(:has(:focus-visible)),
.rmcc-visible-toggle:not(:hover):not(:focus) .rmcc-hidden-hover:not(:focus-within) {
  /* 1 */
  position: absolute !important;
  /* 2 */
  width: 0 !important;
  height: 0 !important;
  padding: 0 !important;
  border: 0 !important;
  margin: 0 !important;
  overflow: hidden !important;
}

/*
 * Keep space when hidden.
 * Hide element without shrinking its dimension.
 * Note: `clip-path` doesn't work with hover for elements outside of the toggle box.
 */
.rmcc-visible-toggle:not(:hover):not(:focus) .rmcc-invisible-hover:not(:focus-within) {
  opacity: 0 !important;
}

/* Based on Hover Capability of the Pointing Device
 ========================================================================== */
/*
 * Hover
 */
/* Hide if primary pointing device doesn't support hover, e.g. touch screens. */
@media (hover: none) {
  .rmcc-hidden-touch {
    display: none !important;
  }
}
/* Hide if primary pointing device supports hover, e.g. mice. */
@media (hover) {
  .rmcc-hidden-notouch {
    display: none !important;
  }
}
/* ========================================================================
   Component: Inverse
 ========================================================================== */
/*
 * Implemented class depends on the general theme color
 * `rmcc-light` is for light colors on dark backgrounds
 * `rmcc-dark` is or dark colors on light backgrounds
 */
.rmcc-light, .rmcc-section-primary:not(.rmcc-preserve-color), .rmcc-section-secondary:not(.rmcc-preserve-color), .rmcc-tile-primary:not(.rmcc-preserve-color), .rmcc-tile-secondary:not(.rmcc-preserve-color), .rmcc-card-primary.rmcc-card-body, .rmcc-card-primary > :not([class*=rmcc-card-media]), .rmcc-card-secondary.rmcc-card-body, .rmcc-card-secondary > :not([class*=rmcc-card-media]), .rmcc-overlay-primary, .rmcc-offcanvas-bar {
  color: rgba(255, 255, 255, 0.7);
  /* Webkit */
  /* Firefox */
  /* Webkit */
  /* Firefox */
}
.rmcc-light .rmcc-accordion-title::before, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-accordion-title::before, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-accordion-title::before, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-accordion-title::before, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-accordion-title::before, .rmcc-card-primary.rmcc-card-body .rmcc-accordion-title::before, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-accordion-title::before, .rmcc-card-secondary.rmcc-card-body .rmcc-accordion-title::before, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-accordion-title::before, .rmcc-overlay-primary .rmcc-accordion-title::before, .rmcc-offcanvas-bar .rmcc-accordion-title::before {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2213%22%20height%3D%2213%22%20viewBox%3D%220%200%2013%2013%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Crect%20fill%3D%22rgba(255, 255, 255, 0.7)%22%20width%3D%2213%22%20height%3D%221%22%20x%3D%220%22%20y%3D%226%22%20%2F%3E%0A%20%20%20%20%3Crect%20fill%3D%22rgba(255, 255, 255, 0.7)%22%20width%3D%221%22%20height%3D%2213%22%20x%3D%226%22%20y%3D%220%22%20%2F%3E%0A%3C%2Fsvg%3E");
}
.rmcc-light .rmcc-open > .rmcc-accordion-title::before, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-open > .rmcc-accordion-title::before, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-open > .rmcc-accordion-title::before, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-open > .rmcc-accordion-title::before, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-open > .rmcc-accordion-title::before, .rmcc-card-primary.rmcc-card-body .rmcc-open > .rmcc-accordion-title::before, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-open > .rmcc-accordion-title::before, .rmcc-card-secondary.rmcc-card-body .rmcc-open > .rmcc-accordion-title::before, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-open > .rmcc-accordion-title::before, .rmcc-overlay-primary .rmcc-open > .rmcc-accordion-title::before, .rmcc-offcanvas-bar .rmcc-open > .rmcc-accordion-title::before {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2213%22%20height%3D%2213%22%20viewBox%3D%220%200%2013%2013%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Crect%20fill%3D%22rgba(255, 255, 255, 0.7)%22%20width%3D%2213%22%20height%3D%221%22%20x%3D%220%22%20y%3D%226%22%20%2F%3E%0A%3C%2Fsvg%3E");
}
.rmcc-light .rmcc-article-meta, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-article-meta, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-article-meta, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-article-meta, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-article-meta, .rmcc-card-primary.rmcc-card-body .rmcc-article-meta, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-article-meta, .rmcc-card-secondary.rmcc-card-body .rmcc-article-meta, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-article-meta, .rmcc-overlay-primary .rmcc-article-meta, .rmcc-offcanvas-bar .rmcc-article-meta {
  color: rgba(255, 255, 255, 0.5);
}
.rmcc-light .rmcc-badge, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-badge, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-badge, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-badge, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-badge, .rmcc-card-primary.rmcc-card-body .rmcc-badge, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-badge, .rmcc-card-secondary.rmcc-card-body .rmcc-badge, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-badge, .rmcc-overlay-primary .rmcc-badge, .rmcc-offcanvas-bar .rmcc-badge {
  background-color: #fff;
  color: #666 !important;
}
.rmcc-light a, .rmcc-section-primary:not(.rmcc-preserve-color) a, .rmcc-section-secondary:not(.rmcc-preserve-color) a, .rmcc-tile-primary:not(.rmcc-preserve-color) a, .rmcc-tile-secondary:not(.rmcc-preserve-color) a, .rmcc-card-primary.rmcc-card-body a, .rmcc-card-primary > :not([class*=rmcc-card-media]) a, .rmcc-card-secondary.rmcc-card-body a, .rmcc-card-secondary > :not([class*=rmcc-card-media]) a, .rmcc-overlay-primary a, .rmcc-offcanvas-bar a,
.rmcc-light .rmcc-link,
.rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-link,
.rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-link,
.rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-link,
.rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-link,
.rmcc-card-primary.rmcc-card-body .rmcc-link,
.rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-link,
.rmcc-card-secondary.rmcc-card-body .rmcc-link,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-link,
.rmcc-overlay-primary .rmcc-link,
.rmcc-offcanvas-bar .rmcc-link {
  color: #fff;
}
.rmcc-light a:hover, .rmcc-section-primary:not(.rmcc-preserve-color) a:hover, .rmcc-section-secondary:not(.rmcc-preserve-color) a:hover, .rmcc-tile-primary:not(.rmcc-preserve-color) a:hover, .rmcc-tile-secondary:not(.rmcc-preserve-color) a:hover, .rmcc-card-primary.rmcc-card-body a:hover, .rmcc-card-primary > :not([class*=rmcc-card-media]) a:hover, .rmcc-card-secondary.rmcc-card-body a:hover, .rmcc-card-secondary > :not([class*=rmcc-card-media]) a:hover, .rmcc-overlay-primary a:hover, .rmcc-offcanvas-bar a:hover,
.rmcc-light .rmcc-link:hover,
.rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-link:hover,
.rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-link:hover,
.rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-link:hover,
.rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-link:hover,
.rmcc-card-primary.rmcc-card-body .rmcc-link:hover,
.rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-link:hover,
.rmcc-card-secondary.rmcc-card-body .rmcc-link:hover,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-link:hover,
.rmcc-overlay-primary .rmcc-link:hover,
.rmcc-offcanvas-bar .rmcc-link:hover,
.rmcc-light .rmcc-link-toggle:hover .rmcc-link,
.rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-link-toggle:hover .rmcc-link,
.rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-link-toggle:hover .rmcc-link,
.rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-link-toggle:hover .rmcc-link,
.rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-link-toggle:hover .rmcc-link,
.rmcc-card-primary.rmcc-card-body .rmcc-link-toggle:hover .rmcc-link,
.rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-link-toggle:hover .rmcc-link,
.rmcc-card-secondary.rmcc-card-body .rmcc-link-toggle:hover .rmcc-link,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-link-toggle:hover .rmcc-link,
.rmcc-overlay-primary .rmcc-link-toggle:hover .rmcc-link,
.rmcc-offcanvas-bar .rmcc-link-toggle:hover .rmcc-link {
  color: #fff;
}
.rmcc-light :not(pre) > code, .rmcc-section-primary:not(.rmcc-preserve-color) :not(pre) > code, .rmcc-section-secondary:not(.rmcc-preserve-color) :not(pre) > code, .rmcc-tile-primary:not(.rmcc-preserve-color) :not(pre) > code, .rmcc-tile-secondary:not(.rmcc-preserve-color) :not(pre) > code, .rmcc-card-primary.rmcc-card-body :not(pre) > code, .rmcc-card-primary > :not([class*=rmcc-card-media]) :not(pre) > code, .rmcc-card-secondary.rmcc-card-body :not(pre) > code, .rmcc-card-secondary > :not([class*=rmcc-card-media]) :not(pre) > code, .rmcc-overlay-primary :not(pre) > code, .rmcc-offcanvas-bar :not(pre) > code,
.rmcc-light :not(pre) > kbd,
.rmcc-section-primary:not(.rmcc-preserve-color) :not(pre) > kbd,
.rmcc-section-secondary:not(.rmcc-preserve-color) :not(pre) > kbd,
.rmcc-tile-primary:not(.rmcc-preserve-color) :not(pre) > kbd,
.rmcc-tile-secondary:not(.rmcc-preserve-color) :not(pre) > kbd,
.rmcc-card-primary.rmcc-card-body :not(pre) > kbd,
.rmcc-card-primary > :not([class*=rmcc-card-media]) :not(pre) > kbd,
.rmcc-card-secondary.rmcc-card-body :not(pre) > kbd,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) :not(pre) > kbd,
.rmcc-overlay-primary :not(pre) > kbd,
.rmcc-offcanvas-bar :not(pre) > kbd,
.rmcc-light :not(pre) > samp,
.rmcc-section-primary:not(.rmcc-preserve-color) :not(pre) > samp,
.rmcc-section-secondary:not(.rmcc-preserve-color) :not(pre) > samp,
.rmcc-tile-primary:not(.rmcc-preserve-color) :not(pre) > samp,
.rmcc-tile-secondary:not(.rmcc-preserve-color) :not(pre) > samp,
.rmcc-card-primary.rmcc-card-body :not(pre) > samp,
.rmcc-card-primary > :not([class*=rmcc-card-media]) :not(pre) > samp,
.rmcc-card-secondary.rmcc-card-body :not(pre) > samp,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) :not(pre) > samp,
.rmcc-overlay-primary :not(pre) > samp,
.rmcc-offcanvas-bar :not(pre) > samp {
  color: rgba(255, 255, 255, 0.7);
  background-color: rgba(255, 255, 255, 0.1);
}
.rmcc-light em, .rmcc-section-primary:not(.rmcc-preserve-color) em, .rmcc-section-secondary:not(.rmcc-preserve-color) em, .rmcc-tile-primary:not(.rmcc-preserve-color) em, .rmcc-tile-secondary:not(.rmcc-preserve-color) em, .rmcc-card-primary.rmcc-card-body em, .rmcc-card-primary > :not([class*=rmcc-card-media]) em, .rmcc-card-secondary.rmcc-card-body em, .rmcc-card-secondary > :not([class*=rmcc-card-media]) em, .rmcc-overlay-primary em, .rmcc-offcanvas-bar em {
  color: #fff;
}
.rmcc-light h1, .rmcc-section-primary:not(.rmcc-preserve-color) h1, .rmcc-section-secondary:not(.rmcc-preserve-color) h1, .rmcc-tile-primary:not(.rmcc-preserve-color) h1, .rmcc-tile-secondary:not(.rmcc-preserve-color) h1, .rmcc-card-primary.rmcc-card-body h1, .rmcc-card-primary > :not([class*=rmcc-card-media]) h1, .rmcc-card-secondary.rmcc-card-body h1, .rmcc-card-secondary > :not([class*=rmcc-card-media]) h1, .rmcc-overlay-primary h1, .rmcc-offcanvas-bar h1, .rmcc-light .rmcc-h1, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-h1, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-h1, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-h1, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-h1, .rmcc-card-primary.rmcc-card-body .rmcc-h1, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-h1, .rmcc-card-secondary.rmcc-card-body .rmcc-h1, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-h1, .rmcc-overlay-primary .rmcc-h1, .rmcc-offcanvas-bar .rmcc-h1,
.rmcc-light h2,
.rmcc-section-primary:not(.rmcc-preserve-color) h2,
.rmcc-section-secondary:not(.rmcc-preserve-color) h2,
.rmcc-tile-primary:not(.rmcc-preserve-color) h2,
.rmcc-tile-secondary:not(.rmcc-preserve-color) h2,
.rmcc-card-primary.rmcc-card-body h2,
.rmcc-card-primary > :not([class*=rmcc-card-media]) h2,
.rmcc-card-secondary.rmcc-card-body h2,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) h2,
.rmcc-overlay-primary h2,
.rmcc-offcanvas-bar h2, .rmcc-light .rmcc-h2, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-h2, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-h2, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-h2, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-h2, .rmcc-card-primary.rmcc-card-body .rmcc-h2, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-h2, .rmcc-card-secondary.rmcc-card-body .rmcc-h2, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-h2, .rmcc-overlay-primary .rmcc-h2, .rmcc-offcanvas-bar .rmcc-h2,
.rmcc-light h3,
.rmcc-section-primary:not(.rmcc-preserve-color) h3,
.rmcc-section-secondary:not(.rmcc-preserve-color) h3,
.rmcc-tile-primary:not(.rmcc-preserve-color) h3,
.rmcc-tile-secondary:not(.rmcc-preserve-color) h3,
.rmcc-card-primary.rmcc-card-body h3,
.rmcc-card-primary > :not([class*=rmcc-card-media]) h3,
.rmcc-card-secondary.rmcc-card-body h3,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) h3,
.rmcc-overlay-primary h3,
.rmcc-offcanvas-bar h3, .rmcc-light .rmcc-h3, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-h3, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-h3, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-h3, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-h3, .rmcc-card-primary.rmcc-card-body .rmcc-h3, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-h3, .rmcc-card-secondary.rmcc-card-body .rmcc-h3, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-h3, .rmcc-overlay-primary .rmcc-h3, .rmcc-offcanvas-bar .rmcc-h3,
.rmcc-light h4,
.rmcc-section-primary:not(.rmcc-preserve-color) h4,
.rmcc-section-secondary:not(.rmcc-preserve-color) h4,
.rmcc-tile-primary:not(.rmcc-preserve-color) h4,
.rmcc-tile-secondary:not(.rmcc-preserve-color) h4,
.rmcc-card-primary.rmcc-card-body h4,
.rmcc-card-primary > :not([class*=rmcc-card-media]) h4,
.rmcc-card-secondary.rmcc-card-body h4,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) h4,
.rmcc-overlay-primary h4,
.rmcc-offcanvas-bar h4, .rmcc-light .rmcc-h4, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-h4, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-h4, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-h4, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-h4, .rmcc-card-primary.rmcc-card-body .rmcc-h4, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-h4, .rmcc-card-secondary.rmcc-card-body .rmcc-h4, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-h4, .rmcc-overlay-primary .rmcc-h4, .rmcc-offcanvas-bar .rmcc-h4,
.rmcc-light h5,
.rmcc-section-primary:not(.rmcc-preserve-color) h5,
.rmcc-section-secondary:not(.rmcc-preserve-color) h5,
.rmcc-tile-primary:not(.rmcc-preserve-color) h5,
.rmcc-tile-secondary:not(.rmcc-preserve-color) h5,
.rmcc-card-primary.rmcc-card-body h5,
.rmcc-card-primary > :not([class*=rmcc-card-media]) h5,
.rmcc-card-secondary.rmcc-card-body h5,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) h5,
.rmcc-overlay-primary h5,
.rmcc-offcanvas-bar h5, .rmcc-light .rmcc-h5, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-h5, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-h5, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-h5, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-h5, .rmcc-card-primary.rmcc-card-body .rmcc-h5, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-h5, .rmcc-card-secondary.rmcc-card-body .rmcc-h5, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-h5, .rmcc-overlay-primary .rmcc-h5, .rmcc-offcanvas-bar .rmcc-h5,
.rmcc-light h6,
.rmcc-section-primary:not(.rmcc-preserve-color) h6,
.rmcc-section-secondary:not(.rmcc-preserve-color) h6,
.rmcc-tile-primary:not(.rmcc-preserve-color) h6,
.rmcc-tile-secondary:not(.rmcc-preserve-color) h6,
.rmcc-card-primary.rmcc-card-body h6,
.rmcc-card-primary > :not([class*=rmcc-card-media]) h6,
.rmcc-card-secondary.rmcc-card-body h6,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) h6,
.rmcc-overlay-primary h6,
.rmcc-offcanvas-bar h6, .rmcc-light .rmcc-h6, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-h6, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-h6, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-h6, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-h6, .rmcc-card-primary.rmcc-card-body .rmcc-h6, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-h6, .rmcc-card-secondary.rmcc-card-body .rmcc-h6, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-h6, .rmcc-overlay-primary .rmcc-h6, .rmcc-offcanvas-bar .rmcc-h6,
.rmcc-light .rmcc-heading-small,
.rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-heading-small,
.rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-heading-small,
.rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-heading-small,
.rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-heading-small,
.rmcc-card-primary.rmcc-card-body .rmcc-heading-small,
.rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-heading-small,
.rmcc-card-secondary.rmcc-card-body .rmcc-heading-small,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-heading-small,
.rmcc-overlay-primary .rmcc-heading-small,
.rmcc-offcanvas-bar .rmcc-heading-small,
.rmcc-light .rmcc-heading-medium,
.rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-heading-medium,
.rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-heading-medium,
.rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-heading-medium,
.rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-heading-medium,
.rmcc-card-primary.rmcc-card-body .rmcc-heading-medium,
.rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-heading-medium,
.rmcc-card-secondary.rmcc-card-body .rmcc-heading-medium,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-heading-medium,
.rmcc-overlay-primary .rmcc-heading-medium,
.rmcc-offcanvas-bar .rmcc-heading-medium,
.rmcc-light .rmcc-heading-large,
.rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-heading-large,
.rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-heading-large,
.rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-heading-large,
.rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-heading-large,
.rmcc-card-primary.rmcc-card-body .rmcc-heading-large,
.rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-heading-large,
.rmcc-card-secondary.rmcc-card-body .rmcc-heading-large,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-heading-large,
.rmcc-overlay-primary .rmcc-heading-large,
.rmcc-offcanvas-bar .rmcc-heading-large,
.rmcc-light .rmcc-heading-xlarge,
.rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-heading-xlarge,
.rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-heading-xlarge,
.rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-heading-xlarge,
.rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-heading-xlarge,
.rmcc-card-primary.rmcc-card-body .rmcc-heading-xlarge,
.rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-heading-xlarge,
.rmcc-card-secondary.rmcc-card-body .rmcc-heading-xlarge,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-heading-xlarge,
.rmcc-overlay-primary .rmcc-heading-xlarge,
.rmcc-offcanvas-bar .rmcc-heading-xlarge,
.rmcc-light .rmcc-heading-2xlarge,
.rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-heading-2xlarge,
.rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-heading-2xlarge,
.rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-heading-2xlarge,
.rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-heading-2xlarge,
.rmcc-card-primary.rmcc-card-body .rmcc-heading-2xlarge,
.rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-heading-2xlarge,
.rmcc-card-secondary.rmcc-card-body .rmcc-heading-2xlarge,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-heading-2xlarge,
.rmcc-overlay-primary .rmcc-heading-2xlarge,
.rmcc-offcanvas-bar .rmcc-heading-2xlarge,
.rmcc-light .rmcc-heading-3xlarge,
.rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-heading-3xlarge,
.rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-heading-3xlarge,
.rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-heading-3xlarge,
.rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-heading-3xlarge,
.rmcc-card-primary.rmcc-card-body .rmcc-heading-3xlarge,
.rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-heading-3xlarge,
.rmcc-card-secondary.rmcc-card-body .rmcc-heading-3xlarge,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-heading-3xlarge,
.rmcc-overlay-primary .rmcc-heading-3xlarge,
.rmcc-offcanvas-bar .rmcc-heading-3xlarge {
  color: #fff;
}
.rmcc-light blockquote, .rmcc-section-primary:not(.rmcc-preserve-color) blockquote, .rmcc-section-secondary:not(.rmcc-preserve-color) blockquote, .rmcc-tile-primary:not(.rmcc-preserve-color) blockquote, .rmcc-tile-secondary:not(.rmcc-preserve-color) blockquote, .rmcc-card-primary.rmcc-card-body blockquote, .rmcc-card-primary > :not([class*=rmcc-card-media]) blockquote, .rmcc-card-secondary.rmcc-card-body blockquote, .rmcc-card-secondary > :not([class*=rmcc-card-media]) blockquote, .rmcc-overlay-primary blockquote, .rmcc-offcanvas-bar blockquote {
  color: #fff;
}
.rmcc-light blockquote footer, .rmcc-section-primary:not(.rmcc-preserve-color) blockquote footer, .rmcc-section-secondary:not(.rmcc-preserve-color) blockquote footer, .rmcc-tile-primary:not(.rmcc-preserve-color) blockquote footer, .rmcc-tile-secondary:not(.rmcc-preserve-color) blockquote footer, .rmcc-card-primary.rmcc-card-body blockquote footer, .rmcc-card-primary > :not([class*=rmcc-card-media]) blockquote footer, .rmcc-card-secondary.rmcc-card-body blockquote footer, .rmcc-card-secondary > :not([class*=rmcc-card-media]) blockquote footer, .rmcc-overlay-primary blockquote footer, .rmcc-offcanvas-bar blockquote footer {
  color: rgba(255, 255, 255, 0.7);
}
.rmcc-light hr, .rmcc-section-primary:not(.rmcc-preserve-color) hr, .rmcc-section-secondary:not(.rmcc-preserve-color) hr, .rmcc-tile-primary:not(.rmcc-preserve-color) hr, .rmcc-tile-secondary:not(.rmcc-preserve-color) hr, .rmcc-card-primary.rmcc-card-body hr, .rmcc-card-primary > :not([class*=rmcc-card-media]) hr, .rmcc-card-secondary.rmcc-card-body hr, .rmcc-card-secondary > :not([class*=rmcc-card-media]) hr, .rmcc-overlay-primary hr, .rmcc-offcanvas-bar hr, .rmcc-light .rmcc-hr, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-hr, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-hr, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-hr, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-hr, .rmcc-card-primary.rmcc-card-body .rmcc-hr, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-hr, .rmcc-card-secondary.rmcc-card-body .rmcc-hr, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-hr, .rmcc-overlay-primary .rmcc-hr, .rmcc-offcanvas-bar .rmcc-hr {
  border-top-color: rgba(255, 255, 255, 0.2);
}
.rmcc-light :focus-visible, .rmcc-section-primary:not(.rmcc-preserve-color) :focus-visible, .rmcc-section-secondary:not(.rmcc-preserve-color) :focus-visible, .rmcc-tile-primary:not(.rmcc-preserve-color) :focus-visible, .rmcc-tile-secondary:not(.rmcc-preserve-color) :focus-visible, .rmcc-card-primary.rmcc-card-body :focus-visible, .rmcc-card-primary > :not([class*=rmcc-card-media]) :focus-visible, .rmcc-card-secondary.rmcc-card-body :focus-visible, .rmcc-card-secondary > :not([class*=rmcc-card-media]) :focus-visible, .rmcc-overlay-primary :focus-visible, .rmcc-offcanvas-bar :focus-visible {
  outline-color: #fff;
}
.rmcc-light .rmcc-breadcrumb > * > *, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-breadcrumb > * > *, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-breadcrumb > * > *, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-breadcrumb > * > *, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-breadcrumb > * > *, .rmcc-card-primary.rmcc-card-body .rmcc-breadcrumb > * > *, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-breadcrumb > * > *, .rmcc-card-secondary.rmcc-card-body .rmcc-breadcrumb > * > *, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-breadcrumb > * > *, .rmcc-overlay-primary .rmcc-breadcrumb > * > *, .rmcc-offcanvas-bar .rmcc-breadcrumb > * > * {
  color: rgba(255, 255, 255, 0.5);
}
.rmcc-light .rmcc-breadcrumb > * > :hover, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-breadcrumb > * > :hover, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-breadcrumb > * > :hover, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-breadcrumb > * > :hover, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-breadcrumb > * > :hover, .rmcc-card-primary.rmcc-card-body .rmcc-breadcrumb > * > :hover, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-breadcrumb > * > :hover, .rmcc-card-secondary.rmcc-card-body .rmcc-breadcrumb > * > :hover, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-breadcrumb > * > :hover, .rmcc-overlay-primary .rmcc-breadcrumb > * > :hover, .rmcc-offcanvas-bar .rmcc-breadcrumb > * > :hover {
  color: rgba(255, 255, 255, 0.7);
}
.rmcc-light .rmcc-breadcrumb > :last-child > *, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-breadcrumb > :last-child > *, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-breadcrumb > :last-child > *, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-breadcrumb > :last-child > *, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-breadcrumb > :last-child > *, .rmcc-card-primary.rmcc-card-body .rmcc-breadcrumb > :last-child > *, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-breadcrumb > :last-child > *, .rmcc-card-secondary.rmcc-card-body .rmcc-breadcrumb > :last-child > *, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-breadcrumb > :last-child > *, .rmcc-overlay-primary .rmcc-breadcrumb > :last-child > *, .rmcc-offcanvas-bar .rmcc-breadcrumb > :last-child > * {
  color: rgba(255, 255, 255, 0.7);
}
.rmcc-light .rmcc-breadcrumb > :nth-child(n+2):not(.rmcc-first-column)::before, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-breadcrumb > :nth-child(n+2):not(.rmcc-first-column)::before, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-breadcrumb > :nth-child(n+2):not(.rmcc-first-column)::before, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-breadcrumb > :nth-child(n+2):not(.rmcc-first-column)::before, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-breadcrumb > :nth-child(n+2):not(.rmcc-first-column)::before, .rmcc-card-primary.rmcc-card-body .rmcc-breadcrumb > :nth-child(n+2):not(.rmcc-first-column)::before, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-breadcrumb > :nth-child(n+2):not(.rmcc-first-column)::before, .rmcc-card-secondary.rmcc-card-body .rmcc-breadcrumb > :nth-child(n+2):not(.rmcc-first-column)::before, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-breadcrumb > :nth-child(n+2):not(.rmcc-first-column)::before, .rmcc-overlay-primary .rmcc-breadcrumb > :nth-child(n+2):not(.rmcc-first-column)::before, .rmcc-offcanvas-bar .rmcc-breadcrumb > :nth-child(n+2):not(.rmcc-first-column)::before {
  color: rgba(255, 255, 255, 0.5);
}
.rmcc-light .rmcc-button-default, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-button-default, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-button-default, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-button-default, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-button-default, .rmcc-card-primary.rmcc-card-body .rmcc-button-default, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-button-default, .rmcc-card-secondary.rmcc-card-body .rmcc-button-default, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-button-default, .rmcc-overlay-primary .rmcc-button-default, .rmcc-offcanvas-bar .rmcc-button-default {
  background-color: transparent;
  color: #fff;
  border-color: rgba(255, 255, 255, 0.7);
}
.rmcc-light .rmcc-button-default:hover, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-button-default:hover, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-button-default:hover, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-button-default:hover, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-button-default:hover, .rmcc-card-primary.rmcc-card-body .rmcc-button-default:hover, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-button-default:hover, .rmcc-card-secondary.rmcc-card-body .rmcc-button-default:hover, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-button-default:hover, .rmcc-overlay-primary .rmcc-button-default:hover, .rmcc-offcanvas-bar .rmcc-button-default:hover {
  background-color: transparent;
  color: #fff;
  border-color: #fff;
}
.rmcc-light .rmcc-button-default:active, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-button-default:active, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-button-default:active, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-button-default:active, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-button-default:active, .rmcc-card-primary.rmcc-card-body .rmcc-button-default:active, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-button-default:active, .rmcc-card-secondary.rmcc-card-body .rmcc-button-default:active, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-button-default:active, .rmcc-overlay-primary .rmcc-button-default:active, .rmcc-offcanvas-bar .rmcc-button-default:active,
.rmcc-light .rmcc-button-default.rmcc-active,
.rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-button-default.rmcc-active,
.rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-button-default.rmcc-active,
.rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-button-default.rmcc-active,
.rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-button-default.rmcc-active,
.rmcc-card-primary.rmcc-card-body .rmcc-button-default.rmcc-active,
.rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-button-default.rmcc-active,
.rmcc-card-secondary.rmcc-card-body .rmcc-button-default.rmcc-active,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-button-default.rmcc-active,
.rmcc-overlay-primary .rmcc-button-default.rmcc-active,
.rmcc-offcanvas-bar .rmcc-button-default.rmcc-active {
  background-color: transparent;
  color: #fff;
  border-color: #fff;
}
.rmcc-light .rmcc-button-primary, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-button-primary, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-button-primary, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-button-primary, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-button-primary, .rmcc-card-primary.rmcc-card-body .rmcc-button-primary, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-button-primary, .rmcc-card-secondary.rmcc-card-body .rmcc-button-primary, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-button-primary, .rmcc-overlay-primary .rmcc-button-primary, .rmcc-offcanvas-bar .rmcc-button-primary {
  background-color: #fff;
  color: #666;
}
.rmcc-light .rmcc-button-primary:hover, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-button-primary:hover, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-button-primary:hover, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-button-primary:hover, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-button-primary:hover, .rmcc-card-primary.rmcc-card-body .rmcc-button-primary:hover, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-button-primary:hover, .rmcc-card-secondary.rmcc-card-body .rmcc-button-primary:hover, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-button-primary:hover, .rmcc-overlay-primary .rmcc-button-primary:hover, .rmcc-offcanvas-bar .rmcc-button-primary:hover {
  background-color: rgb(242.25, 242.25, 242.25);
  color: #666;
}
.rmcc-light .rmcc-button-primary:active, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-button-primary:active, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-button-primary:active, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-button-primary:active, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-button-primary:active, .rmcc-card-primary.rmcc-card-body .rmcc-button-primary:active, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-button-primary:active, .rmcc-card-secondary.rmcc-card-body .rmcc-button-primary:active, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-button-primary:active, .rmcc-overlay-primary .rmcc-button-primary:active, .rmcc-offcanvas-bar .rmcc-button-primary:active,
.rmcc-light .rmcc-button-primary.rmcc-active,
.rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-button-primary.rmcc-active,
.rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-button-primary.rmcc-active,
.rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-button-primary.rmcc-active,
.rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-button-primary.rmcc-active,
.rmcc-card-primary.rmcc-card-body .rmcc-button-primary.rmcc-active,
.rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-button-primary.rmcc-active,
.rmcc-card-secondary.rmcc-card-body .rmcc-button-primary.rmcc-active,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-button-primary.rmcc-active,
.rmcc-overlay-primary .rmcc-button-primary.rmcc-active,
.rmcc-offcanvas-bar .rmcc-button-primary.rmcc-active {
  background-color: rgb(229.5, 229.5, 229.5);
  color: #666;
}
.rmcc-light .rmcc-button-secondary, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-button-secondary, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-button-secondary, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-button-secondary, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-button-secondary, .rmcc-card-primary.rmcc-card-body .rmcc-button-secondary, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-button-secondary, .rmcc-card-secondary.rmcc-card-body .rmcc-button-secondary, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-button-secondary, .rmcc-overlay-primary .rmcc-button-secondary, .rmcc-offcanvas-bar .rmcc-button-secondary {
  background-color: #fff;
  color: #666;
}
.rmcc-light .rmcc-button-secondary:hover, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-button-secondary:hover, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-button-secondary:hover, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-button-secondary:hover, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-button-secondary:hover, .rmcc-card-primary.rmcc-card-body .rmcc-button-secondary:hover, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-button-secondary:hover, .rmcc-card-secondary.rmcc-card-body .rmcc-button-secondary:hover, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-button-secondary:hover, .rmcc-overlay-primary .rmcc-button-secondary:hover, .rmcc-offcanvas-bar .rmcc-button-secondary:hover {
  background-color: rgb(242.25, 242.25, 242.25);
  color: #666;
}
.rmcc-light .rmcc-button-secondary:active, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-button-secondary:active, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-button-secondary:active, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-button-secondary:active, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-button-secondary:active, .rmcc-card-primary.rmcc-card-body .rmcc-button-secondary:active, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-button-secondary:active, .rmcc-card-secondary.rmcc-card-body .rmcc-button-secondary:active, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-button-secondary:active, .rmcc-overlay-primary .rmcc-button-secondary:active, .rmcc-offcanvas-bar .rmcc-button-secondary:active,
.rmcc-light .rmcc-button-secondary.rmcc-active,
.rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-button-secondary.rmcc-active,
.rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-button-secondary.rmcc-active,
.rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-button-secondary.rmcc-active,
.rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-button-secondary.rmcc-active,
.rmcc-card-primary.rmcc-card-body .rmcc-button-secondary.rmcc-active,
.rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-button-secondary.rmcc-active,
.rmcc-card-secondary.rmcc-card-body .rmcc-button-secondary.rmcc-active,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-button-secondary.rmcc-active,
.rmcc-overlay-primary .rmcc-button-secondary.rmcc-active,
.rmcc-offcanvas-bar .rmcc-button-secondary.rmcc-active {
  background-color: rgb(229.5, 229.5, 229.5);
  color: #666;
}
.rmcc-light .rmcc-button-text, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-button-text, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-button-text, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-button-text, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-button-text, .rmcc-card-primary.rmcc-card-body .rmcc-button-text, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-button-text, .rmcc-card-secondary.rmcc-card-body .rmcc-button-text, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-button-text, .rmcc-overlay-primary .rmcc-button-text, .rmcc-offcanvas-bar .rmcc-button-text {
  color: #fff;
}
.rmcc-light .rmcc-button-text::before, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-button-text::before, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-button-text::before, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-button-text::before, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-button-text::before, .rmcc-card-primary.rmcc-card-body .rmcc-button-text::before, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-button-text::before, .rmcc-card-secondary.rmcc-card-body .rmcc-button-text::before, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-button-text::before, .rmcc-overlay-primary .rmcc-button-text::before, .rmcc-offcanvas-bar .rmcc-button-text::before {
  border-bottom-color: #fff;
}
.rmcc-light .rmcc-button-text:hover, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-button-text:hover, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-button-text:hover, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-button-text:hover, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-button-text:hover, .rmcc-card-primary.rmcc-card-body .rmcc-button-text:hover, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-button-text:hover, .rmcc-card-secondary.rmcc-card-body .rmcc-button-text:hover, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-button-text:hover, .rmcc-overlay-primary .rmcc-button-text:hover, .rmcc-offcanvas-bar .rmcc-button-text:hover {
  color: #fff;
}
.rmcc-light .rmcc-button-text:disabled, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-button-text:disabled, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-button-text:disabled, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-button-text:disabled, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-button-text:disabled, .rmcc-card-primary.rmcc-card-body .rmcc-button-text:disabled, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-button-text:disabled, .rmcc-card-secondary.rmcc-card-body .rmcc-button-text:disabled, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-button-text:disabled, .rmcc-overlay-primary .rmcc-button-text:disabled, .rmcc-offcanvas-bar .rmcc-button-text:disabled {
  color: rgba(255, 255, 255, 0.5);
}
.rmcc-light .rmcc-button-link, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-button-link, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-button-link, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-button-link, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-button-link, .rmcc-card-primary.rmcc-card-body .rmcc-button-link, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-button-link, .rmcc-card-secondary.rmcc-card-body .rmcc-button-link, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-button-link, .rmcc-overlay-primary .rmcc-button-link, .rmcc-offcanvas-bar .rmcc-button-link {
  color: #fff;
}
.rmcc-light .rmcc-button-link:hover, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-button-link:hover, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-button-link:hover, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-button-link:hover, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-button-link:hover, .rmcc-card-primary.rmcc-card-body .rmcc-button-link:hover, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-button-link:hover, .rmcc-card-secondary.rmcc-card-body .rmcc-button-link:hover, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-button-link:hover, .rmcc-overlay-primary .rmcc-button-link:hover, .rmcc-offcanvas-bar .rmcc-button-link:hover {
  color: rgba(255, 255, 255, 0.5);
}
.rmcc-light.rmcc-card-badge, .rmcc-card-badge.rmcc-section-primary:not(.rmcc-preserve-color), .rmcc-card-badge.rmcc-section-secondary:not(.rmcc-preserve-color), .rmcc-card-badge.rmcc-tile-primary:not(.rmcc-preserve-color), .rmcc-card-badge.rmcc-tile-secondary:not(.rmcc-preserve-color), .rmcc-card-badge.rmcc-card-primary.rmcc-card-body, .rmcc-card-primary > .rmcc-card-badge:not([class*=rmcc-card-media]), .rmcc-card-badge.rmcc-card-secondary.rmcc-card-body, .rmcc-card-secondary > .rmcc-card-badge:not([class*=rmcc-card-media]), .rmcc-card-badge.rmcc-overlay-primary, .rmcc-card-badge.rmcc-offcanvas-bar {
  background-color: #fff;
  color: #666;
}
.rmcc-light .rmcc-close, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-close, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-close, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-close, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-close, .rmcc-card-primary.rmcc-card-body .rmcc-close, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-close, .rmcc-card-secondary.rmcc-card-body .rmcc-close, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-close, .rmcc-overlay-primary .rmcc-close, .rmcc-offcanvas-bar .rmcc-close {
  color: rgba(255, 255, 255, 0.5);
}
.rmcc-light .rmcc-close:hover, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-close:hover, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-close:hover, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-close:hover, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-close:hover, .rmcc-card-primary.rmcc-card-body .rmcc-close:hover, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-close:hover, .rmcc-card-secondary.rmcc-card-body .rmcc-close:hover, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-close:hover, .rmcc-overlay-primary .rmcc-close:hover, .rmcc-offcanvas-bar .rmcc-close:hover {
  color: rgba(255, 255, 255, 0.7);
}
.rmcc-light .rmcc-column-divider, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-column-divider, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-column-divider, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-column-divider, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-column-divider, .rmcc-card-primary.rmcc-card-body .rmcc-column-divider, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-column-divider, .rmcc-card-secondary.rmcc-card-body .rmcc-column-divider, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-column-divider, .rmcc-overlay-primary .rmcc-column-divider, .rmcc-offcanvas-bar .rmcc-column-divider {
  column-rule-color: rgba(255, 255, 255, 0.2);
}
.rmcc-light .rmcc-divider-icon, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-divider-icon, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-divider-icon, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-divider-icon, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-divider-icon, .rmcc-card-primary.rmcc-card-body .rmcc-divider-icon, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-divider-icon, .rmcc-card-secondary.rmcc-card-body .rmcc-divider-icon, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-divider-icon, .rmcc-overlay-primary .rmcc-divider-icon, .rmcc-offcanvas-bar .rmcc-divider-icon {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Ccircle%20fill%3D%22none%22%20stroke%3D%22rgba(255, 255, 255, 0.2)%22%20stroke-width%3D%222%22%20cx%3D%2210%22%20cy%3D%2210%22%20r%3D%227%22%20%2F%3E%0A%3C%2Fsvg%3E%0A");
}
.rmcc-light .rmcc-divider-icon::before, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-divider-icon::before, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-divider-icon::before, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-divider-icon::before, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-divider-icon::before, .rmcc-card-primary.rmcc-card-body .rmcc-divider-icon::before, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-divider-icon::before, .rmcc-card-secondary.rmcc-card-body .rmcc-divider-icon::before, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-divider-icon::before, .rmcc-overlay-primary .rmcc-divider-icon::before, .rmcc-offcanvas-bar .rmcc-divider-icon::before,
.rmcc-light .rmcc-divider-icon::after,
.rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-divider-icon::after,
.rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-divider-icon::after,
.rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-divider-icon::after,
.rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-divider-icon::after,
.rmcc-card-primary.rmcc-card-body .rmcc-divider-icon::after,
.rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-divider-icon::after,
.rmcc-card-secondary.rmcc-card-body .rmcc-divider-icon::after,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-divider-icon::after,
.rmcc-overlay-primary .rmcc-divider-icon::after,
.rmcc-offcanvas-bar .rmcc-divider-icon::after {
  border-bottom-color: rgba(255, 255, 255, 0.2);
}
.rmcc-light .rmcc-divider-small::after, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-divider-small::after, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-divider-small::after, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-divider-small::after, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-divider-small::after, .rmcc-card-primary.rmcc-card-body .rmcc-divider-small::after, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-divider-small::after, .rmcc-card-secondary.rmcc-card-body .rmcc-divider-small::after, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-divider-small::after, .rmcc-overlay-primary .rmcc-divider-small::after, .rmcc-offcanvas-bar .rmcc-divider-small::after {
  border-top-color: rgba(255, 255, 255, 0.2);
}
.rmcc-light .rmcc-divider-vertical, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-divider-vertical, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-divider-vertical, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-divider-vertical, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-divider-vertical, .rmcc-card-primary.rmcc-card-body .rmcc-divider-vertical, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-divider-vertical, .rmcc-card-secondary.rmcc-card-body .rmcc-divider-vertical, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-divider-vertical, .rmcc-overlay-primary .rmcc-divider-vertical, .rmcc-offcanvas-bar .rmcc-divider-vertical {
  border-left-color: rgba(255, 255, 255, 0.2);
}
.rmcc-light .rmcc-dotnav > * > *, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-dotnav > * > *, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-dotnav > * > *, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-dotnav > * > *, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-dotnav > * > *, .rmcc-card-primary.rmcc-card-body .rmcc-dotnav > * > *, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-dotnav > * > *, .rmcc-card-secondary.rmcc-card-body .rmcc-dotnav > * > *, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-dotnav > * > *, .rmcc-overlay-primary .rmcc-dotnav > * > *, .rmcc-offcanvas-bar .rmcc-dotnav > * > * {
  background-color: transparent;
  border-color: rgba(255, 255, 255, 0.9);
}
.rmcc-light .rmcc-dotnav > * > :hover, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-dotnav > * > :hover, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-dotnav > * > :hover, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-dotnav > * > :hover, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-dotnav > * > :hover, .rmcc-card-primary.rmcc-card-body .rmcc-dotnav > * > :hover, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-dotnav > * > :hover, .rmcc-card-secondary.rmcc-card-body .rmcc-dotnav > * > :hover, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-dotnav > * > :hover, .rmcc-overlay-primary .rmcc-dotnav > * > :hover, .rmcc-offcanvas-bar .rmcc-dotnav > * > :hover {
  background-color: rgba(255, 255, 255, 0.9);
  border-color: transparent;
}
.rmcc-light .rmcc-dotnav > * > :active, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-dotnav > * > :active, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-dotnav > * > :active, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-dotnav > * > :active, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-dotnav > * > :active, .rmcc-card-primary.rmcc-card-body .rmcc-dotnav > * > :active, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-dotnav > * > :active, .rmcc-card-secondary.rmcc-card-body .rmcc-dotnav > * > :active, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-dotnav > * > :active, .rmcc-overlay-primary .rmcc-dotnav > * > :active, .rmcc-offcanvas-bar .rmcc-dotnav > * > :active {
  background-color: rgba(255, 255, 255, 0.5);
  border-color: transparent;
}
.rmcc-light .rmcc-dotnav > .rmcc-active > *, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-dotnav > .rmcc-active > *, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-dotnav > .rmcc-active > *, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-dotnav > .rmcc-active > *, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-dotnav > .rmcc-active > *, .rmcc-card-primary.rmcc-card-body .rmcc-dotnav > .rmcc-active > *, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-dotnav > .rmcc-active > *, .rmcc-card-secondary.rmcc-card-body .rmcc-dotnav > .rmcc-active > *, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-dotnav > .rmcc-active > *, .rmcc-overlay-primary .rmcc-dotnav > .rmcc-active > *, .rmcc-offcanvas-bar .rmcc-dotnav > .rmcc-active > * {
  background-color: rgba(255, 255, 255, 0.9);
  border-color: transparent;
}
.rmcc-light .rmcc-range::-webkit-slider-runnable-track, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-range::-webkit-slider-runnable-track, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-range::-webkit-slider-runnable-track, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-range::-webkit-slider-runnable-track, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-range::-webkit-slider-runnable-track, .rmcc-card-primary.rmcc-card-body .rmcc-range::-webkit-slider-runnable-track, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-range::-webkit-slider-runnable-track, .rmcc-card-secondary.rmcc-card-body .rmcc-range::-webkit-slider-runnable-track, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-range::-webkit-slider-runnable-track, .rmcc-overlay-primary .rmcc-range::-webkit-slider-runnable-track, .rmcc-offcanvas-bar .rmcc-range::-webkit-slider-runnable-track {
  background: rgba(242.25, 242.25, 242.25, 0.1);
}
.rmcc-light .rmcc-range:focus::-webkit-slider-runnable-track, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-range:focus::-webkit-slider-runnable-track, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-range:focus::-webkit-slider-runnable-track, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-range:focus::-webkit-slider-runnable-track, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-range:focus::-webkit-slider-runnable-track, .rmcc-card-primary.rmcc-card-body .rmcc-range:focus::-webkit-slider-runnable-track, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-range:focus::-webkit-slider-runnable-track, .rmcc-card-secondary.rmcc-card-body .rmcc-range:focus::-webkit-slider-runnable-track, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-range:focus::-webkit-slider-runnable-track, .rmcc-overlay-primary .rmcc-range:focus::-webkit-slider-runnable-track, .rmcc-offcanvas-bar .rmcc-range:focus::-webkit-slider-runnable-track,
.rmcc-light .rmcc-range:active::-webkit-slider-runnable-track,
.rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-range:active::-webkit-slider-runnable-track,
.rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-range:active::-webkit-slider-runnable-track,
.rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-range:active::-webkit-slider-runnable-track,
.rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-range:active::-webkit-slider-runnable-track,
.rmcc-card-primary.rmcc-card-body .rmcc-range:active::-webkit-slider-runnable-track,
.rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-range:active::-webkit-slider-runnable-track,
.rmcc-card-secondary.rmcc-card-body .rmcc-range:active::-webkit-slider-runnable-track,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-range:active::-webkit-slider-runnable-track,
.rmcc-overlay-primary .rmcc-range:active::-webkit-slider-runnable-track,
.rmcc-offcanvas-bar .rmcc-range:active::-webkit-slider-runnable-track {
  background: rgba(242.25, 242.25, 242.25, 0.15);
}
.rmcc-light .rmcc-range::-moz-range-track, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-range::-moz-range-track, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-range::-moz-range-track, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-range::-moz-range-track, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-range::-moz-range-track, .rmcc-card-primary.rmcc-card-body .rmcc-range::-moz-range-track, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-range::-moz-range-track, .rmcc-card-secondary.rmcc-card-body .rmcc-range::-moz-range-track, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-range::-moz-range-track, .rmcc-overlay-primary .rmcc-range::-moz-range-track, .rmcc-offcanvas-bar .rmcc-range::-moz-range-track {
  background: rgba(242.25, 242.25, 242.25, 0.1);
}
.rmcc-light .rmcc-range:focus::-moz-range-track, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-range:focus::-moz-range-track, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-range:focus::-moz-range-track, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-range:focus::-moz-range-track, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-range:focus::-moz-range-track, .rmcc-card-primary.rmcc-card-body .rmcc-range:focus::-moz-range-track, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-range:focus::-moz-range-track, .rmcc-card-secondary.rmcc-card-body .rmcc-range:focus::-moz-range-track, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-range:focus::-moz-range-track, .rmcc-overlay-primary .rmcc-range:focus::-moz-range-track, .rmcc-offcanvas-bar .rmcc-range:focus::-moz-range-track {
  background: rgba(242.25, 242.25, 242.25, 0.15);
}
.rmcc-light .rmcc-range::-webkit-slider-thumb, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-range::-webkit-slider-thumb, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-range::-webkit-slider-thumb, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-range::-webkit-slider-thumb, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-range::-webkit-slider-thumb, .rmcc-card-primary.rmcc-card-body .rmcc-range::-webkit-slider-thumb, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-range::-webkit-slider-thumb, .rmcc-card-secondary.rmcc-card-body .rmcc-range::-webkit-slider-thumb, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-range::-webkit-slider-thumb, .rmcc-overlay-primary .rmcc-range::-webkit-slider-thumb, .rmcc-offcanvas-bar .rmcc-range::-webkit-slider-thumb {
  background: rgb(127.5, 127.5, 127.5);
  border-color: rgb(229.5, 229.5, 229.5);
}
.rmcc-light .rmcc-range::-moz-range-thumb, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-range::-moz-range-thumb, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-range::-moz-range-thumb, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-range::-moz-range-thumb, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-range::-moz-range-thumb, .rmcc-card-primary.rmcc-card-body .rmcc-range::-moz-range-thumb, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-range::-moz-range-thumb, .rmcc-card-secondary.rmcc-card-body .rmcc-range::-moz-range-thumb, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-range::-moz-range-thumb, .rmcc-overlay-primary .rmcc-range::-moz-range-thumb, .rmcc-offcanvas-bar .rmcc-range::-moz-range-thumb {
  background: rgb(127.5, 127.5, 127.5);
  border-color: rgb(229.5, 229.5, 229.5);
}
.rmcc-light .rmcc-input, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-input, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-input, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-input, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-input, .rmcc-card-primary.rmcc-card-body .rmcc-input, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-input, .rmcc-card-secondary.rmcc-card-body .rmcc-input, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-input, .rmcc-overlay-primary .rmcc-input, .rmcc-offcanvas-bar .rmcc-input,
.rmcc-light .rmcc-select,
.rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-select,
.rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-select,
.rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-select,
.rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-select,
.rmcc-card-primary.rmcc-card-body .rmcc-select,
.rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-select,
.rmcc-card-secondary.rmcc-card-body .rmcc-select,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-select,
.rmcc-overlay-primary .rmcc-select,
.rmcc-offcanvas-bar .rmcc-select,
.rmcc-light .rmcc-textarea,
.rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-textarea,
.rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-textarea,
.rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-textarea,
.rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-textarea,
.rmcc-card-primary.rmcc-card-body .rmcc-textarea,
.rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-textarea,
.rmcc-card-secondary.rmcc-card-body .rmcc-textarea,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-textarea,
.rmcc-overlay-primary .rmcc-textarea,
.rmcc-offcanvas-bar .rmcc-textarea {
  background-color: rgba(255, 255, 255, 0.1);
  color: rgba(255, 255, 255, 0.7);
  background-clip: padding-box;
  border-color: rgba(255, 255, 255, 0.2);
}
.rmcc-light .rmcc-input:focus, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-input:focus, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-input:focus, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-input:focus, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-input:focus, .rmcc-card-primary.rmcc-card-body .rmcc-input:focus, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-input:focus, .rmcc-card-secondary.rmcc-card-body .rmcc-input:focus, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-input:focus, .rmcc-overlay-primary .rmcc-input:focus, .rmcc-offcanvas-bar .rmcc-input:focus,
.rmcc-light .rmcc-select:focus,
.rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-select:focus,
.rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-select:focus,
.rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-select:focus,
.rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-select:focus,
.rmcc-card-primary.rmcc-card-body .rmcc-select:focus,
.rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-select:focus,
.rmcc-card-secondary.rmcc-card-body .rmcc-select:focus,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-select:focus,
.rmcc-overlay-primary .rmcc-select:focus,
.rmcc-offcanvas-bar .rmcc-select:focus,
.rmcc-light .rmcc-textarea:focus,
.rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-textarea:focus,
.rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-textarea:focus,
.rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-textarea:focus,
.rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-textarea:focus,
.rmcc-card-primary.rmcc-card-body .rmcc-textarea:focus,
.rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-textarea:focus,
.rmcc-card-secondary.rmcc-card-body .rmcc-textarea:focus,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-textarea:focus,
.rmcc-overlay-primary .rmcc-textarea:focus,
.rmcc-offcanvas-bar .rmcc-textarea:focus {
  background-color: rgba(255, 255, 255, 0.15);
  color: rgba(255, 255, 255, 0.7);
  border-color: rgba(255, 255, 255, 0.7);
}
.rmcc-light .rmcc-input::placeholder, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-input::placeholder, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-input::placeholder, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-input::placeholder, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-input::placeholder, .rmcc-card-primary.rmcc-card-body .rmcc-input::placeholder, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-input::placeholder, .rmcc-card-secondary.rmcc-card-body .rmcc-input::placeholder, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-input::placeholder, .rmcc-overlay-primary .rmcc-input::placeholder, .rmcc-offcanvas-bar .rmcc-input::placeholder {
  color: rgba(255, 255, 255, 0.5);
}
.rmcc-light .rmcc-textarea::placeholder, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-textarea::placeholder, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-textarea::placeholder, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-textarea::placeholder, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-textarea::placeholder, .rmcc-card-primary.rmcc-card-body .rmcc-textarea::placeholder, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-textarea::placeholder, .rmcc-card-secondary.rmcc-card-body .rmcc-textarea::placeholder, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-textarea::placeholder, .rmcc-overlay-primary .rmcc-textarea::placeholder, .rmcc-offcanvas-bar .rmcc-textarea::placeholder {
  color: rgba(255, 255, 255, 0.5);
}
.rmcc-light .rmcc-select:not([multiple]):not([size]), .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-select:not([multiple]):not([size]), .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-select:not([multiple]):not([size]), .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-select:not([multiple]):not([size]), .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-select:not([multiple]):not([size]), .rmcc-card-primary.rmcc-card-body .rmcc-select:not([multiple]):not([size]), .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-select:not([multiple]):not([size]), .rmcc-card-secondary.rmcc-card-body .rmcc-select:not([multiple]):not([size]), .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-select:not([multiple]):not([size]), .rmcc-overlay-primary .rmcc-select:not([multiple]):not([size]), .rmcc-offcanvas-bar .rmcc-select:not([multiple]):not([size]) {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2224%22%20height%3D%2216%22%20viewBox%3D%220%200%2024%2016%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Cpolygon%20fill%3D%22rgba(255, 255, 255, 0.7)%22%20points%3D%2212%201%209%206%2015%206%22%20%2F%3E%0A%20%20%20%20%3Cpolygon%20fill%3D%22rgba(255, 255, 255, 0.7)%22%20points%3D%2212%2013%209%208%2015%208%22%20%2F%3E%0A%3C%2Fsvg%3E%0A");
}
.rmcc-light .rmcc-input[list]:hover, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-input[list]:hover, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-input[list]:hover, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-input[list]:hover, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-input[list]:hover, .rmcc-card-primary.rmcc-card-body .rmcc-input[list]:hover, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-input[list]:hover, .rmcc-card-secondary.rmcc-card-body .rmcc-input[list]:hover, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-input[list]:hover, .rmcc-overlay-primary .rmcc-input[list]:hover, .rmcc-offcanvas-bar .rmcc-input[list]:hover,
.rmcc-light .rmcc-input[list]:focus,
.rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-input[list]:focus,
.rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-input[list]:focus,
.rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-input[list]:focus,
.rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-input[list]:focus,
.rmcc-card-primary.rmcc-card-body .rmcc-input[list]:focus,
.rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-input[list]:focus,
.rmcc-card-secondary.rmcc-card-body .rmcc-input[list]:focus,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-input[list]:focus,
.rmcc-overlay-primary .rmcc-input[list]:focus,
.rmcc-offcanvas-bar .rmcc-input[list]:focus {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2224%22%20height%3D%2216%22%20viewBox%3D%220%200%2024%2016%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Cpolygon%20fill%3D%22rgba(255, 255, 255, 0.7)%22%20points%3D%2212%2012%208%206%2016%206%22%20%2F%3E%0A%3C%2Fsvg%3E%0A");
}
.rmcc-light .rmcc-radio, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-radio, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-radio, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-radio, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-radio, .rmcc-card-primary.rmcc-card-body .rmcc-radio, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-radio, .rmcc-card-secondary.rmcc-card-body .rmcc-radio, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-radio, .rmcc-overlay-primary .rmcc-radio, .rmcc-offcanvas-bar .rmcc-radio,
.rmcc-light .rmcc-checkbox,
.rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-checkbox,
.rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-checkbox,
.rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-checkbox,
.rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-checkbox,
.rmcc-card-primary.rmcc-card-body .rmcc-checkbox,
.rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-checkbox,
.rmcc-card-secondary.rmcc-card-body .rmcc-checkbox,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-checkbox,
.rmcc-overlay-primary .rmcc-checkbox,
.rmcc-offcanvas-bar .rmcc-checkbox {
  background-color: rgba(255, 255, 255, 0.1);
  border-color: rgba(255, 255, 255, 0.2);
}
.rmcc-light .rmcc-radio:focus, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-radio:focus, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-radio:focus, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-radio:focus, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-radio:focus, .rmcc-card-primary.rmcc-card-body .rmcc-radio:focus, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-radio:focus, .rmcc-card-secondary.rmcc-card-body .rmcc-radio:focus, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-radio:focus, .rmcc-overlay-primary .rmcc-radio:focus, .rmcc-offcanvas-bar .rmcc-radio:focus,
.rmcc-light .rmcc-checkbox:focus,
.rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-checkbox:focus,
.rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-checkbox:focus,
.rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-checkbox:focus,
.rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-checkbox:focus,
.rmcc-card-primary.rmcc-card-body .rmcc-checkbox:focus,
.rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-checkbox:focus,
.rmcc-card-secondary.rmcc-card-body .rmcc-checkbox:focus,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-checkbox:focus,
.rmcc-overlay-primary .rmcc-checkbox:focus,
.rmcc-offcanvas-bar .rmcc-checkbox:focus {
  background-color: rgba(255, 255, 255, 0.15);
  border-color: rgba(255, 255, 255, 0.7);
}
.rmcc-light .rmcc-radio:checked, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-radio:checked, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-radio:checked, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-radio:checked, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-radio:checked, .rmcc-card-primary.rmcc-card-body .rmcc-radio:checked, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-radio:checked, .rmcc-card-secondary.rmcc-card-body .rmcc-radio:checked, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-radio:checked, .rmcc-overlay-primary .rmcc-radio:checked, .rmcc-offcanvas-bar .rmcc-radio:checked,
.rmcc-light .rmcc-checkbox:checked,
.rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-checkbox:checked,
.rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-checkbox:checked,
.rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-checkbox:checked,
.rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-checkbox:checked,
.rmcc-card-primary.rmcc-card-body .rmcc-checkbox:checked,
.rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-checkbox:checked,
.rmcc-card-secondary.rmcc-card-body .rmcc-checkbox:checked,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-checkbox:checked,
.rmcc-overlay-primary .rmcc-checkbox:checked,
.rmcc-offcanvas-bar .rmcc-checkbox:checked,
.rmcc-light .rmcc-checkbox:indeterminate,
.rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-checkbox:indeterminate,
.rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-checkbox:indeterminate,
.rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-checkbox:indeterminate,
.rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-checkbox:indeterminate,
.rmcc-card-primary.rmcc-card-body .rmcc-checkbox:indeterminate,
.rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-checkbox:indeterminate,
.rmcc-card-secondary.rmcc-card-body .rmcc-checkbox:indeterminate,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-checkbox:indeterminate,
.rmcc-overlay-primary .rmcc-checkbox:indeterminate,
.rmcc-offcanvas-bar .rmcc-checkbox:indeterminate {
  background-color: #fff;
  border-color: #fff;
}
.rmcc-light .rmcc-radio:checked:focus, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-radio:checked:focus, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-radio:checked:focus, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-radio:checked:focus, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-radio:checked:focus, .rmcc-card-primary.rmcc-card-body .rmcc-radio:checked:focus, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-radio:checked:focus, .rmcc-card-secondary.rmcc-card-body .rmcc-radio:checked:focus, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-radio:checked:focus, .rmcc-overlay-primary .rmcc-radio:checked:focus, .rmcc-offcanvas-bar .rmcc-radio:checked:focus,
.rmcc-light .rmcc-checkbox:checked:focus,
.rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-checkbox:checked:focus,
.rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-checkbox:checked:focus,
.rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-checkbox:checked:focus,
.rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-checkbox:checked:focus,
.rmcc-card-primary.rmcc-card-body .rmcc-checkbox:checked:focus,
.rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-checkbox:checked:focus,
.rmcc-card-secondary.rmcc-card-body .rmcc-checkbox:checked:focus,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-checkbox:checked:focus,
.rmcc-overlay-primary .rmcc-checkbox:checked:focus,
.rmcc-offcanvas-bar .rmcc-checkbox:checked:focus,
.rmcc-light .rmcc-checkbox:indeterminate:focus,
.rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-checkbox:indeterminate:focus,
.rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-checkbox:indeterminate:focus,
.rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-checkbox:indeterminate:focus,
.rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-checkbox:indeterminate:focus,
.rmcc-card-primary.rmcc-card-body .rmcc-checkbox:indeterminate:focus,
.rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-checkbox:indeterminate:focus,
.rmcc-card-secondary.rmcc-card-body .rmcc-checkbox:indeterminate:focus,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-checkbox:indeterminate:focus,
.rmcc-overlay-primary .rmcc-checkbox:indeterminate:focus,
.rmcc-offcanvas-bar .rmcc-checkbox:indeterminate:focus {
  background-color: white;
}
.rmcc-light .rmcc-radio:checked, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-radio:checked, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-radio:checked, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-radio:checked, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-radio:checked, .rmcc-card-primary.rmcc-card-body .rmcc-radio:checked, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-radio:checked, .rmcc-card-secondary.rmcc-card-body .rmcc-radio:checked, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-radio:checked, .rmcc-overlay-primary .rmcc-radio:checked, .rmcc-offcanvas-bar .rmcc-radio:checked {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2216%22%20height%3D%2216%22%20viewBox%3D%220%200%2016%2016%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Ccircle%20fill%3D%22%23666%22%20cx%3D%228%22%20cy%3D%228%22%20r%3D%222%22%20%2F%3E%0A%3C%2Fsvg%3E");
}
.rmcc-light .rmcc-checkbox:checked, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-checkbox:checked, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-checkbox:checked, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-checkbox:checked, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-checkbox:checked, .rmcc-card-primary.rmcc-card-body .rmcc-checkbox:checked, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-checkbox:checked, .rmcc-card-secondary.rmcc-card-body .rmcc-checkbox:checked, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-checkbox:checked, .rmcc-overlay-primary .rmcc-checkbox:checked, .rmcc-offcanvas-bar .rmcc-checkbox:checked {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2214%22%20height%3D%2211%22%20viewBox%3D%220%200%2014%2011%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Cpolygon%20fill%3D%22%23666%22%20points%3D%2212%201%205%207.5%202%205%201%205.5%205%2010%2013%201.5%22%20%2F%3E%0A%3C%2Fsvg%3E%0A");
}
.rmcc-light .rmcc-checkbox:indeterminate, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-checkbox:indeterminate, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-checkbox:indeterminate, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-checkbox:indeterminate, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-checkbox:indeterminate, .rmcc-card-primary.rmcc-card-body .rmcc-checkbox:indeterminate, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-checkbox:indeterminate, .rmcc-card-secondary.rmcc-card-body .rmcc-checkbox:indeterminate, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-checkbox:indeterminate, .rmcc-overlay-primary .rmcc-checkbox:indeterminate, .rmcc-offcanvas-bar .rmcc-checkbox:indeterminate {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2216%22%20height%3D%2216%22%20viewBox%3D%220%200%2016%2016%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Crect%20fill%3D%22%23666%22%20x%3D%223%22%20y%3D%228%22%20width%3D%2210%22%20height%3D%221%22%20%2F%3E%0A%3C%2Fsvg%3E");
}
.rmcc-light .rmcc-form-label, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-form-label, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-form-label, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-form-label, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-form-label, .rmcc-card-primary.rmcc-card-body .rmcc-form-label, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-form-label, .rmcc-card-secondary.rmcc-card-body .rmcc-form-label, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-form-label, .rmcc-overlay-primary .rmcc-form-label, .rmcc-offcanvas-bar .rmcc-form-label {
  color: #fff;
}
.rmcc-light .rmcc-form-icon, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-form-icon, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-form-icon, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-form-icon, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-form-icon, .rmcc-card-primary.rmcc-card-body .rmcc-form-icon, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-form-icon, .rmcc-card-secondary.rmcc-card-body .rmcc-form-icon, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-form-icon, .rmcc-overlay-primary .rmcc-form-icon, .rmcc-offcanvas-bar .rmcc-form-icon {
  color: rgba(255, 255, 255, 0.5);
}
.rmcc-light .rmcc-form-icon:hover, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-form-icon:hover, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-form-icon:hover, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-form-icon:hover, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-form-icon:hover, .rmcc-card-primary.rmcc-card-body .rmcc-form-icon:hover, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-form-icon:hover, .rmcc-card-secondary.rmcc-card-body .rmcc-form-icon:hover, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-form-icon:hover, .rmcc-overlay-primary .rmcc-form-icon:hover, .rmcc-offcanvas-bar .rmcc-form-icon:hover {
  color: rgba(255, 255, 255, 0.7);
}
.rmcc-light .rmcc-grid-divider > :not(.rmcc-first-column)::before, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-grid-divider > :not(.rmcc-first-column)::before, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-grid-divider > :not(.rmcc-first-column)::before, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-grid-divider > :not(.rmcc-first-column)::before, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-grid-divider > :not(.rmcc-first-column)::before, .rmcc-card-primary.rmcc-card-body .rmcc-grid-divider > :not(.rmcc-first-column)::before, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-grid-divider > :not(.rmcc-first-column)::before, .rmcc-card-secondary.rmcc-card-body .rmcc-grid-divider > :not(.rmcc-first-column)::before, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-grid-divider > :not(.rmcc-first-column)::before, .rmcc-overlay-primary .rmcc-grid-divider > :not(.rmcc-first-column)::before, .rmcc-offcanvas-bar .rmcc-grid-divider > :not(.rmcc-first-column)::before {
  border-left-color: rgba(255, 255, 255, 0.2);
}
.rmcc-light .rmcc-grid-divider.rmcc-grid-stack > .rmcc-grid-margin::before, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-grid-divider.rmcc-grid-stack > .rmcc-grid-margin::before, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-grid-divider.rmcc-grid-stack > .rmcc-grid-margin::before, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-grid-divider.rmcc-grid-stack > .rmcc-grid-margin::before, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-grid-divider.rmcc-grid-stack > .rmcc-grid-margin::before, .rmcc-card-primary.rmcc-card-body .rmcc-grid-divider.rmcc-grid-stack > .rmcc-grid-margin::before, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-grid-divider.rmcc-grid-stack > .rmcc-grid-margin::before, .rmcc-card-secondary.rmcc-card-body .rmcc-grid-divider.rmcc-grid-stack > .rmcc-grid-margin::before, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-grid-divider.rmcc-grid-stack > .rmcc-grid-margin::before, .rmcc-overlay-primary .rmcc-grid-divider.rmcc-grid-stack > .rmcc-grid-margin::before, .rmcc-offcanvas-bar .rmcc-grid-divider.rmcc-grid-stack > .rmcc-grid-margin::before {
  border-top-color: rgba(255, 255, 255, 0.2);
}
.rmcc-light .rmcc-heading-divider, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-heading-divider, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-heading-divider, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-heading-divider, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-heading-divider, .rmcc-card-primary.rmcc-card-body .rmcc-heading-divider, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-heading-divider, .rmcc-card-secondary.rmcc-card-body .rmcc-heading-divider, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-heading-divider, .rmcc-overlay-primary .rmcc-heading-divider, .rmcc-offcanvas-bar .rmcc-heading-divider {
  border-bottom-color: rgba(255, 255, 255, 0.2);
}
.rmcc-light .rmcc-heading-bullet::before, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-heading-bullet::before, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-heading-bullet::before, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-heading-bullet::before, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-heading-bullet::before, .rmcc-card-primary.rmcc-card-body .rmcc-heading-bullet::before, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-heading-bullet::before, .rmcc-card-secondary.rmcc-card-body .rmcc-heading-bullet::before, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-heading-bullet::before, .rmcc-overlay-primary .rmcc-heading-bullet::before, .rmcc-offcanvas-bar .rmcc-heading-bullet::before {
  border-left-color: rgba(255, 255, 255, 0.2);
}
.rmcc-light .rmcc-heading-line > ::before, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-heading-line > ::before, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-heading-line > ::before, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-heading-line > ::before, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-heading-line > ::before, .rmcc-card-primary.rmcc-card-body .rmcc-heading-line > ::before, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-heading-line > ::before, .rmcc-card-secondary.rmcc-card-body .rmcc-heading-line > ::before, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-heading-line > ::before, .rmcc-overlay-primary .rmcc-heading-line > ::before, .rmcc-offcanvas-bar .rmcc-heading-line > ::before,
.rmcc-light .rmcc-heading-line > ::after,
.rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-heading-line > ::after,
.rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-heading-line > ::after,
.rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-heading-line > ::after,
.rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-heading-line > ::after,
.rmcc-card-primary.rmcc-card-body .rmcc-heading-line > ::after,
.rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-heading-line > ::after,
.rmcc-card-secondary.rmcc-card-body .rmcc-heading-line > ::after,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-heading-line > ::after,
.rmcc-overlay-primary .rmcc-heading-line > ::after,
.rmcc-offcanvas-bar .rmcc-heading-line > ::after {
  border-bottom-color: rgba(255, 255, 255, 0.2);
}
.rmcc-light .rmcc-icon-link, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-icon-link, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-icon-link, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-icon-link, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-icon-link, .rmcc-card-primary.rmcc-card-body .rmcc-icon-link, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-icon-link, .rmcc-card-secondary.rmcc-card-body .rmcc-icon-link, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-icon-link, .rmcc-overlay-primary .rmcc-icon-link, .rmcc-offcanvas-bar .rmcc-icon-link {
  color: rgba(255, 255, 255, 0.5);
}
.rmcc-light .rmcc-icon-link:hover, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-icon-link:hover, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-icon-link:hover, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-icon-link:hover, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-icon-link:hover, .rmcc-card-primary.rmcc-card-body .rmcc-icon-link:hover, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-icon-link:hover, .rmcc-card-secondary.rmcc-card-body .rmcc-icon-link:hover, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-icon-link:hover, .rmcc-overlay-primary .rmcc-icon-link:hover, .rmcc-offcanvas-bar .rmcc-icon-link:hover {
  color: rgba(255, 255, 255, 0.7);
}
.rmcc-light .rmcc-icon-link:active, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-icon-link:active, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-icon-link:active, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-icon-link:active, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-icon-link:active, .rmcc-card-primary.rmcc-card-body .rmcc-icon-link:active, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-icon-link:active, .rmcc-card-secondary.rmcc-card-body .rmcc-icon-link:active, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-icon-link:active, .rmcc-overlay-primary .rmcc-icon-link:active, .rmcc-offcanvas-bar .rmcc-icon-link:active,
.rmcc-light .rmcc-active > .rmcc-icon-link,
.rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-active > .rmcc-icon-link,
.rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-active > .rmcc-icon-link,
.rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-active > .rmcc-icon-link,
.rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-active > .rmcc-icon-link,
.rmcc-card-primary.rmcc-card-body .rmcc-active > .rmcc-icon-link,
.rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-active > .rmcc-icon-link,
.rmcc-card-secondary.rmcc-card-body .rmcc-active > .rmcc-icon-link,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-active > .rmcc-icon-link,
.rmcc-overlay-primary .rmcc-active > .rmcc-icon-link,
.rmcc-offcanvas-bar .rmcc-active > .rmcc-icon-link {
  color: rgba(255, 255, 255, 0.7);
}
.rmcc-light .rmcc-icon-button, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-icon-button, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-icon-button, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-icon-button, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-icon-button, .rmcc-card-primary.rmcc-card-body .rmcc-icon-button, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-icon-button, .rmcc-card-secondary.rmcc-card-body .rmcc-icon-button, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-icon-button, .rmcc-overlay-primary .rmcc-icon-button, .rmcc-offcanvas-bar .rmcc-icon-button {
  background-color: rgba(255, 255, 255, 0.1);
  color: rgba(255, 255, 255, 0.5);
}
.rmcc-light .rmcc-icon-button:hover, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-icon-button:hover, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-icon-button:hover, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-icon-button:hover, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-icon-button:hover, .rmcc-card-primary.rmcc-card-body .rmcc-icon-button:hover, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-icon-button:hover, .rmcc-card-secondary.rmcc-card-body .rmcc-icon-button:hover, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-icon-button:hover, .rmcc-overlay-primary .rmcc-icon-button:hover, .rmcc-offcanvas-bar .rmcc-icon-button:hover {
  background-color: rgba(255, 255, 255, 0.15);
  color: rgba(255, 255, 255, 0.7);
}
.rmcc-light .rmcc-icon-button:active, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-icon-button:active, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-icon-button:active, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-icon-button:active, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-icon-button:active, .rmcc-card-primary.rmcc-card-body .rmcc-icon-button:active, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-icon-button:active, .rmcc-card-secondary.rmcc-card-body .rmcc-icon-button:active, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-icon-button:active, .rmcc-overlay-primary .rmcc-icon-button:active, .rmcc-offcanvas-bar .rmcc-icon-button:active {
  background-color: rgba(255, 255, 255, 0.2);
  color: rgba(255, 255, 255, 0.7);
}
.rmcc-light .rmcc-iconnav > * > a, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-iconnav > * > a, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-iconnav > * > a, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-iconnav > * > a, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-iconnav > * > a, .rmcc-card-primary.rmcc-card-body .rmcc-iconnav > * > a, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-iconnav > * > a, .rmcc-card-secondary.rmcc-card-body .rmcc-iconnav > * > a, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-iconnav > * > a, .rmcc-overlay-primary .rmcc-iconnav > * > a, .rmcc-offcanvas-bar .rmcc-iconnav > * > a {
  color: rgba(255, 255, 255, 0.5);
}
.rmcc-light .rmcc-iconnav > * > a:hover, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-iconnav > * > a:hover, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-iconnav > * > a:hover, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-iconnav > * > a:hover, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-iconnav > * > a:hover, .rmcc-card-primary.rmcc-card-body .rmcc-iconnav > * > a:hover, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-iconnav > * > a:hover, .rmcc-card-secondary.rmcc-card-body .rmcc-iconnav > * > a:hover, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-iconnav > * > a:hover, .rmcc-overlay-primary .rmcc-iconnav > * > a:hover, .rmcc-offcanvas-bar .rmcc-iconnav > * > a:hover {
  color: rgba(255, 255, 255, 0.7);
}
.rmcc-light .rmcc-iconnav > .rmcc-active > a, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-iconnav > .rmcc-active > a, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-iconnav > .rmcc-active > a, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-iconnav > .rmcc-active > a, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-iconnav > .rmcc-active > a, .rmcc-card-primary.rmcc-card-body .rmcc-iconnav > .rmcc-active > a, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-iconnav > .rmcc-active > a, .rmcc-card-secondary.rmcc-card-body .rmcc-iconnav > .rmcc-active > a, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-iconnav > .rmcc-active > a, .rmcc-overlay-primary .rmcc-iconnav > .rmcc-active > a, .rmcc-offcanvas-bar .rmcc-iconnav > .rmcc-active > a {
  color: rgba(255, 255, 255, 0.7);
}
.rmcc-light .rmcc-label, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-label, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-label, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-label, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-label, .rmcc-card-primary.rmcc-card-body .rmcc-label, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-label, .rmcc-card-secondary.rmcc-card-body .rmcc-label, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-label, .rmcc-overlay-primary .rmcc-label, .rmcc-offcanvas-bar .rmcc-label {
  background-color: #fff;
  color: #666;
}
.rmcc-light a.rmcc-link-muted, .rmcc-section-primary:not(.rmcc-preserve-color) a.rmcc-link-muted, .rmcc-section-secondary:not(.rmcc-preserve-color) a.rmcc-link-muted, .rmcc-tile-primary:not(.rmcc-preserve-color) a.rmcc-link-muted, .rmcc-tile-secondary:not(.rmcc-preserve-color) a.rmcc-link-muted, .rmcc-card-primary.rmcc-card-body a.rmcc-link-muted, .rmcc-card-primary > :not([class*=rmcc-card-media]) a.rmcc-link-muted, .rmcc-card-secondary.rmcc-card-body a.rmcc-link-muted, .rmcc-card-secondary > :not([class*=rmcc-card-media]) a.rmcc-link-muted, .rmcc-overlay-primary a.rmcc-link-muted, .rmcc-offcanvas-bar a.rmcc-link-muted,
.rmcc-light .rmcc-link-muted a,
.rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-link-muted a,
.rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-link-muted a,
.rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-link-muted a,
.rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-link-muted a,
.rmcc-card-primary.rmcc-card-body .rmcc-link-muted a,
.rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-link-muted a,
.rmcc-card-secondary.rmcc-card-body .rmcc-link-muted a,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-link-muted a,
.rmcc-overlay-primary .rmcc-link-muted a,
.rmcc-offcanvas-bar .rmcc-link-muted a {
  color: rgba(255, 255, 255, 0.5);
}
.rmcc-light a.rmcc-link-muted:hover, .rmcc-section-primary:not(.rmcc-preserve-color) a.rmcc-link-muted:hover, .rmcc-section-secondary:not(.rmcc-preserve-color) a.rmcc-link-muted:hover, .rmcc-tile-primary:not(.rmcc-preserve-color) a.rmcc-link-muted:hover, .rmcc-tile-secondary:not(.rmcc-preserve-color) a.rmcc-link-muted:hover, .rmcc-card-primary.rmcc-card-body a.rmcc-link-muted:hover, .rmcc-card-primary > :not([class*=rmcc-card-media]) a.rmcc-link-muted:hover, .rmcc-card-secondary.rmcc-card-body a.rmcc-link-muted:hover, .rmcc-card-secondary > :not([class*=rmcc-card-media]) a.rmcc-link-muted:hover, .rmcc-overlay-primary a.rmcc-link-muted:hover, .rmcc-offcanvas-bar a.rmcc-link-muted:hover,
.rmcc-light .rmcc-link-muted a:hover,
.rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-link-muted a:hover,
.rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-link-muted a:hover,
.rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-link-muted a:hover,
.rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-link-muted a:hover,
.rmcc-card-primary.rmcc-card-body .rmcc-link-muted a:hover,
.rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-link-muted a:hover,
.rmcc-card-secondary.rmcc-card-body .rmcc-link-muted a:hover,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-link-muted a:hover,
.rmcc-overlay-primary .rmcc-link-muted a:hover,
.rmcc-offcanvas-bar .rmcc-link-muted a:hover,
.rmcc-light .rmcc-link-toggle:hover .rmcc-link-muted,
.rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-link-toggle:hover .rmcc-link-muted,
.rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-link-toggle:hover .rmcc-link-muted,
.rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-link-toggle:hover .rmcc-link-muted,
.rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-link-toggle:hover .rmcc-link-muted,
.rmcc-card-primary.rmcc-card-body .rmcc-link-toggle:hover .rmcc-link-muted,
.rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-link-toggle:hover .rmcc-link-muted,
.rmcc-card-secondary.rmcc-card-body .rmcc-link-toggle:hover .rmcc-link-muted,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-link-toggle:hover .rmcc-link-muted,
.rmcc-overlay-primary .rmcc-link-toggle:hover .rmcc-link-muted,
.rmcc-offcanvas-bar .rmcc-link-toggle:hover .rmcc-link-muted {
  color: rgba(255, 255, 255, 0.7);
}
.rmcc-light a.rmcc-link-text:hover, .rmcc-section-primary:not(.rmcc-preserve-color) a.rmcc-link-text:hover, .rmcc-section-secondary:not(.rmcc-preserve-color) a.rmcc-link-text:hover, .rmcc-tile-primary:not(.rmcc-preserve-color) a.rmcc-link-text:hover, .rmcc-tile-secondary:not(.rmcc-preserve-color) a.rmcc-link-text:hover, .rmcc-card-primary.rmcc-card-body a.rmcc-link-text:hover, .rmcc-card-primary > :not([class*=rmcc-card-media]) a.rmcc-link-text:hover, .rmcc-card-secondary.rmcc-card-body a.rmcc-link-text:hover, .rmcc-card-secondary > :not([class*=rmcc-card-media]) a.rmcc-link-text:hover, .rmcc-overlay-primary a.rmcc-link-text:hover, .rmcc-offcanvas-bar a.rmcc-link-text:hover,
.rmcc-light .rmcc-link-text a:hover,
.rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-link-text a:hover,
.rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-link-text a:hover,
.rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-link-text a:hover,
.rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-link-text a:hover,
.rmcc-card-primary.rmcc-card-body .rmcc-link-text a:hover,
.rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-link-text a:hover,
.rmcc-card-secondary.rmcc-card-body .rmcc-link-text a:hover,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-link-text a:hover,
.rmcc-overlay-primary .rmcc-link-text a:hover,
.rmcc-offcanvas-bar .rmcc-link-text a:hover,
.rmcc-light .rmcc-link-toggle:hover .rmcc-link-text,
.rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-link-toggle:hover .rmcc-link-text,
.rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-link-toggle:hover .rmcc-link-text,
.rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-link-toggle:hover .rmcc-link-text,
.rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-link-toggle:hover .rmcc-link-text,
.rmcc-card-primary.rmcc-card-body .rmcc-link-toggle:hover .rmcc-link-text,
.rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-link-toggle:hover .rmcc-link-text,
.rmcc-card-secondary.rmcc-card-body .rmcc-link-toggle:hover .rmcc-link-text,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-link-toggle:hover .rmcc-link-text,
.rmcc-overlay-primary .rmcc-link-toggle:hover .rmcc-link-text,
.rmcc-offcanvas-bar .rmcc-link-toggle:hover .rmcc-link-text {
  color: rgba(255, 255, 255, 0.5);
}
.rmcc-light a.rmcc-link-heading:hover, .rmcc-section-primary:not(.rmcc-preserve-color) a.rmcc-link-heading:hover, .rmcc-section-secondary:not(.rmcc-preserve-color) a.rmcc-link-heading:hover, .rmcc-tile-primary:not(.rmcc-preserve-color) a.rmcc-link-heading:hover, .rmcc-tile-secondary:not(.rmcc-preserve-color) a.rmcc-link-heading:hover, .rmcc-card-primary.rmcc-card-body a.rmcc-link-heading:hover, .rmcc-card-primary > :not([class*=rmcc-card-media]) a.rmcc-link-heading:hover, .rmcc-card-secondary.rmcc-card-body a.rmcc-link-heading:hover, .rmcc-card-secondary > :not([class*=rmcc-card-media]) a.rmcc-link-heading:hover, .rmcc-overlay-primary a.rmcc-link-heading:hover, .rmcc-offcanvas-bar a.rmcc-link-heading:hover,
.rmcc-light .rmcc-link-heading a:hover,
.rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-link-heading a:hover,
.rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-link-heading a:hover,
.rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-link-heading a:hover,
.rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-link-heading a:hover,
.rmcc-card-primary.rmcc-card-body .rmcc-link-heading a:hover,
.rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-link-heading a:hover,
.rmcc-card-secondary.rmcc-card-body .rmcc-link-heading a:hover,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-link-heading a:hover,
.rmcc-overlay-primary .rmcc-link-heading a:hover,
.rmcc-offcanvas-bar .rmcc-link-heading a:hover,
.rmcc-light .rmcc-link-toggle:hover .rmcc-link-heading,
.rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-link-toggle:hover .rmcc-link-heading,
.rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-link-toggle:hover .rmcc-link-heading,
.rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-link-toggle:hover .rmcc-link-heading,
.rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-link-toggle:hover .rmcc-link-heading,
.rmcc-card-primary.rmcc-card-body .rmcc-link-toggle:hover .rmcc-link-heading,
.rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-link-toggle:hover .rmcc-link-heading,
.rmcc-card-secondary.rmcc-card-body .rmcc-link-toggle:hover .rmcc-link-heading,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-link-toggle:hover .rmcc-link-heading,
.rmcc-overlay-primary .rmcc-link-toggle:hover .rmcc-link-heading,
.rmcc-offcanvas-bar .rmcc-link-toggle:hover .rmcc-link-heading {
  color: #fff;
}
.rmcc-light .rmcc-list-muted > ::marker, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-list-muted > ::marker, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-list-muted > ::marker, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-list-muted > ::marker, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-list-muted > ::marker, .rmcc-card-primary.rmcc-card-body .rmcc-list-muted > ::marker, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-list-muted > ::marker, .rmcc-card-secondary.rmcc-card-body .rmcc-list-muted > ::marker, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-list-muted > ::marker, .rmcc-overlay-primary .rmcc-list-muted > ::marker, .rmcc-offcanvas-bar .rmcc-list-muted > ::marker {
  color: rgba(255, 255, 255, 0.5) !important;
}
.rmcc-light .rmcc-list-emphasis > ::marker, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-list-emphasis > ::marker, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-list-emphasis > ::marker, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-list-emphasis > ::marker, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-list-emphasis > ::marker, .rmcc-card-primary.rmcc-card-body .rmcc-list-emphasis > ::marker, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-list-emphasis > ::marker, .rmcc-card-secondary.rmcc-card-body .rmcc-list-emphasis > ::marker, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-list-emphasis > ::marker, .rmcc-overlay-primary .rmcc-list-emphasis > ::marker, .rmcc-offcanvas-bar .rmcc-list-emphasis > ::marker {
  color: #fff !important;
}
.rmcc-light .rmcc-list-primary > ::marker, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-list-primary > ::marker, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-list-primary > ::marker, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-list-primary > ::marker, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-list-primary > ::marker, .rmcc-card-primary.rmcc-card-body .rmcc-list-primary > ::marker, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-list-primary > ::marker, .rmcc-card-secondary.rmcc-card-body .rmcc-list-primary > ::marker, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-list-primary > ::marker, .rmcc-overlay-primary .rmcc-list-primary > ::marker, .rmcc-offcanvas-bar .rmcc-list-primary > ::marker {
  color: #fff !important;
}
.rmcc-light .rmcc-list-secondary > ::marker, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-list-secondary > ::marker, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-list-secondary > ::marker, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-list-secondary > ::marker, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-list-secondary > ::marker, .rmcc-card-primary.rmcc-card-body .rmcc-list-secondary > ::marker, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-list-secondary > ::marker, .rmcc-card-secondary.rmcc-card-body .rmcc-list-secondary > ::marker, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-list-secondary > ::marker, .rmcc-overlay-primary .rmcc-list-secondary > ::marker, .rmcc-offcanvas-bar .rmcc-list-secondary > ::marker {
  color: #fff !important;
}
.rmcc-light .rmcc-list-bullet > ::before, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-list-bullet > ::before, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-list-bullet > ::before, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-list-bullet > ::before, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-list-bullet > ::before, .rmcc-card-primary.rmcc-card-body .rmcc-list-bullet > ::before, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-list-bullet > ::before, .rmcc-card-secondary.rmcc-card-body .rmcc-list-bullet > ::before, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-list-bullet > ::before, .rmcc-overlay-primary .rmcc-list-bullet > ::before, .rmcc-offcanvas-bar .rmcc-list-bullet > ::before {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%226%22%20height%3D%226%22%20viewBox%3D%220%200%206%206%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Ccircle%20fill%3D%22rgba(255, 255, 255, 0.7)%22%20cx%3D%223%22%20cy%3D%223%22%20r%3D%223%22%20%2F%3E%0A%3C%2Fsvg%3E");
}
.rmcc-light .rmcc-list-divider > :nth-child(n+2), .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-list-divider > :nth-child(n+2), .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-list-divider > :nth-child(n+2), .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-list-divider > :nth-child(n+2), .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-list-divider > :nth-child(n+2), .rmcc-card-primary.rmcc-card-body .rmcc-list-divider > :nth-child(n+2), .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-list-divider > :nth-child(n+2), .rmcc-card-secondary.rmcc-card-body .rmcc-list-divider > :nth-child(n+2), .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-list-divider > :nth-child(n+2), .rmcc-overlay-primary .rmcc-list-divider > :nth-child(n+2), .rmcc-offcanvas-bar .rmcc-list-divider > :nth-child(n+2) {
  border-top-color: rgba(255, 255, 255, 0.2);
}
.rmcc-light .rmcc-list-striped > *:nth-of-type(odd), .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-list-striped > *:nth-of-type(odd), .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-list-striped > *:nth-of-type(odd), .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-list-striped > *:nth-of-type(odd), .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-list-striped > *:nth-of-type(odd), .rmcc-card-primary.rmcc-card-body .rmcc-list-striped > *:nth-of-type(odd), .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-list-striped > *:nth-of-type(odd), .rmcc-card-secondary.rmcc-card-body .rmcc-list-striped > *:nth-of-type(odd), .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-list-striped > *:nth-of-type(odd), .rmcc-overlay-primary .rmcc-list-striped > *:nth-of-type(odd), .rmcc-offcanvas-bar .rmcc-list-striped > *:nth-of-type(odd) {
  border-top-color: rgba(255, 255, 255, 0.2);
  border-bottom-color: rgba(255, 255, 255, 0.2);
}
.rmcc-light .rmcc-list-striped > :nth-of-type(odd), .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-list-striped > :nth-of-type(odd), .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-list-striped > :nth-of-type(odd), .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-list-striped > :nth-of-type(odd), .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-list-striped > :nth-of-type(odd), .rmcc-card-primary.rmcc-card-body .rmcc-list-striped > :nth-of-type(odd), .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-list-striped > :nth-of-type(odd), .rmcc-card-secondary.rmcc-card-body .rmcc-list-striped > :nth-of-type(odd), .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-list-striped > :nth-of-type(odd), .rmcc-overlay-primary .rmcc-list-striped > :nth-of-type(odd), .rmcc-offcanvas-bar .rmcc-list-striped > :nth-of-type(odd) {
  background-color: rgba(255, 255, 255, 0.1);
}
.rmcc-light .rmcc-marker, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-marker, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-marker, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-marker, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-marker, .rmcc-card-primary.rmcc-card-body .rmcc-marker, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-marker, .rmcc-card-secondary.rmcc-card-body .rmcc-marker, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-marker, .rmcc-overlay-primary .rmcc-marker, .rmcc-offcanvas-bar .rmcc-marker {
  background: #f8f8f8;
  color: #666;
}
.rmcc-light .rmcc-marker:hover, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-marker:hover, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-marker:hover, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-marker:hover, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-marker:hover, .rmcc-card-primary.rmcc-card-body .rmcc-marker:hover, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-marker:hover, .rmcc-card-secondary.rmcc-card-body .rmcc-marker:hover, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-marker:hover, .rmcc-overlay-primary .rmcc-marker:hover, .rmcc-offcanvas-bar .rmcc-marker:hover {
  color: #666;
}
.rmcc-light .rmcc-nav-default > li > a, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-nav-default > li > a, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-nav-default > li > a, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-nav-default > li > a, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-nav-default > li > a, .rmcc-card-primary.rmcc-card-body .rmcc-nav-default > li > a, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-nav-default > li > a, .rmcc-card-secondary.rmcc-card-body .rmcc-nav-default > li > a, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-nav-default > li > a, .rmcc-overlay-primary .rmcc-nav-default > li > a, .rmcc-offcanvas-bar .rmcc-nav-default > li > a {
  color: rgba(255, 255, 255, 0.5);
}
.rmcc-light .rmcc-nav-default > li > a:hover, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-nav-default > li > a:hover, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-nav-default > li > a:hover, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-nav-default > li > a:hover, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-nav-default > li > a:hover, .rmcc-card-primary.rmcc-card-body .rmcc-nav-default > li > a:hover, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-nav-default > li > a:hover, .rmcc-card-secondary.rmcc-card-body .rmcc-nav-default > li > a:hover, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-nav-default > li > a:hover, .rmcc-overlay-primary .rmcc-nav-default > li > a:hover, .rmcc-offcanvas-bar .rmcc-nav-default > li > a:hover {
  color: rgba(255, 255, 255, 0.7);
}
.rmcc-light .rmcc-nav-default > li.rmcc-active > a, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-nav-default > li.rmcc-active > a, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-nav-default > li.rmcc-active > a, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-nav-default > li.rmcc-active > a, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-nav-default > li.rmcc-active > a, .rmcc-card-primary.rmcc-card-body .rmcc-nav-default > li.rmcc-active > a, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-nav-default > li.rmcc-active > a, .rmcc-card-secondary.rmcc-card-body .rmcc-nav-default > li.rmcc-active > a, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-nav-default > li.rmcc-active > a, .rmcc-overlay-primary .rmcc-nav-default > li.rmcc-active > a, .rmcc-offcanvas-bar .rmcc-nav-default > li.rmcc-active > a {
  color: #fff;
}
.rmcc-light .rmcc-nav-default .rmcc-nav-header, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-nav-default .rmcc-nav-header, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-nav-default .rmcc-nav-header, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-nav-default .rmcc-nav-header, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-nav-default .rmcc-nav-header, .rmcc-card-primary.rmcc-card-body .rmcc-nav-default .rmcc-nav-header, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-nav-default .rmcc-nav-header, .rmcc-card-secondary.rmcc-card-body .rmcc-nav-default .rmcc-nav-header, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-nav-default .rmcc-nav-header, .rmcc-overlay-primary .rmcc-nav-default .rmcc-nav-header, .rmcc-offcanvas-bar .rmcc-nav-default .rmcc-nav-header {
  color: #fff;
}
.rmcc-light .rmcc-nav-default .rmcc-nav-divider, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-nav-default .rmcc-nav-divider, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-nav-default .rmcc-nav-divider, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-nav-default .rmcc-nav-divider, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-nav-default .rmcc-nav-divider, .rmcc-card-primary.rmcc-card-body .rmcc-nav-default .rmcc-nav-divider, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-nav-default .rmcc-nav-divider, .rmcc-card-secondary.rmcc-card-body .rmcc-nav-default .rmcc-nav-divider, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-nav-default .rmcc-nav-divider, .rmcc-overlay-primary .rmcc-nav-default .rmcc-nav-divider, .rmcc-offcanvas-bar .rmcc-nav-default .rmcc-nav-divider {
  border-top-color: rgba(255, 255, 255, 0.2);
}
.rmcc-light .rmcc-nav-default .rmcc-nav-sub a, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-nav-default .rmcc-nav-sub a, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-nav-default .rmcc-nav-sub a, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-nav-default .rmcc-nav-sub a, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-nav-default .rmcc-nav-sub a, .rmcc-card-primary.rmcc-card-body .rmcc-nav-default .rmcc-nav-sub a, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-nav-default .rmcc-nav-sub a, .rmcc-card-secondary.rmcc-card-body .rmcc-nav-default .rmcc-nav-sub a, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-nav-default .rmcc-nav-sub a, .rmcc-overlay-primary .rmcc-nav-default .rmcc-nav-sub a, .rmcc-offcanvas-bar .rmcc-nav-default .rmcc-nav-sub a {
  color: rgba(255, 255, 255, 0.5);
}
.rmcc-light .rmcc-nav-default .rmcc-nav-sub a:hover, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-nav-default .rmcc-nav-sub a:hover, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-nav-default .rmcc-nav-sub a:hover, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-nav-default .rmcc-nav-sub a:hover, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-nav-default .rmcc-nav-sub a:hover, .rmcc-card-primary.rmcc-card-body .rmcc-nav-default .rmcc-nav-sub a:hover, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-nav-default .rmcc-nav-sub a:hover, .rmcc-card-secondary.rmcc-card-body .rmcc-nav-default .rmcc-nav-sub a:hover, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-nav-default .rmcc-nav-sub a:hover, .rmcc-overlay-primary .rmcc-nav-default .rmcc-nav-sub a:hover, .rmcc-offcanvas-bar .rmcc-nav-default .rmcc-nav-sub a:hover {
  color: rgba(255, 255, 255, 0.7);
}
.rmcc-light .rmcc-nav-default .rmcc-nav-sub li.rmcc-active > a, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-nav-default .rmcc-nav-sub li.rmcc-active > a, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-nav-default .rmcc-nav-sub li.rmcc-active > a, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-nav-default .rmcc-nav-sub li.rmcc-active > a, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-nav-default .rmcc-nav-sub li.rmcc-active > a, .rmcc-card-primary.rmcc-card-body .rmcc-nav-default .rmcc-nav-sub li.rmcc-active > a, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-nav-default .rmcc-nav-sub li.rmcc-active > a, .rmcc-card-secondary.rmcc-card-body .rmcc-nav-default .rmcc-nav-sub li.rmcc-active > a, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-nav-default .rmcc-nav-sub li.rmcc-active > a, .rmcc-overlay-primary .rmcc-nav-default .rmcc-nav-sub li.rmcc-active > a, .rmcc-offcanvas-bar .rmcc-nav-default .rmcc-nav-sub li.rmcc-active > a {
  color: #fff;
}
.rmcc-light .rmcc-nav-primary > li > a, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-nav-primary > li > a, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-nav-primary > li > a, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-nav-primary > li > a, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-nav-primary > li > a, .rmcc-card-primary.rmcc-card-body .rmcc-nav-primary > li > a, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-nav-primary > li > a, .rmcc-card-secondary.rmcc-card-body .rmcc-nav-primary > li > a, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-nav-primary > li > a, .rmcc-overlay-primary .rmcc-nav-primary > li > a, .rmcc-offcanvas-bar .rmcc-nav-primary > li > a {
  color: rgba(255, 255, 255, 0.5);
}
.rmcc-light .rmcc-nav-primary > li > a:hover, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-nav-primary > li > a:hover, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-nav-primary > li > a:hover, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-nav-primary > li > a:hover, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-nav-primary > li > a:hover, .rmcc-card-primary.rmcc-card-body .rmcc-nav-primary > li > a:hover, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-nav-primary > li > a:hover, .rmcc-card-secondary.rmcc-card-body .rmcc-nav-primary > li > a:hover, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-nav-primary > li > a:hover, .rmcc-overlay-primary .rmcc-nav-primary > li > a:hover, .rmcc-offcanvas-bar .rmcc-nav-primary > li > a:hover {
  color: rgba(255, 255, 255, 0.7);
}
.rmcc-light .rmcc-nav-primary > li.rmcc-active > a, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-nav-primary > li.rmcc-active > a, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-nav-primary > li.rmcc-active > a, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-nav-primary > li.rmcc-active > a, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-nav-primary > li.rmcc-active > a, .rmcc-card-primary.rmcc-card-body .rmcc-nav-primary > li.rmcc-active > a, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-nav-primary > li.rmcc-active > a, .rmcc-card-secondary.rmcc-card-body .rmcc-nav-primary > li.rmcc-active > a, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-nav-primary > li.rmcc-active > a, .rmcc-overlay-primary .rmcc-nav-primary > li.rmcc-active > a, .rmcc-offcanvas-bar .rmcc-nav-primary > li.rmcc-active > a {
  color: #fff;
}
.rmcc-light .rmcc-nav-primary .rmcc-nav-header, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-nav-primary .rmcc-nav-header, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-nav-primary .rmcc-nav-header, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-nav-primary .rmcc-nav-header, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-nav-primary .rmcc-nav-header, .rmcc-card-primary.rmcc-card-body .rmcc-nav-primary .rmcc-nav-header, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-nav-primary .rmcc-nav-header, .rmcc-card-secondary.rmcc-card-body .rmcc-nav-primary .rmcc-nav-header, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-nav-primary .rmcc-nav-header, .rmcc-overlay-primary .rmcc-nav-primary .rmcc-nav-header, .rmcc-offcanvas-bar .rmcc-nav-primary .rmcc-nav-header {
  color: #fff;
}
.rmcc-light .rmcc-nav-primary .rmcc-nav-divider, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-nav-primary .rmcc-nav-divider, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-nav-primary .rmcc-nav-divider, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-nav-primary .rmcc-nav-divider, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-nav-primary .rmcc-nav-divider, .rmcc-card-primary.rmcc-card-body .rmcc-nav-primary .rmcc-nav-divider, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-nav-primary .rmcc-nav-divider, .rmcc-card-secondary.rmcc-card-body .rmcc-nav-primary .rmcc-nav-divider, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-nav-primary .rmcc-nav-divider, .rmcc-overlay-primary .rmcc-nav-primary .rmcc-nav-divider, .rmcc-offcanvas-bar .rmcc-nav-primary .rmcc-nav-divider {
  border-top-color: rgba(255, 255, 255, 0.2);
}
.rmcc-light .rmcc-nav-primary .rmcc-nav-sub a, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-nav-primary .rmcc-nav-sub a, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-nav-primary .rmcc-nav-sub a, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-nav-primary .rmcc-nav-sub a, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-nav-primary .rmcc-nav-sub a, .rmcc-card-primary.rmcc-card-body .rmcc-nav-primary .rmcc-nav-sub a, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-nav-primary .rmcc-nav-sub a, .rmcc-card-secondary.rmcc-card-body .rmcc-nav-primary .rmcc-nav-sub a, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-nav-primary .rmcc-nav-sub a, .rmcc-overlay-primary .rmcc-nav-primary .rmcc-nav-sub a, .rmcc-offcanvas-bar .rmcc-nav-primary .rmcc-nav-sub a {
  color: rgba(255, 255, 255, 0.5);
}
.rmcc-light .rmcc-nav-primary .rmcc-nav-sub a:hover, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-nav-primary .rmcc-nav-sub a:hover, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-nav-primary .rmcc-nav-sub a:hover, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-nav-primary .rmcc-nav-sub a:hover, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-nav-primary .rmcc-nav-sub a:hover, .rmcc-card-primary.rmcc-card-body .rmcc-nav-primary .rmcc-nav-sub a:hover, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-nav-primary .rmcc-nav-sub a:hover, .rmcc-card-secondary.rmcc-card-body .rmcc-nav-primary .rmcc-nav-sub a:hover, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-nav-primary .rmcc-nav-sub a:hover, .rmcc-overlay-primary .rmcc-nav-primary .rmcc-nav-sub a:hover, .rmcc-offcanvas-bar .rmcc-nav-primary .rmcc-nav-sub a:hover {
  color: rgba(255, 255, 255, 0.7);
}
.rmcc-light .rmcc-nav-primary .rmcc-nav-sub li.rmcc-active > a, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-nav-primary .rmcc-nav-sub li.rmcc-active > a, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-nav-primary .rmcc-nav-sub li.rmcc-active > a, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-nav-primary .rmcc-nav-sub li.rmcc-active > a, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-nav-primary .rmcc-nav-sub li.rmcc-active > a, .rmcc-card-primary.rmcc-card-body .rmcc-nav-primary .rmcc-nav-sub li.rmcc-active > a, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-nav-primary .rmcc-nav-sub li.rmcc-active > a, .rmcc-card-secondary.rmcc-card-body .rmcc-nav-primary .rmcc-nav-sub li.rmcc-active > a, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-nav-primary .rmcc-nav-sub li.rmcc-active > a, .rmcc-overlay-primary .rmcc-nav-primary .rmcc-nav-sub li.rmcc-active > a, .rmcc-offcanvas-bar .rmcc-nav-primary .rmcc-nav-sub li.rmcc-active > a {
  color: #fff;
}
.rmcc-light .rmcc-nav-secondary > li > a, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-nav-secondary > li > a, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-nav-secondary > li > a, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-nav-secondary > li > a, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-nav-secondary > li > a, .rmcc-card-primary.rmcc-card-body .rmcc-nav-secondary > li > a, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-nav-secondary > li > a, .rmcc-card-secondary.rmcc-card-body .rmcc-nav-secondary > li > a, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-nav-secondary > li > a, .rmcc-overlay-primary .rmcc-nav-secondary > li > a, .rmcc-offcanvas-bar .rmcc-nav-secondary > li > a {
  color: #fff;
}
.rmcc-light .rmcc-nav-secondary > li > a:hover, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-nav-secondary > li > a:hover, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-nav-secondary > li > a:hover, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-nav-secondary > li > a:hover, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-nav-secondary > li > a:hover, .rmcc-card-primary.rmcc-card-body .rmcc-nav-secondary > li > a:hover, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-nav-secondary > li > a:hover, .rmcc-card-secondary.rmcc-card-body .rmcc-nav-secondary > li > a:hover, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-nav-secondary > li > a:hover, .rmcc-overlay-primary .rmcc-nav-secondary > li > a:hover, .rmcc-offcanvas-bar .rmcc-nav-secondary > li > a:hover {
  color: #fff;
  background-color: rgba(255, 255, 255, 0.1);
}
.rmcc-light .rmcc-nav-secondary > li.rmcc-active > a, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-nav-secondary > li.rmcc-active > a, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-nav-secondary > li.rmcc-active > a, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-nav-secondary > li.rmcc-active > a, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-nav-secondary > li.rmcc-active > a, .rmcc-card-primary.rmcc-card-body .rmcc-nav-secondary > li.rmcc-active > a, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-nav-secondary > li.rmcc-active > a, .rmcc-card-secondary.rmcc-card-body .rmcc-nav-secondary > li.rmcc-active > a, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-nav-secondary > li.rmcc-active > a, .rmcc-overlay-primary .rmcc-nav-secondary > li.rmcc-active > a, .rmcc-offcanvas-bar .rmcc-nav-secondary > li.rmcc-active > a {
  color: #fff;
  background-color: rgba(255, 255, 255, 0.1);
}
.rmcc-light .rmcc-nav-secondary .rmcc-nav-subtitle, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-nav-secondary .rmcc-nav-subtitle, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-nav-secondary .rmcc-nav-subtitle, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-nav-secondary .rmcc-nav-subtitle, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-nav-secondary .rmcc-nav-subtitle, .rmcc-card-primary.rmcc-card-body .rmcc-nav-secondary .rmcc-nav-subtitle, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-nav-secondary .rmcc-nav-subtitle, .rmcc-card-secondary.rmcc-card-body .rmcc-nav-secondary .rmcc-nav-subtitle, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-nav-secondary .rmcc-nav-subtitle, .rmcc-overlay-primary .rmcc-nav-secondary .rmcc-nav-subtitle, .rmcc-offcanvas-bar .rmcc-nav-secondary .rmcc-nav-subtitle {
  color: rgba(255, 255, 255, 0.5);
}
.rmcc-light .rmcc-nav-secondary > li > a:hover .rmcc-nav-subtitle, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-nav-secondary > li > a:hover .rmcc-nav-subtitle, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-nav-secondary > li > a:hover .rmcc-nav-subtitle, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-nav-secondary > li > a:hover .rmcc-nav-subtitle, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-nav-secondary > li > a:hover .rmcc-nav-subtitle, .rmcc-card-primary.rmcc-card-body .rmcc-nav-secondary > li > a:hover .rmcc-nav-subtitle, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-nav-secondary > li > a:hover .rmcc-nav-subtitle, .rmcc-card-secondary.rmcc-card-body .rmcc-nav-secondary > li > a:hover .rmcc-nav-subtitle, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-nav-secondary > li > a:hover .rmcc-nav-subtitle, .rmcc-overlay-primary .rmcc-nav-secondary > li > a:hover .rmcc-nav-subtitle, .rmcc-offcanvas-bar .rmcc-nav-secondary > li > a:hover .rmcc-nav-subtitle {
  color: rgba(255, 255, 255, 0.7);
}
.rmcc-light .rmcc-nav-secondary > li.rmcc-active > a .rmcc-nav-subtitle, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-nav-secondary > li.rmcc-active > a .rmcc-nav-subtitle, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-nav-secondary > li.rmcc-active > a .rmcc-nav-subtitle, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-nav-secondary > li.rmcc-active > a .rmcc-nav-subtitle, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-nav-secondary > li.rmcc-active > a .rmcc-nav-subtitle, .rmcc-card-primary.rmcc-card-body .rmcc-nav-secondary > li.rmcc-active > a .rmcc-nav-subtitle, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-nav-secondary > li.rmcc-active > a .rmcc-nav-subtitle, .rmcc-card-secondary.rmcc-card-body .rmcc-nav-secondary > li.rmcc-active > a .rmcc-nav-subtitle, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-nav-secondary > li.rmcc-active > a .rmcc-nav-subtitle, .rmcc-overlay-primary .rmcc-nav-secondary > li.rmcc-active > a .rmcc-nav-subtitle, .rmcc-offcanvas-bar .rmcc-nav-secondary > li.rmcc-active > a .rmcc-nav-subtitle {
  color: #fff;
}
.rmcc-light .rmcc-nav-secondary .rmcc-nav-header, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-nav-secondary .rmcc-nav-header, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-nav-secondary .rmcc-nav-header, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-nav-secondary .rmcc-nav-header, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-nav-secondary .rmcc-nav-header, .rmcc-card-primary.rmcc-card-body .rmcc-nav-secondary .rmcc-nav-header, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-nav-secondary .rmcc-nav-header, .rmcc-card-secondary.rmcc-card-body .rmcc-nav-secondary .rmcc-nav-header, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-nav-secondary .rmcc-nav-header, .rmcc-overlay-primary .rmcc-nav-secondary .rmcc-nav-header, .rmcc-offcanvas-bar .rmcc-nav-secondary .rmcc-nav-header {
  color: #fff;
}
.rmcc-light .rmcc-nav-secondary .rmcc-nav-divider, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-nav-secondary .rmcc-nav-divider, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-nav-secondary .rmcc-nav-divider, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-nav-secondary .rmcc-nav-divider, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-nav-secondary .rmcc-nav-divider, .rmcc-card-primary.rmcc-card-body .rmcc-nav-secondary .rmcc-nav-divider, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-nav-secondary .rmcc-nav-divider, .rmcc-card-secondary.rmcc-card-body .rmcc-nav-secondary .rmcc-nav-divider, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-nav-secondary .rmcc-nav-divider, .rmcc-overlay-primary .rmcc-nav-secondary .rmcc-nav-divider, .rmcc-offcanvas-bar .rmcc-nav-secondary .rmcc-nav-divider {
  border-top-color: rgba(255, 255, 255, 0.2);
}
.rmcc-light .rmcc-nav-secondary .rmcc-nav-sub a, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-nav-secondary .rmcc-nav-sub a, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-nav-secondary .rmcc-nav-sub a, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-nav-secondary .rmcc-nav-sub a, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-nav-secondary .rmcc-nav-sub a, .rmcc-card-primary.rmcc-card-body .rmcc-nav-secondary .rmcc-nav-sub a, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-nav-secondary .rmcc-nav-sub a, .rmcc-card-secondary.rmcc-card-body .rmcc-nav-secondary .rmcc-nav-sub a, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-nav-secondary .rmcc-nav-sub a, .rmcc-overlay-primary .rmcc-nav-secondary .rmcc-nav-sub a, .rmcc-offcanvas-bar .rmcc-nav-secondary .rmcc-nav-sub a {
  color: rgba(255, 255, 255, 0.5);
}
.rmcc-light .rmcc-nav-secondary .rmcc-nav-sub a:hover, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-nav-secondary .rmcc-nav-sub a:hover, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-nav-secondary .rmcc-nav-sub a:hover, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-nav-secondary .rmcc-nav-sub a:hover, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-nav-secondary .rmcc-nav-sub a:hover, .rmcc-card-primary.rmcc-card-body .rmcc-nav-secondary .rmcc-nav-sub a:hover, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-nav-secondary .rmcc-nav-sub a:hover, .rmcc-card-secondary.rmcc-card-body .rmcc-nav-secondary .rmcc-nav-sub a:hover, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-nav-secondary .rmcc-nav-sub a:hover, .rmcc-overlay-primary .rmcc-nav-secondary .rmcc-nav-sub a:hover, .rmcc-offcanvas-bar .rmcc-nav-secondary .rmcc-nav-sub a:hover {
  color: rgba(255, 255, 255, 0.7);
}
.rmcc-light .rmcc-nav-secondary .rmcc-nav-sub li.rmcc-active > a, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-nav-secondary .rmcc-nav-sub li.rmcc-active > a, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-nav-secondary .rmcc-nav-sub li.rmcc-active > a, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-nav-secondary .rmcc-nav-sub li.rmcc-active > a, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-nav-secondary .rmcc-nav-sub li.rmcc-active > a, .rmcc-card-primary.rmcc-card-body .rmcc-nav-secondary .rmcc-nav-sub li.rmcc-active > a, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-nav-secondary .rmcc-nav-sub li.rmcc-active > a, .rmcc-card-secondary.rmcc-card-body .rmcc-nav-secondary .rmcc-nav-sub li.rmcc-active > a, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-nav-secondary .rmcc-nav-sub li.rmcc-active > a, .rmcc-overlay-primary .rmcc-nav-secondary .rmcc-nav-sub li.rmcc-active > a, .rmcc-offcanvas-bar .rmcc-nav-secondary .rmcc-nav-sub li.rmcc-active > a {
  color: #fff;
}
.rmcc-light .rmcc-nav.rmcc-nav-divider > :not(.rmcc-nav-divider) + :not(.rmcc-nav-header, .rmcc-nav-divider), .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-nav.rmcc-nav-divider > :not(.rmcc-nav-divider) + :not(.rmcc-nav-header, .rmcc-nav-divider), .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-nav.rmcc-nav-divider > :not(.rmcc-nav-divider) + :not(.rmcc-nav-header, .rmcc-nav-divider), .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-nav.rmcc-nav-divider > :not(.rmcc-nav-divider) + :not(.rmcc-nav-header, .rmcc-nav-divider), .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-nav.rmcc-nav-divider > :not(.rmcc-nav-divider) + :not(.rmcc-nav-header, .rmcc-nav-divider), .rmcc-card-primary.rmcc-card-body .rmcc-nav.rmcc-nav-divider > :not(.rmcc-nav-divider) + :not(.rmcc-nav-header, .rmcc-nav-divider), .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-nav.rmcc-nav-divider > :not(.rmcc-nav-divider) + :not(.rmcc-nav-header, .rmcc-nav-divider), .rmcc-card-secondary.rmcc-card-body .rmcc-nav.rmcc-nav-divider > :not(.rmcc-nav-divider) + :not(.rmcc-nav-header, .rmcc-nav-divider), .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-nav.rmcc-nav-divider > :not(.rmcc-nav-divider) + :not(.rmcc-nav-header, .rmcc-nav-divider), .rmcc-overlay-primary .rmcc-nav.rmcc-nav-divider > :not(.rmcc-nav-divider) + :not(.rmcc-nav-header, .rmcc-nav-divider), .rmcc-offcanvas-bar .rmcc-nav.rmcc-nav-divider > :not(.rmcc-nav-divider) + :not(.rmcc-nav-header, .rmcc-nav-divider) {
  border-top-color: rgba(255, 255, 255, 0.2);
}
.rmcc-light .rmcc-navbar-nav > li > a, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-navbar-nav > li > a, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-navbar-nav > li > a, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-navbar-nav > li > a, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-navbar-nav > li > a, .rmcc-card-primary.rmcc-card-body .rmcc-navbar-nav > li > a, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-navbar-nav > li > a, .rmcc-card-secondary.rmcc-card-body .rmcc-navbar-nav > li > a, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-navbar-nav > li > a, .rmcc-overlay-primary .rmcc-navbar-nav > li > a, .rmcc-offcanvas-bar .rmcc-navbar-nav > li > a {
  color: rgba(255, 255, 255, 0.5);
}
.rmcc-light .rmcc-navbar-nav > li:hover > a, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-navbar-nav > li:hover > a, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-navbar-nav > li:hover > a, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-navbar-nav > li:hover > a, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-navbar-nav > li:hover > a, .rmcc-card-primary.rmcc-card-body .rmcc-navbar-nav > li:hover > a, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-navbar-nav > li:hover > a, .rmcc-card-secondary.rmcc-card-body .rmcc-navbar-nav > li:hover > a, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-navbar-nav > li:hover > a, .rmcc-overlay-primary .rmcc-navbar-nav > li:hover > a, .rmcc-offcanvas-bar .rmcc-navbar-nav > li:hover > a,
.rmcc-light .rmcc-navbar-nav > li > a[aria-expanded=true],
.rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-navbar-nav > li > a[aria-expanded=true],
.rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-navbar-nav > li > a[aria-expanded=true],
.rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-navbar-nav > li > a[aria-expanded=true],
.rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-navbar-nav > li > a[aria-expanded=true],
.rmcc-card-primary.rmcc-card-body .rmcc-navbar-nav > li > a[aria-expanded=true],
.rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-navbar-nav > li > a[aria-expanded=true],
.rmcc-card-secondary.rmcc-card-body .rmcc-navbar-nav > li > a[aria-expanded=true],
.rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-navbar-nav > li > a[aria-expanded=true],
.rmcc-overlay-primary .rmcc-navbar-nav > li > a[aria-expanded=true],
.rmcc-offcanvas-bar .rmcc-navbar-nav > li > a[aria-expanded=true] {
  color: rgba(255, 255, 255, 0.7);
}
.rmcc-light .rmcc-navbar-nav > li > a:active, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-navbar-nav > li > a:active, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-navbar-nav > li > a:active, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-navbar-nav > li > a:active, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-navbar-nav > li > a:active, .rmcc-card-primary.rmcc-card-body .rmcc-navbar-nav > li > a:active, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-navbar-nav > li > a:active, .rmcc-card-secondary.rmcc-card-body .rmcc-navbar-nav > li > a:active, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-navbar-nav > li > a:active, .rmcc-overlay-primary .rmcc-navbar-nav > li > a:active, .rmcc-offcanvas-bar .rmcc-navbar-nav > li > a:active {
  color: #fff;
}
.rmcc-light .rmcc-navbar-nav > li.rmcc-active > a, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-navbar-nav > li.rmcc-active > a, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-navbar-nav > li.rmcc-active > a, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-navbar-nav > li.rmcc-active > a, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-navbar-nav > li.rmcc-active > a, .rmcc-card-primary.rmcc-card-body .rmcc-navbar-nav > li.rmcc-active > a, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-navbar-nav > li.rmcc-active > a, .rmcc-card-secondary.rmcc-card-body .rmcc-navbar-nav > li.rmcc-active > a, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-navbar-nav > li.rmcc-active > a, .rmcc-overlay-primary .rmcc-navbar-nav > li.rmcc-active > a, .rmcc-offcanvas-bar .rmcc-navbar-nav > li.rmcc-active > a {
  color: #fff;
}
.rmcc-light .rmcc-navbar-item, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-navbar-item, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-navbar-item, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-navbar-item, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-navbar-item, .rmcc-card-primary.rmcc-card-body .rmcc-navbar-item, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-navbar-item, .rmcc-card-secondary.rmcc-card-body .rmcc-navbar-item, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-navbar-item, .rmcc-overlay-primary .rmcc-navbar-item, .rmcc-offcanvas-bar .rmcc-navbar-item {
  color: rgba(255, 255, 255, 0.7);
}
.rmcc-light .rmcc-navbar-toggle, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-navbar-toggle, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-navbar-toggle, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-navbar-toggle, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-navbar-toggle, .rmcc-card-primary.rmcc-card-body .rmcc-navbar-toggle, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-navbar-toggle, .rmcc-card-secondary.rmcc-card-body .rmcc-navbar-toggle, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-navbar-toggle, .rmcc-overlay-primary .rmcc-navbar-toggle, .rmcc-offcanvas-bar .rmcc-navbar-toggle {
  color: rgba(255, 255, 255, 0.5);
}
.rmcc-light .rmcc-navbar-toggle:hover, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-navbar-toggle:hover, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-navbar-toggle:hover, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-navbar-toggle:hover, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-navbar-toggle:hover, .rmcc-card-primary.rmcc-card-body .rmcc-navbar-toggle:hover, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-navbar-toggle:hover, .rmcc-card-secondary.rmcc-card-body .rmcc-navbar-toggle:hover, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-navbar-toggle:hover, .rmcc-overlay-primary .rmcc-navbar-toggle:hover, .rmcc-offcanvas-bar .rmcc-navbar-toggle:hover,
.rmcc-light .rmcc-navbar-toggle[aria-expanded=true],
.rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-navbar-toggle[aria-expanded=true],
.rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-navbar-toggle[aria-expanded=true],
.rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-navbar-toggle[aria-expanded=true],
.rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-navbar-toggle[aria-expanded=true],
.rmcc-card-primary.rmcc-card-body .rmcc-navbar-toggle[aria-expanded=true],
.rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-navbar-toggle[aria-expanded=true],
.rmcc-card-secondary.rmcc-card-body .rmcc-navbar-toggle[aria-expanded=true],
.rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-navbar-toggle[aria-expanded=true],
.rmcc-overlay-primary .rmcc-navbar-toggle[aria-expanded=true],
.rmcc-offcanvas-bar .rmcc-navbar-toggle[aria-expanded=true] {
  color: rgba(255, 255, 255, 0.7);
}
.rmcc-light .rmcc-pagination > * > *, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-pagination > * > *, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-pagination > * > *, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-pagination > * > *, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-pagination > * > *, .rmcc-card-primary.rmcc-card-body .rmcc-pagination > * > *, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-pagination > * > *, .rmcc-card-secondary.rmcc-card-body .rmcc-pagination > * > *, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-pagination > * > *, .rmcc-overlay-primary .rmcc-pagination > * > *, .rmcc-offcanvas-bar .rmcc-pagination > * > * {
  color: rgba(255, 255, 255, 0.5);
}
.rmcc-light .rmcc-pagination > * > :hover, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-pagination > * > :hover, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-pagination > * > :hover, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-pagination > * > :hover, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-pagination > * > :hover, .rmcc-card-primary.rmcc-card-body .rmcc-pagination > * > :hover, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-pagination > * > :hover, .rmcc-card-secondary.rmcc-card-body .rmcc-pagination > * > :hover, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-pagination > * > :hover, .rmcc-overlay-primary .rmcc-pagination > * > :hover, .rmcc-offcanvas-bar .rmcc-pagination > * > :hover {
  color: rgba(255, 255, 255, 0.7);
}
.rmcc-light .rmcc-pagination > .rmcc-active > *, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-pagination > .rmcc-active > *, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-pagination > .rmcc-active > *, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-pagination > .rmcc-active > *, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-pagination > .rmcc-active > *, .rmcc-card-primary.rmcc-card-body .rmcc-pagination > .rmcc-active > *, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-pagination > .rmcc-active > *, .rmcc-card-secondary.rmcc-card-body .rmcc-pagination > .rmcc-active > *, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-pagination > .rmcc-active > *, .rmcc-overlay-primary .rmcc-pagination > .rmcc-active > *, .rmcc-offcanvas-bar .rmcc-pagination > .rmcc-active > * {
  color: rgba(255, 255, 255, 0.7);
}
.rmcc-light .rmcc-pagination > .rmcc-disabled > *, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-pagination > .rmcc-disabled > *, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-pagination > .rmcc-disabled > *, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-pagination > .rmcc-disabled > *, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-pagination > .rmcc-disabled > *, .rmcc-card-primary.rmcc-card-body .rmcc-pagination > .rmcc-disabled > *, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-pagination > .rmcc-disabled > *, .rmcc-card-secondary.rmcc-card-body .rmcc-pagination > .rmcc-disabled > *, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-pagination > .rmcc-disabled > *, .rmcc-overlay-primary .rmcc-pagination > .rmcc-disabled > *, .rmcc-offcanvas-bar .rmcc-pagination > .rmcc-disabled > * {
  color: rgba(255, 255, 255, 0.5);
}
.rmcc-light .rmcc-search-input, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-search-input, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-search-input, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-search-input, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-search-input, .rmcc-card-primary.rmcc-card-body .rmcc-search-input, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-search-input, .rmcc-card-secondary.rmcc-card-body .rmcc-search-input, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-search-input, .rmcc-overlay-primary .rmcc-search-input, .rmcc-offcanvas-bar .rmcc-search-input {
  color: rgba(255, 255, 255, 0.7);
}
.rmcc-light .rmcc-search-input::placeholder, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-search-input::placeholder, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-search-input::placeholder, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-search-input::placeholder, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-search-input::placeholder, .rmcc-card-primary.rmcc-card-body .rmcc-search-input::placeholder, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-search-input::placeholder, .rmcc-card-secondary.rmcc-card-body .rmcc-search-input::placeholder, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-search-input::placeholder, .rmcc-overlay-primary .rmcc-search-input::placeholder, .rmcc-offcanvas-bar .rmcc-search-input::placeholder {
  color: rgba(255, 255, 255, 0.5);
}
.rmcc-light .rmcc-search .rmcc-search-icon, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-search .rmcc-search-icon, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-search .rmcc-search-icon, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-search .rmcc-search-icon, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-search .rmcc-search-icon, .rmcc-card-primary.rmcc-card-body .rmcc-search .rmcc-search-icon, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-search .rmcc-search-icon, .rmcc-card-secondary.rmcc-card-body .rmcc-search .rmcc-search-icon, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-search .rmcc-search-icon, .rmcc-overlay-primary .rmcc-search .rmcc-search-icon, .rmcc-offcanvas-bar .rmcc-search .rmcc-search-icon {
  color: rgba(255, 255, 255, 0.5);
}
.rmcc-light .rmcc-search .rmcc-search-icon:hover, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-search .rmcc-search-icon:hover, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-search .rmcc-search-icon:hover, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-search .rmcc-search-icon:hover, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-search .rmcc-search-icon:hover, .rmcc-card-primary.rmcc-card-body .rmcc-search .rmcc-search-icon:hover, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-search .rmcc-search-icon:hover, .rmcc-card-secondary.rmcc-card-body .rmcc-search .rmcc-search-icon:hover, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-search .rmcc-search-icon:hover, .rmcc-overlay-primary .rmcc-search .rmcc-search-icon:hover, .rmcc-offcanvas-bar .rmcc-search .rmcc-search-icon:hover {
  color: rgba(255, 255, 255, 0.5);
}
.rmcc-light .rmcc-search-default .rmcc-search-input, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-search-default .rmcc-search-input, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-search-default .rmcc-search-input, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-search-default .rmcc-search-input, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-search-default .rmcc-search-input, .rmcc-card-primary.rmcc-card-body .rmcc-search-default .rmcc-search-input, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-search-default .rmcc-search-input, .rmcc-card-secondary.rmcc-card-body .rmcc-search-default .rmcc-search-input, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-search-default .rmcc-search-input, .rmcc-overlay-primary .rmcc-search-default .rmcc-search-input, .rmcc-offcanvas-bar .rmcc-search-default .rmcc-search-input {
  background-color: transparent;
  border-color: rgba(255, 255, 255, 0.2);
}
.rmcc-light .rmcc-search-default .rmcc-search-input:focus, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-search-default .rmcc-search-input:focus, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-search-default .rmcc-search-input:focus, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-search-default .rmcc-search-input:focus, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-search-default .rmcc-search-input:focus, .rmcc-card-primary.rmcc-card-body .rmcc-search-default .rmcc-search-input:focus, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-search-default .rmcc-search-input:focus, .rmcc-card-secondary.rmcc-card-body .rmcc-search-default .rmcc-search-input:focus, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-search-default .rmcc-search-input:focus, .rmcc-overlay-primary .rmcc-search-default .rmcc-search-input:focus, .rmcc-offcanvas-bar .rmcc-search-default .rmcc-search-input:focus {
  background-color: rgba(0, 0, 0, 0.05);
}
.rmcc-light .rmcc-search-navbar .rmcc-search-input, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-search-navbar .rmcc-search-input, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-search-navbar .rmcc-search-input, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-search-navbar .rmcc-search-input, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-search-navbar .rmcc-search-input, .rmcc-card-primary.rmcc-card-body .rmcc-search-navbar .rmcc-search-input, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-search-navbar .rmcc-search-input, .rmcc-card-secondary.rmcc-card-body .rmcc-search-navbar .rmcc-search-input, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-search-navbar .rmcc-search-input, .rmcc-overlay-primary .rmcc-search-navbar .rmcc-search-input, .rmcc-offcanvas-bar .rmcc-search-navbar .rmcc-search-input {
  background-color: transparent;
  border-color: rgba(255, 255, 255, 0.2);
}
.rmcc-light .rmcc-search-navbar .rmcc-search-input:focus, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-search-navbar .rmcc-search-input:focus, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-search-navbar .rmcc-search-input:focus, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-search-navbar .rmcc-search-input:focus, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-search-navbar .rmcc-search-input:focus, .rmcc-card-primary.rmcc-card-body .rmcc-search-navbar .rmcc-search-input:focus, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-search-navbar .rmcc-search-input:focus, .rmcc-card-secondary.rmcc-card-body .rmcc-search-navbar .rmcc-search-input:focus, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-search-navbar .rmcc-search-input:focus, .rmcc-overlay-primary .rmcc-search-navbar .rmcc-search-input:focus, .rmcc-offcanvas-bar .rmcc-search-navbar .rmcc-search-input:focus {
  background-color: rgba(0, 0, 0, 0.05);
}
.rmcc-light .rmcc-search-medium .rmcc-search-input, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-search-medium .rmcc-search-input, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-search-medium .rmcc-search-input, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-search-medium .rmcc-search-input, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-search-medium .rmcc-search-input, .rmcc-card-primary.rmcc-card-body .rmcc-search-medium .rmcc-search-input, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-search-medium .rmcc-search-input, .rmcc-card-secondary.rmcc-card-body .rmcc-search-medium .rmcc-search-input, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-search-medium .rmcc-search-input, .rmcc-overlay-primary .rmcc-search-medium .rmcc-search-input, .rmcc-offcanvas-bar .rmcc-search-medium .rmcc-search-input {
  background-color: transparent;
  border-color: rgba(255, 255, 255, 0.2);
}
.rmcc-light .rmcc-search-medium .rmcc-search-input:focus, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-search-medium .rmcc-search-input:focus, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-search-medium .rmcc-search-input:focus, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-search-medium .rmcc-search-input:focus, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-search-medium .rmcc-search-input:focus, .rmcc-card-primary.rmcc-card-body .rmcc-search-medium .rmcc-search-input:focus, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-search-medium .rmcc-search-input:focus, .rmcc-card-secondary.rmcc-card-body .rmcc-search-medium .rmcc-search-input:focus, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-search-medium .rmcc-search-input:focus, .rmcc-overlay-primary .rmcc-search-medium .rmcc-search-input:focus, .rmcc-offcanvas-bar .rmcc-search-medium .rmcc-search-input:focus {
  background-color: rgba(0, 0, 0, 0.05);
}
.rmcc-light .rmcc-search-large .rmcc-search-input, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-search-large .rmcc-search-input, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-search-large .rmcc-search-input, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-search-large .rmcc-search-input, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-search-large .rmcc-search-input, .rmcc-card-primary.rmcc-card-body .rmcc-search-large .rmcc-search-input, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-search-large .rmcc-search-input, .rmcc-card-secondary.rmcc-card-body .rmcc-search-large .rmcc-search-input, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-search-large .rmcc-search-input, .rmcc-overlay-primary .rmcc-search-large .rmcc-search-input, .rmcc-offcanvas-bar .rmcc-search-large .rmcc-search-input {
  background-color: transparent;
  border-color: rgba(255, 255, 255, 0.2);
}
.rmcc-light .rmcc-search-large .rmcc-search-input:focus, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-search-large .rmcc-search-input:focus, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-search-large .rmcc-search-input:focus, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-search-large .rmcc-search-input:focus, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-search-large .rmcc-search-input:focus, .rmcc-card-primary.rmcc-card-body .rmcc-search-large .rmcc-search-input:focus, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-search-large .rmcc-search-input:focus, .rmcc-card-secondary.rmcc-card-body .rmcc-search-large .rmcc-search-input:focus, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-search-large .rmcc-search-input:focus, .rmcc-overlay-primary .rmcc-search-large .rmcc-search-input:focus, .rmcc-offcanvas-bar .rmcc-search-large .rmcc-search-input:focus {
  background-color: rgba(0, 0, 0, 0.05);
}
.rmcc-light .rmcc-search-toggle, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-search-toggle, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-search-toggle, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-search-toggle, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-search-toggle, .rmcc-card-primary.rmcc-card-body .rmcc-search-toggle, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-search-toggle, .rmcc-card-secondary.rmcc-card-body .rmcc-search-toggle, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-search-toggle, .rmcc-overlay-primary .rmcc-search-toggle, .rmcc-offcanvas-bar .rmcc-search-toggle {
  color: rgba(255, 255, 255, 0.5);
}
.rmcc-light .rmcc-search-toggle:hover, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-search-toggle:hover, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-search-toggle:hover, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-search-toggle:hover, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-search-toggle:hover, .rmcc-card-primary.rmcc-card-body .rmcc-search-toggle:hover, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-search-toggle:hover, .rmcc-card-secondary.rmcc-card-body .rmcc-search-toggle:hover, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-search-toggle:hover, .rmcc-overlay-primary .rmcc-search-toggle:hover, .rmcc-offcanvas-bar .rmcc-search-toggle:hover {
  color: rgba(255, 255, 255, 0.7);
}
.rmcc-light .rmcc-slidenav, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-slidenav, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-slidenav, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-slidenav, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-slidenav, .rmcc-card-primary.rmcc-card-body .rmcc-slidenav, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-slidenav, .rmcc-card-secondary.rmcc-card-body .rmcc-slidenav, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-slidenav, .rmcc-overlay-primary .rmcc-slidenav, .rmcc-offcanvas-bar .rmcc-slidenav {
  color: rgba(255, 255, 255, 0.7);
}
.rmcc-light .rmcc-slidenav:hover, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-slidenav:hover, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-slidenav:hover, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-slidenav:hover, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-slidenav:hover, .rmcc-card-primary.rmcc-card-body .rmcc-slidenav:hover, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-slidenav:hover, .rmcc-card-secondary.rmcc-card-body .rmcc-slidenav:hover, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-slidenav:hover, .rmcc-overlay-primary .rmcc-slidenav:hover, .rmcc-offcanvas-bar .rmcc-slidenav:hover {
  color: rgba(255, 255, 255, 0.95);
}
.rmcc-light .rmcc-slidenav:active, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-slidenav:active, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-slidenav:active, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-slidenav:active, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-slidenav:active, .rmcc-card-primary.rmcc-card-body .rmcc-slidenav:active, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-slidenav:active, .rmcc-card-secondary.rmcc-card-body .rmcc-slidenav:active, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-slidenav:active, .rmcc-overlay-primary .rmcc-slidenav:active, .rmcc-offcanvas-bar .rmcc-slidenav:active {
  color: rgba(255, 255, 255, 0.7);
}
.rmcc-light .rmcc-subnav > * > :first-child, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-subnav > * > :first-child, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-subnav > * > :first-child, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-subnav > * > :first-child, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-subnav > * > :first-child, .rmcc-card-primary.rmcc-card-body .rmcc-subnav > * > :first-child, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-subnav > * > :first-child, .rmcc-card-secondary.rmcc-card-body .rmcc-subnav > * > :first-child, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-subnav > * > :first-child, .rmcc-overlay-primary .rmcc-subnav > * > :first-child, .rmcc-offcanvas-bar .rmcc-subnav > * > :first-child {
  color: rgba(255, 255, 255, 0.5);
}
.rmcc-light .rmcc-subnav > * > a:hover, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-subnav > * > a:hover, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-subnav > * > a:hover, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-subnav > * > a:hover, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-subnav > * > a:hover, .rmcc-card-primary.rmcc-card-body .rmcc-subnav > * > a:hover, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-subnav > * > a:hover, .rmcc-card-secondary.rmcc-card-body .rmcc-subnav > * > a:hover, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-subnav > * > a:hover, .rmcc-overlay-primary .rmcc-subnav > * > a:hover, .rmcc-offcanvas-bar .rmcc-subnav > * > a:hover {
  color: rgba(255, 255, 255, 0.7);
}
.rmcc-light .rmcc-subnav > .rmcc-active > a, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-subnav > .rmcc-active > a, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-subnav > .rmcc-active > a, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-subnav > .rmcc-active > a, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-subnav > .rmcc-active > a, .rmcc-card-primary.rmcc-card-body .rmcc-subnav > .rmcc-active > a, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-subnav > .rmcc-active > a, .rmcc-card-secondary.rmcc-card-body .rmcc-subnav > .rmcc-active > a, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-subnav > .rmcc-active > a, .rmcc-overlay-primary .rmcc-subnav > .rmcc-active > a, .rmcc-offcanvas-bar .rmcc-subnav > .rmcc-active > a {
  color: #fff;
}
.rmcc-light .rmcc-subnav-divider > :nth-child(n+2):not(.rmcc-first-column)::before, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-subnav-divider > :nth-child(n+2):not(.rmcc-first-column)::before, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-subnav-divider > :nth-child(n+2):not(.rmcc-first-column)::before, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-subnav-divider > :nth-child(n+2):not(.rmcc-first-column)::before, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-subnav-divider > :nth-child(n+2):not(.rmcc-first-column)::before, .rmcc-card-primary.rmcc-card-body .rmcc-subnav-divider > :nth-child(n+2):not(.rmcc-first-column)::before, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-subnav-divider > :nth-child(n+2):not(.rmcc-first-column)::before, .rmcc-card-secondary.rmcc-card-body .rmcc-subnav-divider > :nth-child(n+2):not(.rmcc-first-column)::before, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-subnav-divider > :nth-child(n+2):not(.rmcc-first-column)::before, .rmcc-overlay-primary .rmcc-subnav-divider > :nth-child(n+2):not(.rmcc-first-column)::before, .rmcc-offcanvas-bar .rmcc-subnav-divider > :nth-child(n+2):not(.rmcc-first-column)::before {
  border-left-color: rgba(255, 255, 255, 0.2);
}
.rmcc-light .rmcc-subnav-pill > * > :first-child, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-subnav-pill > * > :first-child, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-subnav-pill > * > :first-child, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-subnav-pill > * > :first-child, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-subnav-pill > * > :first-child, .rmcc-card-primary.rmcc-card-body .rmcc-subnav-pill > * > :first-child, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-subnav-pill > * > :first-child, .rmcc-card-secondary.rmcc-card-body .rmcc-subnav-pill > * > :first-child, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-subnav-pill > * > :first-child, .rmcc-overlay-primary .rmcc-subnav-pill > * > :first-child, .rmcc-offcanvas-bar .rmcc-subnav-pill > * > :first-child {
  background-color: transparent;
  color: rgba(255, 255, 255, 0.5);
}
.rmcc-light .rmcc-subnav-pill > * > a:hover, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-subnav-pill > * > a:hover, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-subnav-pill > * > a:hover, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-subnav-pill > * > a:hover, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-subnav-pill > * > a:hover, .rmcc-card-primary.rmcc-card-body .rmcc-subnav-pill > * > a:hover, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-subnav-pill > * > a:hover, .rmcc-card-secondary.rmcc-card-body .rmcc-subnav-pill > * > a:hover, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-subnav-pill > * > a:hover, .rmcc-overlay-primary .rmcc-subnav-pill > * > a:hover, .rmcc-offcanvas-bar .rmcc-subnav-pill > * > a:hover {
  background-color: rgba(255, 255, 255, 0.1);
  color: rgba(255, 255, 255, 0.7);
}
.rmcc-light .rmcc-subnav-pill > * > a:active, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-subnav-pill > * > a:active, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-subnav-pill > * > a:active, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-subnav-pill > * > a:active, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-subnav-pill > * > a:active, .rmcc-card-primary.rmcc-card-body .rmcc-subnav-pill > * > a:active, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-subnav-pill > * > a:active, .rmcc-card-secondary.rmcc-card-body .rmcc-subnav-pill > * > a:active, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-subnav-pill > * > a:active, .rmcc-overlay-primary .rmcc-subnav-pill > * > a:active, .rmcc-offcanvas-bar .rmcc-subnav-pill > * > a:active {
  background-color: rgba(255, 255, 255, 0.1);
  color: rgba(255, 255, 255, 0.7);
}
.rmcc-light .rmcc-subnav-pill > .rmcc-active > a, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-subnav-pill > .rmcc-active > a, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-subnav-pill > .rmcc-active > a, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-subnav-pill > .rmcc-active > a, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-subnav-pill > .rmcc-active > a, .rmcc-card-primary.rmcc-card-body .rmcc-subnav-pill > .rmcc-active > a, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-subnav-pill > .rmcc-active > a, .rmcc-card-secondary.rmcc-card-body .rmcc-subnav-pill > .rmcc-active > a, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-subnav-pill > .rmcc-active > a, .rmcc-overlay-primary .rmcc-subnav-pill > .rmcc-active > a, .rmcc-offcanvas-bar .rmcc-subnav-pill > .rmcc-active > a {
  background-color: #fff;
  color: #666;
}
.rmcc-light .rmcc-subnav > .rmcc-disabled > a, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-subnav > .rmcc-disabled > a, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-subnav > .rmcc-disabled > a, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-subnav > .rmcc-disabled > a, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-subnav > .rmcc-disabled > a, .rmcc-card-primary.rmcc-card-body .rmcc-subnav > .rmcc-disabled > a, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-subnav > .rmcc-disabled > a, .rmcc-card-secondary.rmcc-card-body .rmcc-subnav > .rmcc-disabled > a, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-subnav > .rmcc-disabled > a, .rmcc-overlay-primary .rmcc-subnav > .rmcc-disabled > a, .rmcc-offcanvas-bar .rmcc-subnav > .rmcc-disabled > a {
  color: rgba(255, 255, 255, 0.5);
}
.rmcc-light .rmcc-tab::before, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-tab::before, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-tab::before, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-tab::before, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-tab::before, .rmcc-card-primary.rmcc-card-body .rmcc-tab::before, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-tab::before, .rmcc-card-secondary.rmcc-card-body .rmcc-tab::before, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-tab::before, .rmcc-overlay-primary .rmcc-tab::before, .rmcc-offcanvas-bar .rmcc-tab::before {
  border-color: rgba(255, 255, 255, 0.2);
}
.rmcc-light .rmcc-tab > * > a, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-tab > * > a, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-tab > * > a, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-tab > * > a, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-tab > * > a, .rmcc-card-primary.rmcc-card-body .rmcc-tab > * > a, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-tab > * > a, .rmcc-card-secondary.rmcc-card-body .rmcc-tab > * > a, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-tab > * > a, .rmcc-overlay-primary .rmcc-tab > * > a, .rmcc-offcanvas-bar .rmcc-tab > * > a {
  color: rgba(255, 255, 255, 0.5);
}
.rmcc-light .rmcc-tab > * > a:hover, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-tab > * > a:hover, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-tab > * > a:hover, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-tab > * > a:hover, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-tab > * > a:hover, .rmcc-card-primary.rmcc-card-body .rmcc-tab > * > a:hover, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-tab > * > a:hover, .rmcc-card-secondary.rmcc-card-body .rmcc-tab > * > a:hover, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-tab > * > a:hover, .rmcc-overlay-primary .rmcc-tab > * > a:hover, .rmcc-offcanvas-bar .rmcc-tab > * > a:hover {
  color: rgba(255, 255, 255, 0.7);
}
.rmcc-light .rmcc-tab > .rmcc-active > a, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-tab > .rmcc-active > a, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-tab > .rmcc-active > a, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-tab > .rmcc-active > a, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-tab > .rmcc-active > a, .rmcc-card-primary.rmcc-card-body .rmcc-tab > .rmcc-active > a, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-tab > .rmcc-active > a, .rmcc-card-secondary.rmcc-card-body .rmcc-tab > .rmcc-active > a, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-tab > .rmcc-active > a, .rmcc-overlay-primary .rmcc-tab > .rmcc-active > a, .rmcc-offcanvas-bar .rmcc-tab > .rmcc-active > a {
  color: #fff;
  border-color: #fff;
}
.rmcc-light .rmcc-tab > .rmcc-disabled > a, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-tab > .rmcc-disabled > a, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-tab > .rmcc-disabled > a, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-tab > .rmcc-disabled > a, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-tab > .rmcc-disabled > a, .rmcc-card-primary.rmcc-card-body .rmcc-tab > .rmcc-disabled > a, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-tab > .rmcc-disabled > a, .rmcc-card-secondary.rmcc-card-body .rmcc-tab > .rmcc-disabled > a, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-tab > .rmcc-disabled > a, .rmcc-overlay-primary .rmcc-tab > .rmcc-disabled > a, .rmcc-offcanvas-bar .rmcc-tab > .rmcc-disabled > a {
  color: rgba(255, 255, 255, 0.5);
}
.rmcc-light .rmcc-table-striped > tr:nth-of-type(even):last-child, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-table-striped > tr:nth-of-type(even):last-child, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-table-striped > tr:nth-of-type(even):last-child, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-table-striped > tr:nth-of-type(even):last-child, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-table-striped > tr:nth-of-type(even):last-child, .rmcc-card-primary.rmcc-card-body .rmcc-table-striped > tr:nth-of-type(even):last-child, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-table-striped > tr:nth-of-type(even):last-child, .rmcc-card-secondary.rmcc-card-body .rmcc-table-striped > tr:nth-of-type(even):last-child, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-table-striped > tr:nth-of-type(even):last-child, .rmcc-overlay-primary .rmcc-table-striped > tr:nth-of-type(even):last-child, .rmcc-offcanvas-bar .rmcc-table-striped > tr:nth-of-type(even):last-child,
.rmcc-light .rmcc-table-striped tbody tr:nth-of-type(even):last-child,
.rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-table-striped tbody tr:nth-of-type(even):last-child,
.rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-table-striped tbody tr:nth-of-type(even):last-child,
.rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-table-striped tbody tr:nth-of-type(even):last-child,
.rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-table-striped tbody tr:nth-of-type(even):last-child,
.rmcc-card-primary.rmcc-card-body .rmcc-table-striped tbody tr:nth-of-type(even):last-child,
.rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-table-striped tbody tr:nth-of-type(even):last-child,
.rmcc-card-secondary.rmcc-card-body .rmcc-table-striped tbody tr:nth-of-type(even):last-child,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-table-striped tbody tr:nth-of-type(even):last-child,
.rmcc-overlay-primary .rmcc-table-striped tbody tr:nth-of-type(even):last-child,
.rmcc-offcanvas-bar .rmcc-table-striped tbody tr:nth-of-type(even):last-child {
  border-bottom-color: rgba(255, 255, 255, 0.2);
}
.rmcc-light .rmcc-text-lead, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-text-lead, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-text-lead, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-text-lead, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-text-lead, .rmcc-card-primary.rmcc-card-body .rmcc-text-lead, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-text-lead, .rmcc-card-secondary.rmcc-card-body .rmcc-text-lead, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-text-lead, .rmcc-overlay-primary .rmcc-text-lead, .rmcc-offcanvas-bar .rmcc-text-lead {
  color: rgba(255, 255, 255, 0.7);
}
.rmcc-light .rmcc-text-meta, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-text-meta, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-text-meta, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-text-meta, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-text-meta, .rmcc-card-primary.rmcc-card-body .rmcc-text-meta, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-text-meta, .rmcc-card-secondary.rmcc-card-body .rmcc-text-meta, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-text-meta, .rmcc-overlay-primary .rmcc-text-meta, .rmcc-offcanvas-bar .rmcc-text-meta {
  color: rgba(255, 255, 255, 0.5);
}
.rmcc-light .rmcc-text-muted, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-text-muted, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-text-muted, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-text-muted, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-text-muted, .rmcc-card-primary.rmcc-card-body .rmcc-text-muted, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-text-muted, .rmcc-card-secondary.rmcc-card-body .rmcc-text-muted, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-text-muted, .rmcc-overlay-primary .rmcc-text-muted, .rmcc-offcanvas-bar .rmcc-text-muted {
  color: rgba(255, 255, 255, 0.5) !important;
}
.rmcc-light .rmcc-text-emphasis, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-text-emphasis, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-text-emphasis, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-text-emphasis, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-text-emphasis, .rmcc-card-primary.rmcc-card-body .rmcc-text-emphasis, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-text-emphasis, .rmcc-card-secondary.rmcc-card-body .rmcc-text-emphasis, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-text-emphasis, .rmcc-overlay-primary .rmcc-text-emphasis, .rmcc-offcanvas-bar .rmcc-text-emphasis {
  color: #fff !important;
}
.rmcc-light .rmcc-text-primary, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-text-primary, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-text-primary, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-text-primary, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-text-primary, .rmcc-card-primary.rmcc-card-body .rmcc-text-primary, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-text-primary, .rmcc-card-secondary.rmcc-card-body .rmcc-text-primary, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-text-primary, .rmcc-overlay-primary .rmcc-text-primary, .rmcc-offcanvas-bar .rmcc-text-primary {
  color: #fff !important;
}
.rmcc-light .rmcc-text-secondary, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-text-secondary, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-text-secondary, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-text-secondary, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-text-secondary, .rmcc-card-primary.rmcc-card-body .rmcc-text-secondary, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-text-secondary, .rmcc-card-secondary.rmcc-card-body .rmcc-text-secondary, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-text-secondary, .rmcc-overlay-primary .rmcc-text-secondary, .rmcc-offcanvas-bar .rmcc-text-secondary {
  color: #fff !important;
}
.rmcc-light .rmcc-thumbnav > * > *::after, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-thumbnav > * > *::after, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-thumbnav > * > *::after, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-thumbnav > * > *::after, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-thumbnav > * > *::after, .rmcc-card-primary.rmcc-card-body .rmcc-thumbnav > * > *::after, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-thumbnav > * > *::after, .rmcc-card-secondary.rmcc-card-body .rmcc-thumbnav > * > *::after, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-thumbnav > * > *::after, .rmcc-overlay-primary .rmcc-thumbnav > * > *::after, .rmcc-offcanvas-bar .rmcc-thumbnav > * > *::after {
  background-image: linear-gradient(180deg, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.4));
}
.rmcc-light .rmcc-totop, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-totop, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-totop, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-totop, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-totop, .rmcc-card-primary.rmcc-card-body .rmcc-totop, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-totop, .rmcc-card-secondary.rmcc-card-body .rmcc-totop, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-totop, .rmcc-overlay-primary .rmcc-totop, .rmcc-offcanvas-bar .rmcc-totop {
  color: rgba(255, 255, 255, 0.5);
}
.rmcc-light .rmcc-totop:hover, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-totop:hover, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-totop:hover, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-totop:hover, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-totop:hover, .rmcc-card-primary.rmcc-card-body .rmcc-totop:hover, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-totop:hover, .rmcc-card-secondary.rmcc-card-body .rmcc-totop:hover, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-totop:hover, .rmcc-overlay-primary .rmcc-totop:hover, .rmcc-offcanvas-bar .rmcc-totop:hover {
  color: rgba(255, 255, 255, 0.7);
}
.rmcc-light .rmcc-totop:active, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-totop:active, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-totop:active, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-totop:active, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-totop:active, .rmcc-card-primary.rmcc-card-body .rmcc-totop:active, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-totop:active, .rmcc-card-secondary.rmcc-card-body .rmcc-totop:active, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-totop:active, .rmcc-overlay-primary .rmcc-totop:active, .rmcc-offcanvas-bar .rmcc-totop:active {
  color: #fff;
}
.rmcc-light .rmcc-logo, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-logo, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-logo, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-logo, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-logo, .rmcc-card-primary.rmcc-card-body .rmcc-logo, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-logo, .rmcc-card-secondary.rmcc-card-body .rmcc-logo, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-logo, .rmcc-overlay-primary .rmcc-logo, .rmcc-offcanvas-bar .rmcc-logo {
  color: #fff;
}
.rmcc-light .rmcc-logo:hover, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-logo:hover, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-logo:hover, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-logo:hover, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-logo:hover, .rmcc-card-primary.rmcc-card-body .rmcc-logo:hover, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-logo:hover, .rmcc-card-secondary.rmcc-card-body .rmcc-logo:hover, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-logo:hover, .rmcc-overlay-primary .rmcc-logo:hover, .rmcc-offcanvas-bar .rmcc-logo:hover {
  color: #fff;
}
.rmcc-light .rmcc-logo:has(.rmcc-logo-inverse) > :not(picture:has(.rmcc-logo-inverse)):not(.rmcc-logo-inverse), .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-logo:has(.rmcc-logo-inverse) > :not(picture:has(.rmcc-logo-inverse)):not(.rmcc-logo-inverse), .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-logo:has(.rmcc-logo-inverse) > :not(picture:has(.rmcc-logo-inverse)):not(.rmcc-logo-inverse), .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-logo:has(.rmcc-logo-inverse) > :not(picture:has(.rmcc-logo-inverse)):not(.rmcc-logo-inverse), .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-logo:has(.rmcc-logo-inverse) > :not(picture:has(.rmcc-logo-inverse)):not(.rmcc-logo-inverse), .rmcc-card-primary.rmcc-card-body .rmcc-logo:has(.rmcc-logo-inverse) > :not(picture:has(.rmcc-logo-inverse)):not(.rmcc-logo-inverse), .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-logo:has(.rmcc-logo-inverse) > :not(picture:has(.rmcc-logo-inverse)):not(.rmcc-logo-inverse), .rmcc-card-secondary.rmcc-card-body .rmcc-logo:has(.rmcc-logo-inverse) > :not(picture:has(.rmcc-logo-inverse)):not(.rmcc-logo-inverse), .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-logo:has(.rmcc-logo-inverse) > :not(picture:has(.rmcc-logo-inverse)):not(.rmcc-logo-inverse), .rmcc-overlay-primary .rmcc-logo:has(.rmcc-logo-inverse) > :not(picture:has(.rmcc-logo-inverse)):not(.rmcc-logo-inverse), .rmcc-offcanvas-bar .rmcc-logo:has(.rmcc-logo-inverse) > :not(picture:has(.rmcc-logo-inverse)):not(.rmcc-logo-inverse) {
  display: none;
}
.rmcc-light .rmcc-logo-inverse, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-logo-inverse, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-logo-inverse, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-logo-inverse, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-logo-inverse, .rmcc-card-primary.rmcc-card-body .rmcc-logo-inverse, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-logo-inverse, .rmcc-card-secondary.rmcc-card-body .rmcc-logo-inverse, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-logo-inverse, .rmcc-overlay-primary .rmcc-logo-inverse, .rmcc-offcanvas-bar .rmcc-logo-inverse {
  display: block;
}
.rmcc-light .rmcc-accordion-title::before, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-accordion-title::before, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-accordion-title::before, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-accordion-title::before, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-accordion-title::before, .rmcc-card-primary.rmcc-card-body .rmcc-accordion-title::before, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-accordion-title::before, .rmcc-card-secondary.rmcc-card-body .rmcc-accordion-title::before, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-accordion-title::before, .rmcc-overlay-primary .rmcc-accordion-title::before, .rmcc-offcanvas-bar .rmcc-accordion-title::before {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2213%22%20height%3D%2213%22%20viewBox%3D%220%200%2013%2013%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Crect%20fill%3D%22rgba(255, 255, 255, 0.7)%22%20width%3D%2213%22%20height%3D%221%22%20x%3D%220%22%20y%3D%226%22%20%2F%3E%0A%20%20%20%20%3Crect%20fill%3D%22rgba(255, 255, 255, 0.7)%22%20width%3D%221%22%20height%3D%2213%22%20x%3D%226%22%20y%3D%220%22%20%2F%3E%0A%3C%2Fsvg%3E");
}
.rmcc-light .rmcc-open > .rmcc-accordion-title::before, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-open > .rmcc-accordion-title::before, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-open > .rmcc-accordion-title::before, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-open > .rmcc-accordion-title::before, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-open > .rmcc-accordion-title::before, .rmcc-card-primary.rmcc-card-body .rmcc-open > .rmcc-accordion-title::before, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-open > .rmcc-accordion-title::before, .rmcc-card-secondary.rmcc-card-body .rmcc-open > .rmcc-accordion-title::before, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-open > .rmcc-accordion-title::before, .rmcc-overlay-primary .rmcc-open > .rmcc-accordion-title::before, .rmcc-offcanvas-bar .rmcc-open > .rmcc-accordion-title::before {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2213%22%20height%3D%2213%22%20viewBox%3D%220%200%2013%2013%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Crect%20fill%3D%22rgba(255, 255, 255, 0.7)%22%20width%3D%2213%22%20height%3D%221%22%20x%3D%220%22%20y%3D%226%22%20%2F%3E%0A%3C%2Fsvg%3E");
}
.rmcc-light .rmcc-table-striped > tr:nth-of-type(even):last-child, .rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-table-striped > tr:nth-of-type(even):last-child, .rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-table-striped > tr:nth-of-type(even):last-child, .rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-table-striped > tr:nth-of-type(even):last-child, .rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-table-striped > tr:nth-of-type(even):last-child, .rmcc-card-primary.rmcc-card-body .rmcc-table-striped > tr:nth-of-type(even):last-child, .rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-table-striped > tr:nth-of-type(even):last-child, .rmcc-card-secondary.rmcc-card-body .rmcc-table-striped > tr:nth-of-type(even):last-child, .rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-table-striped > tr:nth-of-type(even):last-child, .rmcc-overlay-primary .rmcc-table-striped > tr:nth-of-type(even):last-child, .rmcc-offcanvas-bar .rmcc-table-striped > tr:nth-of-type(even):last-child,
.rmcc-light .rmcc-table-striped tbody tr:nth-of-type(even):last-child,
.rmcc-section-primary:not(.rmcc-preserve-color) .rmcc-table-striped tbody tr:nth-of-type(even):last-child,
.rmcc-section-secondary:not(.rmcc-preserve-color) .rmcc-table-striped tbody tr:nth-of-type(even):last-child,
.rmcc-tile-primary:not(.rmcc-preserve-color) .rmcc-table-striped tbody tr:nth-of-type(even):last-child,
.rmcc-tile-secondary:not(.rmcc-preserve-color) .rmcc-table-striped tbody tr:nth-of-type(even):last-child,
.rmcc-card-primary.rmcc-card-body .rmcc-table-striped tbody tr:nth-of-type(even):last-child,
.rmcc-card-primary > :not([class*=rmcc-card-media]) .rmcc-table-striped tbody tr:nth-of-type(even):last-child,
.rmcc-card-secondary.rmcc-card-body .rmcc-table-striped tbody tr:nth-of-type(even):last-child,
.rmcc-card-secondary > :not([class*=rmcc-card-media]) .rmcc-table-striped tbody tr:nth-of-type(even):last-child,
.rmcc-overlay-primary .rmcc-table-striped tbody tr:nth-of-type(even):last-child,
.rmcc-offcanvas-bar .rmcc-table-striped tbody tr:nth-of-type(even):last-child {
  border-bottom-color: rgba(255, 255, 255, 0.2);
}

/*
 * Pass dropbar behind color to JS
 */
* {
  --rmcc-inverse: initial;
}

.rmcc-light, .rmcc-section-primary:not(.rmcc-preserve-color), .rmcc-section-secondary:not(.rmcc-preserve-color), .rmcc-tile-primary:not(.rmcc-preserve-color), .rmcc-tile-secondary:not(.rmcc-preserve-color), .rmcc-card-primary.rmcc-card-body, .rmcc-card-primary > :not([class*=rmcc-card-media]), .rmcc-card-secondary.rmcc-card-body, .rmcc-card-secondary > :not([class*=rmcc-card-media]), .rmcc-overlay-primary, .rmcc-offcanvas-bar {
  --rmcc-inverse: light;
}

.rmcc-dark, .rmcc-section-default:not(.rmcc-preserve-color), .rmcc-section-muted:not(.rmcc-preserve-color), .rmcc-tile-default:not(.rmcc-preserve-color), .rmcc-tile-muted:not(.rmcc-preserve-color), .rmcc-card-default.rmcc-card-body, .rmcc-card-default > :not([class*=rmcc-card-media]), .rmcc-overlay-default, .rmcc-dropbar, .rmcc-navbar-container:not(.rmcc-navbar-transparent), .rmcc-navbar-dropdown, .rmcc-dropdown {
  --rmcc-inverse: dark;
}

.rmcc-inverse-light {
  --rmcc-inverse: light !important;
}

.rmcc-inverse-dark {
  --rmcc-inverse: dark !important;
}

/* ========================================================================
   Component: Print
 ========================================================================== */
@media print {
  *,
  *::before,
  *::after {
    background: transparent !important;
    color: black !important;
    box-shadow: none !important;
    text-shadow: none !important;
  }
  a,
  a:visited {
    text-decoration: underline;
  }
  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid;
  }
  thead {
    display: table-header-group;
  }
  tr,
  img {
    page-break-inside: avoid;
  }
  img {
    max-width: 100% !important;
  }
  @page {
    margin: 0.5cm;
  }
  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }
  h2,
  h3 {
    page-break-after: avoid;
  }
}
.theme-primary-bg {
  background-color: #23259c;
}

.theme-muted-primary-bg {
  background-color: #454556;
}

.theme-primary-bg-dark {
  background-color: #0d0e27;
}

.theme-dark-bg {
  background: #1e1e1e;
}

.overlay-wrap:after {
  content: "";
  display: block;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  height: 100%;
  width: 100%;
  z-index: auto;
}

.primary-overlay-hover:after,
.default-overlay-hover:after {
  background-color: none;
  transition: 0.5s ease;
}

.primary-overlay-hover:hover:after {
  background-color: rgba(34, 34, 34, 0.8);
}

.default-overlay-hover:hover:after {
  background-color: rgba(255, 255, 255, 0.8);
}

.primary-overlay:after {
  background-color: rgba(34, 34, 34, 0.8);
}

.default-overlay:after {
  background-color: rgba(255, 255, 255, 0.8);
}

.rmcc-overlay-faint {
  background: rgba(0, 0, 0, 0.25);
}

.rmcc-overlay-medium {
  background: rgba(30, 30, 30, 0.4);
}

.rmcc-overlay-greypurple {
  background: rgba(69, 69, 86, 0.45);
}

.theme-border {
  border: 1px solid #e5e5e5;
}

.theme-border-top {
  border-top: 1px solid #e5e5e5;
}

.theme-border-bottom {
  border-bottom: 1px solid #e5e5e5;
}

.theme-border-left {
  border-left: 1px solid #e5e5e5;
}

.theme-border-right {
  border-right: 1px solid #e5e5e5;
}

.rmcc-light .theme-border {
  border: 1px solid rgba(255, 255, 255, 0.25);
}
.rmcc-light .theme-border-top {
  border-top: 1px solid rgba(255, 255, 255, 0.25);
}
.rmcc-light .theme-border-bottom {
  border-bottom: 1px solid rgba(255, 255, 255, 0.25);
}
.rmcc-light .theme-border-left {
  border-left: 1px solid rgba(255, 255, 255, 0.25);
}
.rmcc-light .theme-border-right {
  border-right: 1px solid rgba(255, 255, 255, 0.25);
}

.theme-divider {
  display: flex;
  flex-wrap: wrap;
  margin-left: -20px;
  position: relative;
  padding: 0;
}

.theme-divider::before {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  bottom: auto;
  left: 20px;
  border-bottom: 1px solid #e5e5e5;
}

.theme-divider::after {
  content: "";
  position: absolute;
  top: -1px;
  right: 0;
  bottom: 0;
  left: 20px;
  border-bottom: 2px solid #e5e5e5;
  width: 40px;
}

.rmcc-border-rounded.rounded-bottom-only {
  border-radius: 0px 0px 5px 5px;
}

.rmcc-light hr,
hr.rmcc-light {
  border-top-color: rgba(255, 255, 255, 0.25);
}

.border-full {
  border-radius: 100%;
}

.break-wrap .rmcc-container-break, .gutenberg-editor .rmcc-container-break {
  position: relative;
  left: 50%;
  right: 50%;
  margin-left: -50%;
  width: 100%;
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
@keyframes reveal {
  from {
    transform: scale(0.001);
  }
  to {
    transform: scale(1);
  }
}
@keyframes slide {
  to {
    transform: translateX(1.5em);
  }
}
@keyframes fade {
  from {
    opacity: 0.4;
  }
  to {
    opacity: 1;
  }
}
/* Fading animation */
.fade {
  animation-name: fade;
  animation-duration: 1.5s;
}

.preloader::before {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  top: 45vh;
  margin-left: auto;
  margin-right: auto;
  width: 80px;
  height: 80px;
  border: 2px solid #f3f3f3;
  border-top: 3px solid #666;
  border-radius: 100%;
  will-change: transform;
  animation: spin 1s infinite linear;
  z-index: 992;
}

.preloader::after {
  content: "";
  position: absolute;
  background-color: #fff;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 991;
}

.preloader {
  visibility: visible;
  opacity: 992;
  transition: opacity 0.4s linear;
}

.preloader.hidden {
  visibility: hidden;
  opacity: 0;
  transition: visibility 0s 0.4s, opacity 0.4s linear;
}

#loading,
#loaderSearch {
  display: inline-block;
  vertical-align: middle;
  width: 13px;
  height: 13px;
  border: 2px solid rgba(180, 180, 180, 0.5);
  border-radius: 13px;
  border-top-color: #666;
  animation: spin 1s ease-in-out infinite;
  -webkit-animation: spin 1s ease-in-out infinite;
}

#DemoPostsGrid {
  min-height: 600px;
}

.demo-archive-posts .rmcc-background-secondary {
  background-color: #999;
}
.demo-archive-posts .demo-text {
  height: 30px;
}
.demo-archive-posts .demo-text-first {
  height: 15px;
  margin-top: 15px;
  margin-bottom: 0px;
}

.page-load-status {
  display: none;
  text-align: center;
  color: #454556;
}

.loader-ellips {
  font-size: 1.25rem;
  position: relative;
  width: 4em;
  height: 1em;
  margin: 10px auto;
}

.loader-ellips__dot {
  display: block;
  width: 1em;
  height: 1em;
  border-radius: 0.5em;
  background: #454556;
  position: absolute;
  animation-duration: 0.5s;
  animation-timing-function: ease;
  animation-iteration-count: infinite;
}
.loader-ellips__dot:nth-child(1) {
  left: 0;
  animation-name: reveal;
}
.loader-ellips__dot:nth-child(2) {
  left: 0;
  animation-name: slide;
}
.loader-ellips__dot:nth-child(3) {
  left: 1.5em;
  animation-name: slide;
}
.loader-ellips__dot:nth-child(4) {
  left: 3em;
  animation-name: reveal;
  animation-direction: reverse;
}

.quickloader {
  border: none;
}

.quickloader::before {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  top: 50%;
  bottom: 50%;
  margin-left: auto;
  margin-right: auto;
  width: 70px;
  height: 70px;
  border: 2px solid #1e1e1e;
  border-top: 3px solid #23259c;
  border-radius: 100%;
  will-change: transform;
  animation: spin 1s infinite linear;
  z-index: 1;
}

.quickloader::after {
  content: "";
  position: absolute;
  background-color: rgba(255, 255, 255, 0.8);
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.rmcc-position-top-right.outside {
  top: -50px;
  right: -20px;
  z-index: 1;
}

.cover-img {
  object-fit: cover;
}

.no-overflow,
.overflow-contained {
  overflow: hidden;
}

.theme-position {
  position: absolute;
  box-sizing: border-box;
  width: -webkit-fill-available;
  max-width: 100%;
}

.position-middle {
  top: 50%;
  transform: translate(-30px, -50%);
}

.position-top {
  top: 0;
  left: 0;
  right: 0;
}

.position-bottom {
  top: auto;
  left: 0;
  right: 0;
  bottom: 0;
}

.padding-10 {
  padding: 10px;
}

.padding-15 {
  padding: 15px;
}

.padding-20 {
  padding: 20px;
}

.padding-20-0 {
  padding: 20px 0;
}

.padding-top-30 {
  padding-top: 30px;
}

.padding-bottom-30 {
  padding-bottom: 30px;
}

.padding-left-40 {
  padding-left: 40px;
}

.padding-10-20-0-20 {
  padding: 10px 20px 0;
}

.padding-10-0-0-0 {
  padding: 10px 0 0 0;
}

.padding-remove-bottom {
  padding-bottom: 0;
}

.padding-remove-top {
  padding-top: 0;
}

.padding-0-10 {
  padding: 0 10px;
}

.padding-top-20 {
  padding-top: 20px;
}

.padding-top-10 {
  padding-top: 10px;
}

.padding-bottom-20 {
  padding-bottom: 20px;
}

.padding-0-0-0-20 {
  padding: 0 0 0 20px;
}

.padding-5 {
  padding: 5px;
}

.padding-left-3 {
  padding-left: 3px;
}

.margin-top-30 {
  margin-top: 30px !important;
}

.margin-right-2 {
  margin-right: 2px !important;
}

.margin-left-2 {
  margin-left: 2%;
}

.pull-right-20 {
  margin-right: -20px !important;
}

.pull-right-30 {
  margin-right: -30px !important;
}

.pull-right-15 {
  margin-right: -15px !important;
}

.pull-right-10 {
  margin-right: -10px !important;
}

.pull-right-25 {
  margin-right: -25px !important;
}

.pull-right-40 {
  margin-right: -40px !important;
}

.pull-left-8 {
  margin-left: -8px !important;
}

.pull-left-15 {
  margin-left: -15px !important;
}

.pull-left-10 {
  margin-left: -10px !important;
}

.pull-left-20 {
  margin-left: -20px !important;
}

.pull-left-25 {
  margin-left: -25px !important;
}

.pull-left-15 {
  margin-left: -15px !important;
}

.pull-up-3 {
  margin-top: -3px !important;
}

.pull-up-50 {
  margin-top: -50px;
}

.pull-up-15 {
  margin-top: -15px;
}

.pull-up-5 {
  margin-top: -5px;
}

.pull-up-2 {
  margin-top: -2px;
}

.pull-up-1-1 {
  margin-top: -100%;
}

.pull-down-6 {
  margin-bottom: -6px !important;
}

.pull-position-down-20 {
  bottom: -20px !important;
}

.push-left-5 {
  padding-left: 5px;
}

.push-left-7 {
  margin-left: 7px !important;
}

.push-right-5 {
  margin-right: 5px;
}

.push-up-5 {
  padding-top: 5px;
}

.min-height-40 {
  min-height: 40px !important;
}

.min-height-small {
  min-height: 150px;
}

.min-height-medium {
  min-height: 300px;
}

.min-height-large {
  min-height: 450px;
}

.position-11 {
  z-index: 11;
}

.container-wrap-10 {
  padding-left: 10px;
  padding-right: 10px;
}

.height-content {
  height: fit-content;
}

.min-height-content {
  min-height: fit-content !important;
}

.height-50 {
  height: 50px;
}

.width-49 {
  width: 49%;
}

.dotted-subs > :not(:first-child) {
  margin-left: 20px;
}

.dotted-subs > :not(:last-child)::after {
  content: "â€¢";
  display: inline-block;
  position: absolute;
  margin-left: 5px;
  font-weight: 700;
}

input.rmcc-form-small {
  height: 30px;
}

figcaption.rmcc-padding-small {
  padding: 5px;
}

article.post.item.rmcc-article .rmcc-article-title {
  font-size: 1.5rem;
}

.single-excerpt .rmcc-dropcap:first-letter,
.single-excerpt .rmcc-dropcap > p:first-of-type:first-letter {
  margin-top: -5px;
}

a.dont-underline:hover, a.dont-underline:focus, .dont-underline:hover, .dont-underline:focus,
.rmcc-link-toggle:focus .rmcc-link, .rmcc-link-toggle:hover .rmcc-link, .rmcc-link:hover, a:hover {
  text-decoration: none;
}

/* dark backgrounds */
.rmcc-light {
  background: #222;
}

.rmcc-light .rmcc-modal-dialog {
  background: #222;
}

.rmcc-light .rmcc-navbar-dropdown {
  background: #222;
}

.rmcc-light .rmcc-section-default {
  background: #222;
}

.rmcc-light .rmcc-background-default {
  background: #222;
}

/* dark muted backgrounds */
.rmcc-light .rmcc-background-muted,
.rmcc-light .rmcc-modal-close-full,
.rmcc-light .rmcc-section-muted,
.rmcc-light .rmcc-tile-muted {
  background: #333;
}

.rmcc-light .rmcc-comment-primary {
  background-color: #333;
}

/* links */
.rmcc-light .rmcc-navbar-dropdown-nav > li > a {
  color: rgba(255, 255, 255, 0.5);
}

/* links focus/hover */
.rmcc-light .rmcc-navbar-dropdown-nav > li > a:focus {
  color: rgba(255, 255, 255, 0.7);
}

.rmcc-light .rmcc-navbar-dropdown-nav > li > a:hover {
  color: rgba(255, 255, 255, 0.7);
}

/* borders */
.rmcc-light .theme-border {
  border: 1px solid rgba(255, 255, 255, 0.2);
}

.rmcc-light .theme-border-top {
  border-top: 1px solid rgba(255, 255, 255, 0.2);
}

.rmcc-light .theme-border-right {
  border-right: 1px solid rgba(255, 255, 255, 0.2);
}

.rmcc-light .theme-border-bottom,
.rmcc-light .the-header.rmcc-sticky-below {
  border-bottom: 1px solid rgba(255, 255, 255, 0.2);
}

.rmcc-light .theme-border-left {
  border-left: 1px solid rgba(255, 255, 255, 0.2);
}

.prevent-unclick:checked,
.prevent-unclick:checked:focus,
.prevent-unclick:indeterminate:focus {
  background-color: #f8f8f8;
  border-color: #e5e5e5;
  background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg width='14' height='11' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill='%23b4b4b4' d='M12 1 5 7.5 2 5l-1 .5L5 10l8-8.5z'/%3E%3C/svg%3E");
}

.filter-btn {
  color: #666;
  position: relative;
  display: inline-block;
  padding: 5px 20px;
  font-size: 0.875rem;
  text-transform: lowercase;
  transform-style: preserve-3d;
}

.filter-btn:before {
  transition: all 0.15s linear 0s;
  background-color: #fff;
  box-shadow: -2px 2px 0 #afafaf;
  border-radius: 3px;
  content: "";
  display: block;
  position: absolute;
  top: -2px;
  bottom: 0;
  left: 2px;
  right: 0;
  width: 100%;
  height: 100%;
  transform: translateZ(-1px);
}

.filter-btn > span {
  top: -2px;
  left: 2px;
  position: relative;
  transition: all 0.15s linear 0s;
  color: #666;
}

.filter-btn:hover:before {
  top: 0px;
  left: 0px;
  box-shadow: none;
}

.filter-btn:hover > span {
  position: relative;
  top: 0px;
  left: 0px;
  color: #afafaf;
}

.filter-btn:active:before {
  top: 0px;
  left: 0px;
  box-shadow: none;
}

.filter-btn.theme-active:before {
  top: -1px;
  left: 1px;
  box-shadow: none;
}

.filter-btn.theme-active:before {
  border: 1px solid #f3f3f3;
}

.filter-btn:active > span {
  position: relative;
  top: 0px;
  left: 0px;
  color: #afafaf;
}

.filter-btn.theme-active > span {
  position: relative;
  top: -1px;
  left: 1px;
  color: #afafaf;
}

.filter-btn::-moz-selection,
.filter-btn > span::-moz-selection {
  color: inherit;
  background: none;
}

.filter-btn::selection,
.filter-btn > span::selection {
  color: inherit;
  background: none;
}

.live-search-form-main.rmcc-grid-small > * {
  padding-left: 10px;
}

.filter-area {
  visibility: hidden;
  position: absolute;
}

.filter-area.theme-show {
  visibility: visible;
  position: relative;
}

.theme-hidden {
  visibility: hidden;
  position: absolute;
}

@media (min-width: 960px) {
  #FiltersFormMainArea .rmcc-width-auto\@m {
    width: auto;
    flex: initial;
    min-width: fit-content;
  }
}